components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    ReturnType_typeofbankingEntityResponseSchema.parse_:
      properties:
        activeComplianceApplication:
          properties:
            kyxRequirements:
              items:
                anyOf:
                  - properties:
                      candidates:
                        items:
                          properties:
                            primaryApplicantCandidate:
                              type: boolean
                            deepLinkUrl:
                              type: string
                            kycApplicationId:
                              type: string
                            verified:
                              type: boolean
                          type: object
                        type: array
                      condition:
                        type: string
                        enum:
                          - ONE_OF
                          - ALL
                      role:
                        type: string
                        enum:
                          - UBO
                          - DIRECTOR
                          - OWNER
                          - PARTNER
                          - TRUSTEE
                          - SIGNATORY
                          - APPOINTER
                          - BENEFICIARY
                      type:
                        type: string
                        enum:
                          - KYC_REQUIREMENT
                        nullable: false
                    type: object
                  - properties:
                      candidates:
                        items:
                          properties:
                            kybApplicationId:
                              type: string
                            deepLinkUrl:
                              type: string
                            verified:
                              type: boolean
                          type: object
                        type: array
                      condition:
                        type: string
                        enum:
                          - ONE_OF
                          - ALL
                      role:
                        type: string
                        enum:
                          - UBO
                          - PARTNER
                          - TRUSTEE
                      type:
                        type: string
                        enum:
                          - KYB_REQUIREMENT
                        nullable: false
                    type: object
              type: array
            outcome:
              type: string
              enum:
                - PENDING
                - SUPPORTED
                - NOT_SUPPORTED
            purpose:
              type: string
              enum:
                - ORIGINATION
                - OCDD
            complianceApplicationId:
              type: string
            status:
              type: string
              enum:
                - NOT_STARTED
                - IN_PROGRESS
                - DONE
            creatorId:
              type: string
            bankingEntityId:
              type: string
          type: object
        businessDetails:
          properties:
            phoneNumber:
              type: string
            emailAddress:
              type: string
            registeredDate:
              type: string
            registeredOffice:
              properties:
                unitNumber:
                  type: string
                suburb:
                  type: string
                streetType:
                  type: string
                streetNumber:
                  type: string
                streetName:
                  type: string
                state:
                  type: string
                postalCode:
                  type: string
                fullAddress:
                  type: string
                dpid:
                  type: string
                country:
                  type: string
                type:
                  type: string
              type: object
            placeOfBusiness:
              properties:
                unitNumber:
                  type: string
                suburb:
                  type: string
                streetType:
                  type: string
                streetNumber:
                  type: string
                streetName:
                  type: string
                state:
                  type: string
                postalCode:
                  type: string
                fullAddress:
                  type: string
                dpid:
                  type: string
                country:
                  type: string
                type:
                  type: string
              type: object
            arbn:
              type: string
            acn:
              type: string
            abn:
              type: string
            businessNames:
              items:
                type: string
              type: array
            registeredName:
              type: string
            type:
              type: string
          type: object
        nickname:
          type: string
        f1EntityId:
          type: string
        type:
          type: string
          enum:
            - INDIVIDUAL
            - BUSINESS
        status:
          type: string
          enum:
            - PENDING
            - ACTIVE
            - SUSPENDED
            - CLOSED
            - REJECTED
        creatorId:
          type: string
        bankingEntityId:
          type: string
      type: object
      description: Obtain the return type of a function type
    BankingEntityResponse:
      $ref: '#/components/schemas/ReturnType_typeofbankingEntityResponseSchema.parse_'
    Partial_any_:
      properties: {}
      type: object
      description: Make all properties in T optional
    Pick_EntityConfigItem.-or-configId-or-configuration-or-dateCreated-or-dateUpdated-or-updatedBy-or-entityAccountId_:
      properties: {}
      type: object
      description: From T, pick a set of properties whose keys are in the union K
    PublicEntityConfig:
      $ref: >-
        #/components/schemas/Pick_EntityConfigItem.-or-configId-or-configuration-or-dateCreated-or-dateUpdated-or-updatedBy-or-entityAccountId_
    ReturnType_typeofpatchEntityConfigValidator.parse_:
      anyOf:
        - properties:
            configuration:
              properties:
                enabled:
                  type: boolean
              type: object
            configId:
              type: string
              enum:
                - authorizedPayments
              nullable: false
          type: object
        - properties:
            configuration:
              properties:
                dailyLimit:
                  type: number
                  format: double
              type: object
            configId:
              type: string
              enum:
                - paymentLimits
              nullable: false
          type: object
      description: Obtain the return type of a function type
    PatchEntityConfig:
      $ref: '#/components/schemas/ReturnType_typeofpatchEntityConfigValidator.parse_'
    MFAControllerBodyParams:
      properties:
        mfaId:
          type: string
        mfaCode:
          type: string
        password:
          type: string
      type: object
      additionalProperties: false
    Partial_Record_BusinessConsentType.boolean__:
      properties:
        IDV_INFO_ACK:
          type: boolean
        IDV_ACK:
          type: boolean
      type: object
      description: Make all properties in T optional
    Partial_BusinessIdentityPublicMutableFields_:
      properties:
        placeOfBusiness: {}
        registeredOffice: {}
        emailAddress: {}
        phoneNumber: {}
      type: object
      description: Make all properties in T optional
    ReturnType_typeofkybApplicationB2CResponseSchema.parse_:
      properties:
        countryOfEstablishment:
          type: string
        businessQueryTriggered:
          type: boolean
        businessQueryCompleted:
          type: boolean
        kycRequirements:
          items:
            properties:
              candidates:
                items:
                  properties:
                    kycApplicationId:
                      type: string
                    verified:
                      type: boolean
                  type: object
                type: array
              condition:
                type: string
              role:
                type: string
            type: object
          type: array
        australianTaxResident:
          type: boolean
        primaryKycApplicationId:
          type: string
        applicationStatus:
          properties:
            status:
              type: string
          type: object
        primaryApplicantUserId:
          type: string
        orgStructure:
          items:
            properties:
              percentOwned:
                type: number
                format: double
              surname:
                type: string
              roles:
                items:
                  type: string
                type: array
              parentAbn:
                type: string
              middleName:
                type: string
              id:
                type: string
              givenName:
                type: string
              entityType:
                type: string
              dob:
                type: string
              kycApplicationId:
                type: string
              f1EntityId:
                type: string
            type: object
          type: array
        industryDivision:
          properties:
            name:
              type: string
            code:
              type: string
          type: object
        industryClass:
          properties:
            name:
              type: string
            code:
              type: string
          type: object
        dateUpdated:
          type: string
        dateCreated:
          type: string
        phoneNumber:
          type: string
        emailAddress:
          type: string
        registeredOffice:
          properties:
            unitNumber:
              type: string
            suburb:
              type: string
            streetType:
              type: string
            streetNumber:
              type: string
            streetName:
              type: string
            state:
              type: string
            postalCode:
              type: string
            fullAddress:
              type: string
            dpid:
              type: string
            country:
              type: string
            type:
              type: string
          type: object
        placeOfBusiness:
          properties:
            unitNumber:
              type: string
            suburb:
              type: string
            streetType:
              type: string
            streetNumber:
              type: string
            streetName:
              type: string
            state:
              type: string
            postalCode:
              type: string
            fullAddress:
              type: string
            dpid:
              type: string
            country:
              type: string
            type:
              type: string
          type: object
        state:
          type: string
        arbn:
          type: string
        acn:
          type: string
        abn:
          type: string
        businessNames:
          items:
            type: string
          type: array
        registeredName:
          type: string
        type:
          type: string
        bankingEntityId:
          type: string
      type: object
      description: Obtain the return type of a function type
    KybApplicationB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofkybApplicationB2CResponseSchema.parse_
    KybApplicationStatus:
      type: string
      enum:
        - KYB_NOT_STARTED
        - KYB_IN_PROGRESS
        - KYB_REJECTED
        - KYB_APPROVED
    KybState:
      type: string
      enum:
        - AWAITING_CUSTOMER_CORE_BUSINESS_DETAILS
        - AWAITING_CUSTOMER_KYC_COMPLETE
        - AWAITING_OPS_OWNERSHIP_REVIEW
        - AWAITING_OPS_RISK_REVIEW
        - PERFORMING_BUSINESS_QUERY
        - PERFORMING_CRA
        - SUCCESS
        - FAILED
    KybAddress_basic:
      properties:
        country:
          type: string
        dpid:
          type: string
        fullAddress:
          type: string
        postalCode:
          type: string
        state:
          type: string
        streetName:
          type: string
        streetNumber:
          type: string
        streetType:
          type: string
        suburb:
          type: string
        type:
          type: string
          enum:
            - RESIDENTIAL1
            - RESIDENTIAL2
            - REGISTERED_OFFICE
            - PLACE_OF_BUSINESS
            - POSTAL
        unitNumber:
          type: string
        addressId:
          type: string
      required:
        - country
        - dpid
        - fullAddress
        - postalCode
        - state
        - streetName
        - streetNumber
        - streetType
        - suburb
        - type
      type: object
      additionalProperties: false
    OrgRoles:
      type: string
      enum:
        - UBO
        - DIRECTOR
        - OWNER
        - PARTNER
        - TRUSTEE
        - SIGNATORY
        - APPOINTER
        - BENEFICIARY
    OwnershipNodeType:
      type: string
      enum:
        - INDIVIDUAL
      nullable: false
    IndividualOwnershipNode:
      properties:
        id:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/OrgRoles'
          type: array
        percentOwned:
          type: number
          format: double
          nullable: true
        f1EntityId:
          type: string
        entityType:
          type: string
          enum:
            - INDIVIDUAL
          nullable: false
        parentAbn:
          type: string
        kycApplicationId:
          type: string
        givenName:
          type: string
        middleName:
          type: string
        surname:
          type: string
        dob:
          type: string
      required:
        - id
        - roles
        - percentOwned
        - entityType
        - kycApplicationId
        - givenName
        - surname
        - dob
      type: object
      additionalProperties: false
    OwnershipNode:
      $ref: '#/components/schemas/IndividualOwnershipNode'
    KycRequirementCondition:
      type: string
      enum:
        - ONE_OF
        - ALL
    KycRequirementCandidate:
      properties:
        primaryApplicantCandidate:
          type: boolean
        verified:
          type: boolean
        kycApplicationId:
          type: string
      required:
        - verified
        - kycApplicationId
      type: object
    KycRequirement:
      properties:
        candidates:
          items:
            $ref: '#/components/schemas/KycRequirementCandidate'
          type: array
        condition:
          $ref: '#/components/schemas/KycRequirementCondition'
        role:
          $ref: '#/components/schemas/OrgRoles'
      required:
        - candidates
        - condition
        - role
      type: object
    BaseCustomerTaskStatus:
      type: string
      enum:
        - DONE
        - NOT_DONE
        - INSUFFICIENT
        - REVIEW
    BaseCustomerTask_entityStructureDoc_:
      properties:
        message:
          type: string
        taskType:
          type: string
          enum:
            - entityStructureDoc
          nullable: false
        status:
          $ref: '#/components/schemas/BaseCustomerTaskStatus'
      required:
        - message
        - taskType
        - status
      type: object
    UploadDocTaskDocType:
      type: string
      enum:
        - TRUST_DEED
        - PARTNERSHIP_DEED
        - TRUST_UNIT_HOLDERS_REGISTER
    UploadDocTask:
      allOf:
        - $ref: '#/components/schemas/BaseCustomerTask_entityStructureDoc_'
        - properties:
            docType:
              $ref: '#/components/schemas/UploadDocTaskDocType'
          required:
            - docType
          type: object
    BaseCustomerTask_collectVerifyBeneficiaryProfile_:
      properties:
        message:
          type: string
        taskType:
          type: string
          enum:
            - collectVerifyBeneficiaryProfile
          nullable: false
        status:
          $ref: '#/components/schemas/BaseCustomerTaskStatus'
      required:
        - message
        - taskType
        - status
      type: object
    BaseCustomerTask_collectVerifySettlorProfile_:
      properties:
        message:
          type: string
        taskType:
          type: string
          enum:
            - collectVerifySettlorProfile
          nullable: false
        status:
          $ref: '#/components/schemas/BaseCustomerTaskStatus'
      required:
        - message
        - taskType
        - status
      type: object
    CollectVerifyTask:
      anyOf:
        - $ref: >-
            #/components/schemas/BaseCustomerTask_collectVerifyBeneficiaryProfile_
        - $ref: '#/components/schemas/BaseCustomerTask_collectVerifySettlorProfile_'
    CustomerTask:
      anyOf:
        - $ref: '#/components/schemas/UploadDocTask'
        - $ref: '#/components/schemas/CollectVerifyTask'
    IndividualNonKycProfile:
      properties:
        name:
          properties:
            surname:
              type: string
            middleName:
              type: string
            givenName:
              type: string
          required:
            - surname
            - givenName
          type: object
        isVerified:
          type: boolean
        id:
          type: string
        profileType:
          type: string
          enum:
            - INDIVIDUAL
          nullable: false
      required:
        - name
        - isVerified
        - id
        - profileType
      type: object
    EntityNonKycProfile:
      properties:
        entityName:
          type: string
        isVerified:
          type: boolean
        id:
          type: string
        profileType:
          type: string
          enum:
            - ORGANIZATION
          nullable: false
      required:
        - entityName
        - isVerified
        - id
        - profileType
      type: object
    NonKycProfile:
      anyOf:
        - $ref: '#/components/schemas/IndividualNonKycProfile'
        - $ref: '#/components/schemas/EntityNonKycProfile'
    SettlorResponses:
      type: string
      enum:
        - SETTLOR_CONTRIBUTION_WITHIN_LIMIT
        - SETTLOR_DECEASED
        - NONE_OF_THE_ABOVE
    EntitySpecificData:
      properties:
        settlor:
          properties:
            settlorProfile:
              $ref: '#/components/schemas/NonKycProfile'
            settlorPrecheckResponse:
              $ref: '#/components/schemas/SettlorResponses'
          type: object
        beneficiaries:
          items:
            $ref: '#/components/schemas/NonKycProfile'
          type: array
      type: object
    KybApplicationPublic:
      properties:
        userId:
          type: string
        businessEntityId:
          type: string
        applicationStatus:
          allOf:
            - properties:
                status:
                  $ref: '#/components/schemas/KybApplicationStatus'
              required:
                - status
              type: object
            - properties:
                message:
                  type: string
              type: object
        state:
          $ref: '#/components/schemas/KybState'
        registeredName:
          type: string
        abn:
          type: string
        acn:
          type: string
        type:
          type: string
          enum:
            - PRV
            - IND
            - LPT
            - FPT
            - PTR
            - DST
            - DTT
            - DIT
            - TRT
            - FUT
        registeredOffice:
          $ref: '#/components/schemas/KybAddress_basic'
        placeOfBusiness:
          $ref: '#/components/schemas/KybAddress_basic'
        emailAddress:
          type: string
        phoneNumber:
          type: string
        arbn:
          type: string
        industryClass:
          properties:
            code:
              type: string
            name:
              type: string
          required:
            - code
            - name
          type: object
        industryDivision:
          properties:
            code:
              type: string
            name:
              type: string
          required:
            - code
            - name
          type: object
        primaryKycApplicationId:
          type: string
        orgStructure:
          items:
            $ref: '#/components/schemas/OwnershipNode'
          type: array
        australianTaxResident:
          type: boolean
        kycRequirements:
          items:
            $ref: '#/components/schemas/KycRequirement'
          type: array
        businessNames:
          items:
            type: string
          type: array
        businessQueryCompleted:
          type: boolean
        businessQueryTriggered:
          type: boolean
        countryOfEstablishment:
          type: string
        customerTasks:
          items:
            $ref: '#/components/schemas/CustomerTask'
          type: array
        documents:
          items:
            properties:
              documentId:
                type: string
            required:
              - documentId
            type: object
          type: array
        entitySpecificData:
          $ref: '#/components/schemas/EntitySpecificData'
        nfeStatus:
          type: string
          enum:
            - ACTIVE
            - PASSIVE
            - NON-ELIGIBLE-ACTIVE
        nfeQuestionEarn:
          type: boolean
        nfeQuestionBusinessType:
          type: string
          enum:
            - holding-or-treasury
            - start-up-or-no-income
            - none-of-the-above
            - other-active-non-financial-entity
      required:
        - userId
        - businessEntityId
        - applicationStatus
        - state
        - registeredName
        - abn
        - type
        - emailAddress
        - phoneNumber
        - industryClass
        - industryDivision
        - primaryKycApplicationId
        - orgStructure
        - kycRequirements
        - businessNames
        - businessQueryCompleted
        - businessQueryTriggered
        - customerTasks
        - documents
        - entitySpecificData
      type: object
      additionalProperties: false
    Address_basic:
      properties:
        country:
          type: string
        dpid:
          type: string
        fullAddress:
          type: string
        postalCode:
          type: string
        state:
          type: string
        streetName:
          type: string
        streetNumber:
          type: string
        streetType:
          type: string
        suburb:
          type: string
        type:
          type: string
          enum:
            - RESIDENTIAL1
            - RESIDENTIAL2
            - REGISTERED_OFFICE
            - PLACE_OF_BUSINESS
            - POSTAL
        unitNumber:
          type: string
      required:
        - country
        - dpid
        - fullAddress
        - postalCode
        - state
        - streetName
        - streetNumber
        - streetType
        - suburb
        - type
      type: object
      additionalProperties: false
    Partial_KybApplicationMutableFields_:
      properties:
        abn:
          type: string
        acn:
          type: string
        registeredOffice:
          $ref: '#/components/schemas/Address_basic'
        placeOfBusiness:
          $ref: '#/components/schemas/Address_basic'
        emailAddress:
          type: string
        phoneNumber:
          type: string
        arbn:
          type: string
        industryClass:
          properties:
            code:
              type: string
            name:
              type: string
          required:
            - code
            - name
          type: object
        industryDivision:
          properties:
            code:
              type: string
            name:
              type: string
          required:
            - code
            - name
          type: object
        businessNames:
          items:
            type: string
          type: array
        australianTaxResident:
          type: boolean
        countryOfEstablishment:
          type: string
          enum:
            - AUS
            - OTHER
      type: object
      description: Make all properties in T optional
    Partial_KybApplicationPublicMutableFields_:
      properties:
        type:
          type: string
          enum:
            - PRV
            - IND
            - LPT
            - FPT
            - PTR
            - DST
            - DTT
            - DIT
            - TRT
            - FUT
        registeredName:
          type: string
        businessNames:
          items:
            type: string
          type: array
        abn:
          type: string
        acn:
          type: string
        arbn:
          type: string
        placeOfBusiness:
          $ref: '#/components/schemas/KybAddress_basic'
        registeredOffice:
          $ref: '#/components/schemas/KybAddress_basic'
        emailAddress:
          type: string
        phoneNumber:
          type: string
        industryClass:
          properties:
            code:
              type: string
            name:
              type: string
          required:
            - code
            - name
          type: object
        industryDivision:
          properties:
            code:
              type: string
            name:
              type: string
          required:
            - code
            - name
          type: object
        applicationStatus:
          allOf:
            - properties:
                status:
                  $ref: '#/components/schemas/KybApplicationStatus'
              required:
                - status
              type: object
            - properties:
                message:
                  type: string
              type: object
        primaryKycApplicationId:
          type: string
        australianTaxResident:
          type: boolean
        countryOfEstablishment:
          type: string
        entitySpecificData:
          $ref: '#/components/schemas/EntitySpecificData'
        nfeQuestionBusinessType:
          type: string
          enum:
            - holding-or-treasury
            - start-up-or-no-income
            - none-of-the-above
            - other-active-non-financial-entity
        nfeQuestionEarn:
          type: boolean
      type: object
      description: Make all properties in T optional
    OnboardingDocumentCategory:
      type: string
      enum:
        - TRUST_DEED
        - PARTNERSHIP_DEED
        - TRUST_UNIT_HOLDERS_REGISTER
    DocumentStatus:
      type: string
      enum:
        - CLEAN
        - MALWARE
        - WRONG_TYPE
        - TOO_LARGE
        - NA
        - ERROR
    ReturnType_typeofkycApplicationB2CResponseSchema.parse_:
      properties:
        biometricCheckLastInitiated:
          type: string
        mobileNumber:
          type: string
        accountPurpose:
          items:
            type: string
          type: array
        accountFundsSource:
          items:
            type: string
          type: array
        inviteId:
          type: string
        occupation:
          properties:
            anzscoCode:
              type: string
            name:
              type: string
          type: object
        identityDocs:
          items:
            type: string
          type: array
        maximumRetries:
          type: number
          format: double
        numberOfFailures:
          type: number
          format: double
        address:
          items:
            properties:
              addressId:
                type: string
              unitNumber:
                type: string
              suburb:
                type: string
              streetType:
                type: string
              streetNumber:
                type: string
              streetName:
                type: string
              state:
                type: string
              postalCode:
                type: string
              fullAddress:
                type: string
              dpid:
                type: string
              country:
                type: string
              type:
                type: string
                enum:
                  - RESIDENTIAL1
                  - RESIDENTIAL2
                  - REGISTERED_OFFICE
                  - PLACE_OF_BUSINESS
                  - POSTAL
            type: object
          type: array
        australianTaxResident:
          type: boolean
        surname:
          type: string
        middleName:
          type: string
        givenName:
          type: string
        dob:
          type: string
        applicationStatus:
          properties:
            status:
              type: string
              enum:
                - KYC_NOT_STARTED
                - KYC_INVITED
                - KYC_IN_PROGRESS
                - KYC_PROCESSING
                - KYC_RETRY
                - KYC_REJECTED
                - KYC_RETRIES_EXCEEDED
                - KYC_APPROVED
          type: object
        businessEntityId:
          type: string
        userId:
          type: string
        dateUpdated:
          type: string
        dateCreated:
          type: string
        kycApplicationId:
          type: string
        role:
          type: string
        emailAddress:
          type: string
        options:
          properties:
            biometric:
              type: boolean
          type: object
        bankingEntityId:
          type: string
      type: object
      description: Obtain the return type of a function type
    KycApplicationB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofkycApplicationB2CResponseSchema.parse_
    Partial_KycApplicationPublicMutableFields_:
      properties: {}
      type: object
      description: Make all properties in T optional
    ReturnType_typeofidentityDocumentB2CResponseSchema.parse_:
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - DRIVER_LICENCE
            - MEDICARE_CARD
            - PASSPORT
      type: object
      description: Obtain the return type of a function type
    IdentityDocumentB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofidentityDocumentB2CResponseSchema.parse_
    ReturnType_typeofidentityDocument.parse_:
      anyOf:
        - properties:
            expiryDate:
              type: string
            cardNumber:
              type: string
            licenceNumber:
              type: string
            stateIssued:
              type: string
            surname:
              type: string
            middleName:
              type: string
            givenName:
              type: string
            country:
              type: string
            type:
              type: string
              enum:
                - DRIVER_LICENCE
              nullable: false
          type: object
        - properties:
            documentNumber:
              type: string
            expiryDate:
              type: string
            surname:
              type: string
            middleName:
              type: string
            givenName:
              type: string
            country:
              type: string
            type:
              type: string
              enum:
                - PASSPORT
              nullable: false
          type: object
        - properties:
            individualReferenceNumber:
              type: string
            expiryDate:
              type: string
            cardNumber:
              type: string
            surname:
              type: string
            middleName:
              type: string
            givenName:
              type: string
            country:
              type: string
            type:
              type: string
              enum:
                - MEDICARE_CARD
              nullable: false
          type: object
      description: Obtain the return type of a function type
    IdentityDocumentFields:
      $ref: '#/components/schemas/ReturnType_typeofidentityDocument.parse_'
    ReturnType_typeofemailValidator.parse_:
      type: string
      description: Obtain the return type of a function type
    Email:
      $ref: '#/components/schemas/ReturnType_typeofemailValidator.parse_'
    ReturnType_typeofidvSdkTokenB2CResponseSchema.parse_:
      properties:
        token:
          type: string
      type: object
      description: Obtain the return type of a function type
    IdvSdkTokenB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofidvSdkTokenB2CResponseSchema.parse_
    ReturnType_typeofgenerateF1OneSdkTokenRequestSchema.parse_:
      properties:
        entityId:
          type: string
      type: object
      description: Obtain the return type of a function type
    GenerateF1OneSdkTokenRequestSchema:
      $ref: >-
        #/components/schemas/ReturnType_typeofgenerateF1OneSdkTokenRequestSchema.parse_
    MFAScope:
      enum:
        - payee:add
        - user:updatePersonalDetails
        - user:updateSecureAttribute
        - card:setPin
        - card:getCvv
        - card:getPan
        - card:getCvvPan
        - businessEntity:updateConfig
        - payment:externalUnknownPayee
        - payto:respondToMandate
        - cdr
        - login
      type: string
    ErrorMessage:
      properties:
        message:
          type: string
      required:
        - message
      type: object
      additionalProperties: false
    AddressRestFindRequest:
      properties:
        payload:
          items:
            properties:
              postCode:
                type: string
              locality:
                type: string
              state:
                type: string
              id:
                type: string
              fullAddress:
                type: string
              country:
                type: string
            required:
              - fullAddress
              - country
            type: object
          type: array
        sourceOfTruth:
          type: string
          enum:
            - AUPAF
            - GNAF
            - AUSOTS
        featureOptions:
          properties:
            splitNzFloorLevel:
              type: string
              enum:
                - '0'
                - '1'
            prioritizedSort:
              type: string
              enum:
                - '0'
                - '1'
            baseSource:
              type: string
              enum:
                - AUPAF
                - GNAF
            exposePhantom:
              type: string
              enum:
                - '0'
                - '1'
            addressTypeFilter:
              type: string
            positionFilter:
              type: string
            groupAddresses:
              type: string
              enum:
                - '0'
                - '1'
            suppressLot:
              type: string
              enum:
                - '0'
                - '1'
            displayGnafLot:
              type: string
              enum:
                - '0'
                - '1'
            caseType:
              type: string
            singleLineHitNumber:
              type: number
              format: double
          type: object
      required:
        - payload
      type: object
      additionalProperties: false
    AddressRestRetrieveRequest:
      properties:
        payload:
          items:
            properties:
              id:
                type: string
            required:
              - id
            type: object
          type: array
        featureOptions:
          properties:
            exposeAttributes:
              type: number
              format: double
            suppressLot:
              type: string
              enum:
                - '0'
                - '1'
            displayGnafLot:
              type: string
              enum:
                - '0'
                - '1'
            caseType:
              type: string
              enum:
                - LOW
                - UP
                - TITLE
          type: object
      required:
        - payload
      type: object
      additionalProperties: false
    Pick_F1LookUpResponseCommand.Exclude_keyofF1LookUpResponseCommand.type__:
      properties: {}
      type: object
      description: From T, pick a set of properties whose keys are in the union K
    Omit_F1LookUpResponseCommand.type_:
      $ref: >-
        #/components/schemas/Pick_F1LookUpResponseCommand.Exclude_keyofF1LookUpResponseCommand.type__
      description: Construct a type with the properties of T except for those in type K.
    ABREntityType:
      type: string
      enum:
        - PRV
        - IND
        - LPT
        - FPT
        - PTR
        - DST
        - DTT
        - DIT
        - TRT
        - FUT
        - PUT
        - ADF
        - CCB
        - CCN
        - CCO
        - CCR
        - CGA
        - CGC
        - CGE
        - CGP
        - CMT
        - COP
        - CSA
        - CSP
        - CSS
        - CTD
        - CTF
        - CTI
        - CTQ
        - CUT
        - DES
        - FHS
        - FXT
        - HYT
        - LCN
        - LCO
        - LCR
        - LCS
        - LGA
        - LGC
        - LGE
        - LGP
        - LSP
        - LSS
        - LTI
        - NPF
        - NRF
        - OIE
        - PDF
        - POF
        - PQT
        - PST
        - PTT
        - PUB
        - SAF
        - SCB
        - SCC
        - SCN
        - SCO
        - SCR
        - SGA
        - SGC
        - SGE
        - SGP
        - SGT
        - SMF
        - SSA
        - SSP
        - SSS
        - STD
        - STF
        - STI
        - STR
        - STU
        - SUP
        - TCN
        - TCO
        - TGA
        - TGE
        - TTF
        - TTI
        - TTU
        - UIE
        - APP
        - ARF
        - CCC
        - CCL
        - CCP
        - CCS
        - CCT
        - CCU
        - CGS
        - CGT
        - CTC
        - CTH
        - CTL
        - CTT
        - CTU
        - DIP
        - LCB
        - LCC
        - LCL
        - LCP
        - LCT
        - LCU
        - LGT
        - LSA
        - LTC
        - LTD
        - LTF
        - LTH
        - LTL
        - LTQ
        - LTU
        - RAP
        - SCL
        - SCP
        - SCS
        - SCT
        - SCU
        - STC
        - STH
        - STL
        - STQ
        - STT
        - TCB
        - TCC
        - TCL
        - TCP
        - TCR
        - TCS
        - TCT
        - TCU
        - TFN
        - TGP
        - TGT
        - TSA
        - TSP
        - TSS
        - TTC
        - TTD
        - TTH
        - TTL
        - TTQ
        - TTT
    F1LookUpReport:
      allOf:
        - $ref: '#/components/schemas/Omit_F1LookUpResponseCommand.type_'
        - properties:
            type:
              allOf:
                - $ref: '#/components/schemas/ABREntityType'
              nullable: true
          required:
            - type
          type: object
    ReturnType_typeofrefDataOccupationB2CResponseSchema.parse_:
      properties:
        occupation:
          items:
            properties:
              anzscoCode:
                type: string
              name:
                type: string
            type: object
          type: array
      type: object
      description: Obtain the return type of a function type
    OnboardingRefDataOccupationB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofrefDataOccupationB2CResponseSchema.parse_
    ReturnType_typeofrefDataIndustryB2CResponseSchema.parse_:
      properties:
        industry:
          items:
            properties:
              anzsicCodeBase:
                type: string
              industryName:
                type: string
              industryCode:
                type: string
              divisionName:
                type: string
              divisionCode:
                type: string
            type: object
          type: array
      type: object
      description: Obtain the return type of a function type
    OnboardingRefDataIndustryB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofrefDataIndustryB2CResponseSchema.parse_
    ReturnType_typeofrefDataSourceOfFundB2CResponseSchema.parse_:
      properties:
        sourceOfFund:
          items:
            properties:
              name:
                type: string
              code:
                type: string
            type: object
          type: array
      type: object
      description: Obtain the return type of a function type
    OnboardingRefDataSourceOfFundB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofrefDataSourceOfFundB2CResponseSchema.parse_
    ReturnType_typeofrefDataPurposeOfAccountB2CResponseSchema.parse_:
      properties:
        purposeOfAccount:
          items:
            properties:
              name:
                type: string
              code:
                type: string
            type: object
          type: array
      type: object
      description: Obtain the return type of a function type
    OnboardingRefDataPurposeOfAccountB2CResponse:
      $ref: >-
        #/components/schemas/ReturnType_typeofrefDataPurposeOfAccountB2CResponseSchema.parse_
    Partial_Record_UserConsentType.boolean__:
      properties: {}
      type: object
      description: Make all properties in T optional
    UUID:
      type: string
      example: 52907745-7672-470e-a803-a2f8feb52944
      format: uuid
      description: |-
        Stringified UUIDv4.
        See [RFC 4112](https://tools.ietf.org/html/rfc4122)
      pattern: >-
        [0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}
    Pick_NonNullable_UserRecord_.-or-currentEntityAccountId-or-devicesMap-or-email-or-firstname-or-lastname-or-mailingAddress-or-mobileNumber-or-nickname-or-notifications-or-residentialAddress-or-userId-or-username-or-verified-or-kycStatus_:
      properties:
        nickname: {}
        verified: {}
        userId: {}
        mobileNumber: {}
        email: {}
        kycStatus: {}
        username: {}
        devicesMap: {}
        firstname: {}
        lastname: {}
        mailingAddress: {}
        residentialAddress: {}
        currentEntityAccountId: {}
        notifications: {}
      type: object
      description: From T, pick a set of properties whose keys are in the union K
    PublicUser:
      $ref: >-
        #/components/schemas/Pick_NonNullable_UserRecord_.-or-currentEntityAccountId-or-devicesMap-or-email-or-firstname-or-lastname-or-mailingAddress-or-mobileNumber-or-nickname-or-notifications-or-residentialAddress-or-userId-or-username-or-verified-or-kycStatus_
    Pick_NonNullable_UserRecord_.customerNumber_:
      properties:
        customerNumber: {}
      type: object
      description: From T, pick a set of properties whose keys are in the union K
    PublicOwnUser:
      allOf:
        - $ref: '#/components/schemas/PublicUser'
        - $ref: '#/components/schemas/Pick_NonNullable_UserRecord_.customerNumber_'
    Record_string.PublicUserEntityMap_:
      properties: {}
      type: object
      description: Construct a type with a set of properties K of type T
    ReturnType_typeofaddressValidator.parse_:
      properties:
        unitNumber:
          type: string
        suburb:
          type: string
        streetType:
          type: string
        streetNumber:
          type: string
        streetName:
          type: string
        state:
          type: string
        postalCode:
          type: string
        fullAddress:
          type: string
        dpid:
          type: string
        country:
          type: string
        type:
          type: string
          enum:
            - RESIDENTIAL1
            - RESIDENTIAL2
            - REGISTERED_OFFICE
            - PLACE_OF_BUSINESS
            - POSTAL
      type: object
      description: Obtain the return type of a function type
    Address:
      $ref: '#/components/schemas/ReturnType_typeofaddressValidator.parse_'
    ReturnType_typeofmarketingOptionValidator.parse_:
      properties:
        application:
          type: boolean
        sms:
          type: boolean
        email:
          type: boolean
      type: object
      description: Obtain the return type of a function type
    MarketingOption:
      $ref: '#/components/schemas/ReturnType_typeofmarketingOptionValidator.parse_'
    MarketingOptionRequest:
      properties:
        marketing:
          $ref: '#/components/schemas/MarketingOption'
      required:
        - marketing
      type: object
    DeliveryMediumType:
      type: string
      enum:
        - EMAIL
        - SMS
    CodeDeliveryDetailsType:
      properties:
        Destination:
          type: string
        DeliveryMedium:
          $ref: '#/components/schemas/DeliveryMediumType'
        AttributeName:
          type: string
      type: object
      additionalProperties: false
    CognitoAttributesType:
      type: string
      enum:
        - mobileNumber
        - email
    ReturnType_typeofmarketingOptionPatchValidator.parse_:
      properties:
        marketing:
          properties:
            application:
              type: boolean
            sms:
              type: boolean
            email:
              type: boolean
          type: object
      type: object
      description: Obtain the return type of a function type
    ReturnType_typeofdevicePublicInfoSchema.parse_:
      properties:
        lastIp:
          type: string
        initialIp:
          type: string
        lastLogin:
          type: string
        initialLogin:
          type: string
        mobileFields:
          properties:
            isEmulator:
              type: boolean
            macAddress:
              type: string
            appInstallTime:
              type: number
              format: double
            carrier:
              type: string
            isTablet:
              type: boolean
            osVersion:
              type: string
            osName:
              type: string
            appName:
              type: string
            appVersion:
              type: string
            bundleId:
              type: string
            networkIsConnected:
              type: boolean
            networkType:
              type: string
            fcmToken:
              type: string
            deviceType:
              type: string
            model:
              type: string
          type: object
        deviceId:
          type: string
        deviceType:
          type: string
          enum:
            - MOBILE
            - WEB
      type: object
      description: Obtain the return type of a function type
    DeviceInfoB2CResponse:
      $ref: '#/components/schemas/ReturnType_typeofdevicePublicInfoSchema.parse_'
    Pick_ProcessedSubscriptionEntity.accountNumber-or-accountId-or-bsb-or-productVersion-or-entityAccountId-or-nickname-or-productGroup_:
      properties:
        nickname:
          type: string
        entityAccountId:
          $ref: '#/components/schemas/UUID'
        productVersion:
          type: string
        productGroup:
          type: string
          enum:
            - CURRENT
            - SAVINGS
            - LOANS
            - MORTGAGES
        accountNumber:
          type: string
        accountId:
          $ref: '#/components/schemas/UUID'
        bsb:
          type: string
      required:
        - nickname
        - entityAccountId
        - productVersion
        - productGroup
        - accountNumber
        - accountId
        - bsb
      type: object
      description: From T, pick a set of properties whose keys are in the union K
    ProcessedBalanceV2:
      properties:
        value:
          type: number
          format: double
        currency:
          type: string
        creditDebitIndicator:
          type: string
      required:
        - value
        - currency
        - creditDebitIndicator
      type: object
      additionalProperties: false
    AccountV2:
      allOf:
        - $ref: >-
            #/components/schemas/Pick_ProcessedSubscriptionEntity.accountNumber-or-accountId-or-bsb-or-productVersion-or-entityAccountId-or-nickname-or-productGroup_
        - properties:
            accountState:
              type: string
              enum:
                - ACTIVE
                - FAILED
                - PROVISIONED
                - CLOSED
                - CLOSURE_PENDING
                - SUSPENDED
                - PART_SUSPENDED
                - FROZEN
                - PART_FROZEN
            productId:
              type: string
            balances:
              properties:
                available:
                  $ref: '#/components/schemas/ProcessedBalanceV2'
                booked:
                  $ref: '#/components/schemas/ProcessedBalanceV2'
              required:
                - available
                - booked
              type: object
          required:
            - accountState
            - productId
            - balances
          type: object
    AllAccountsV2:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountV2'
          type: array
      required:
        - accounts
      type: object
      additionalProperties: false
    BasicErrorResponse_InternalServerError_:
      properties:
        message:
          type: string
          enum:
            - Internal Server Error
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_InvalidAccount_:
      properties:
        message:
          type: string
          enum:
            - Invalid Account
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Theserverhasnotfoundanythingmatchingtheaccountid_:
      properties:
        message:
          type: string
          enum:
            - The server has not found anything matching the account id
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Validationerror-Invaliduuid_:
      properties:
        message:
          type: string
          enum:
            - Validation error - Invalid uuid
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Businessalreadyhasanaccountwithsamenickname_:
      properties:
        message:
          type: string
          enum:
            - Business already has an account with same nickname
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Productnotfound_:
      properties:
        message:
          type: string
          enum:
            - Product not found
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Validationerroronbody_:
      properties:
        message:
          type: string
          enum:
            - Validation error on body
          nullable: false
      type: object
      additionalProperties: false
    Pick_TenXCardSummary.Exclude_keyofTenXCardSummary.cardId__:
      properties:
        type:
          type: string
        scheme:
          type: string
          enum:
            - VISA
            - MASTERCARD
            - AMEX
            - OTHER
        formType:
          type: string
          enum:
            - PHYSICAL
            - VIRTUAL
        maximumNumber:
          type: number
          format: double
        defaultCard:
          type: boolean
        frontTemplateImage:
          properties:
            url:
              type: string
          required:
            - url
          type: object
      required:
        - type
        - scheme
        - formType
        - maximumNumber
        - defaultCard
        - frontTemplateImage
      type: object
      description: From T, pick a set of properties whose keys are in the union K
    Omit_TenXCardSummary.cardId_:
      $ref: >-
        #/components/schemas/Pick_TenXCardSummary.Exclude_keyofTenXCardSummary.cardId__
      description: Construct a type with the properties of T except for those in type K.
    File:
      properties:
        format:
          type: string
        label:
          type: string
        url:
          type: string
      required:
        - format
        - label
        - url
      type: object
      additionalProperties: false
    Document:
      properties:
        description:
          type: string
        files:
          items:
            $ref: '#/components/schemas/File'
          type: array
        name:
          type: string
        publishedDate:
          type: string
        version:
          type: string
      required:
        - description
        - files
        - name
        - publishedDate
        - version
      type: object
      additionalProperties: false
    CURRENCY:
      type: string
      enum:
        - AED
        - ALL
        - AMD
        - AOA
        - ARS
        - AUD
        - AZN
        - BAM
        - BBD
        - BGN
        - BHD
        - BMD
        - BOB
        - BRL
        - BWP
        - BYN
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CVE
        - CZK
        - DKK
        - DOP
        - DZD
        - EGP
        - EUR
        - FJD
        - GBP
        - GEL
        - GHS
        - GIP
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRU
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SEK
        - SGD
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - XAF
        - XCD
        - XOF
        - ZAR
        - ZMW
        - ZWD
      example: AUD
      description: ISO 4217 currency code.
    CurrencyWithCode:
      properties:
        currencyCode:
          $ref: '#/components/schemas/CURRENCY'
      required:
        - currencyCode
      type: object
      additionalProperties: false
    ProductV2:
      properties:
        version:
          type: number
          format: double
        productGroup:
          type: string
        productDescription:
          type: string
        productName:
          type: string
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        currency:
          $ref: '#/components/schemas/CurrencyWithCode'
        productId:
          type: string
        cards:
          items:
            $ref: '#/components/schemas/Omit_TenXCardSummary.cardId_'
          type: array
      required:
        - version
        - productGroup
        - productDescription
        - productName
        - documents
        - currency
        - productId
        - cards
      type: object
      additionalProperties: false
    BasicErrorResponse_TokenExpired_:
      properties:
        message:
          type: string
          enum:
            - Token Expired
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Theserverhasnotfoundanythingmatchingtheproductkey_:
      properties:
        message:
          type: string
          enum:
            - The server has not found anything matching the product key
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_ValidationerroronPath_:
      properties:
        message:
          type: string
          enum:
            - Validation error on Path
          nullable: false
      type: object
      additionalProperties: false
    AllProductsV2:
      properties:
        products:
          items:
            $ref: '#/components/schemas/ProductV2'
          type: array
      required:
        - products
      type: object
      additionalProperties: false
    BasicErrorResponse_TokenInvalid_:
      properties:
        message:
          type: string
          enum:
            - Token Invalid
          nullable: false
      type: object
      additionalProperties: false
    BasicErrorResponse_Theserverwasunabletoprocesstherequestbecauseitcontainsinvaliddata_:
      properties:
        message:
          type: string
          enum:
            - >-
              The server was unable to process the request because it contains
              invalid data
          nullable: false
      type: object
      additionalProperties: false
  securitySchemes:
    B2CToken:
      type: oauth2
      description: B2C Token via OIDC
      flows:
        authorizationCode:
          tokenUrl: auth.banking.cxnpl.com
          authorizationUrl: auth.banking.cxnpl.com
          scopes: {}
    B2BApiKey:
      type: apiKey
      in: header
      name: Authorization
      description: B2B Api Key
    LambdaUserRequestAuthorizer:
      type: apiKey
      name: User
      in: header
    LambdaEntityRequestAuthorizer:
      type: apiKey
      name: Authorization
      in: header
info:
  title: Constantinople B2C API
  version: 1.0.0
openapi: 3.0.0
paths:
  /banking-entity/individual:
    post:
      operationId: CreateIndividualBankingEntity
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankingEntityResponse'
              examples:
                Example 1:
                  value:
                    bankingEntityId: '12345'
                    creatorId: '67890'
                    status: ACTIVE
                    f1EntityId: '54321'
                    type: BUSINESS
                    nickname: Example Business
                    businessDetails:
                      registeredName: Connect Bookkeeping Pty Ltd
                      businessNames:
                        - Connect Bookkeeping
                      abn: '12345678901'
                      acn: '0987654321'
                      arbn: '1122334455'
                      type: PTY LTD
                      placeOfBusiness:
                        dpid: dpid
                        country: Australia
                        fullAddress: 123 Business St, Business City, BC 1234
                        postalCode: '1234'
                        state: BC
                        streetName: Business St
                        streetNumber: '123'
                        streetType: St
                        suburb: Business City
                        type: Office
                        unitNumber: 1A
                      registeredOffice:
                        country: Australia
                        dpid: dpid
                        fullAddress: 123 Office St, Office City, OC 5678
                        postalCode: '5678'
                        state: OC
                        streetName: Office St
                        streetNumber: '123'
                        streetType: St
                        suburb: Office City
                        type: Office
                        unitNumber: 2B
                      registeredDate: '2023-01-01'
                      emailAddress: contact@connectbookkeeping.com
                      phoneNumber: '+61123456789'
                    activeComplianceApplication:
                      complianceApplicationId: '98765'
                      bankingEntityId: '12345'
                      creatorId: '67890'
                      purpose: ORIGINATION
                      status: IN_PROGRESS
                      outcome: PENDING
                      kyxRequirements:
                        - type: KYC_REQUIREMENT
                          role: OWNER
                          condition: ALL
                          candidates:
                            - verified: true
                              kycApplicationId: '11111'
                              deepLinkUrl: https://example.com/kyc/11111
                              primaryApplicantCandidate: true
                            - verified: false
                              kycApplicationId: '22222'
                              deepLinkUrl: https://example.com/kyc/22222
                        - type: KYB_REQUIREMENT
                          role: UBO
                          condition: ONE_OF
                          candidates:
                            - verified: true
                              kybApplicationId: '33333'
                              deepLinkUrl: https://example.com/kyb/33333
      description: Create a new banking entity for an individual
      summary: Create a new banking entity for an individual
      tags:
        - Onboarding
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                nickname:
                  type: string
              required:
                - nickname
              type: object
  /banking-entity/business:
    post:
      operationId: CreateBusinessBankingEntity
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankingEntityResponse'
              examples:
                Example 1:
                  value:
                    bankingEntityId: '12345'
                    creatorId: '67890'
                    status: ACTIVE
                    f1EntityId: '54321'
                    type: BUSINESS
                    nickname: Example Business
                    businessDetails:
                      registeredName: Connect Bookkeeping Pty Ltd
                      businessNames:
                        - Connect Bookkeeping
                      abn: '12345678901'
                      acn: '0987654321'
                      arbn: '1122334455'
                      type: PTY LTD
                      placeOfBusiness:
                        dpid: dpid
                        country: Australia
                        fullAddress: 123 Business St, Business City, BC 1234
                        postalCode: '1234'
                        state: BC
                        streetName: Business St
                        streetNumber: '123'
                        streetType: St
                        suburb: Business City
                        type: Office
                        unitNumber: 1A
                      registeredOffice:
                        country: Australia
                        dpid: dpid
                        fullAddress: 123 Office St, Office City, OC 5678
                        postalCode: '5678'
                        state: OC
                        streetName: Office St
                        streetNumber: '123'
                        streetType: St
                        suburb: Office City
                        type: Office
                        unitNumber: 2B
                      registeredDate: '2023-01-01'
                      emailAddress: contact@connectbookkeeping.com
                      phoneNumber: '+61123456789'
                    activeComplianceApplication:
                      complianceApplicationId: '98765'
                      bankingEntityId: '12345'
                      creatorId: '67890'
                      purpose: ORIGINATION
                      status: IN_PROGRESS
                      outcome: PENDING
                      kyxRequirements:
                        - type: KYC_REQUIREMENT
                          role: OWNER
                          condition: ALL
                          candidates:
                            - verified: true
                              kycApplicationId: '11111'
                              deepLinkUrl: https://example.com/kyc/11111
                              primaryApplicantCandidate: true
                            - verified: false
                              kycApplicationId: '22222'
                              deepLinkUrl: https://example.com/kyc/22222
                        - type: KYB_REQUIREMENT
                          role: UBO
                          condition: ONE_OF
                          candidates:
                            - verified: true
                              kybApplicationId: '33333'
                              deepLinkUrl: https://example.com/kyb/33333
      description: Create a new banking entity for a business
      summary: Create a new banking entity for a business
      tags:
        - Onboarding
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                nickname:
                  type: string
              required:
                - nickname
              type: object
  /banking-entity/{bankingEntityId}:
    get:
      operationId: GetBankingEntity
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankingEntityResponse'
              examples:
                Example 1:
                  value:
                    bankingEntityId: '12345'
                    creatorId: '67890'
                    status: ACTIVE
                    f1EntityId: '54321'
                    type: BUSINESS
                    nickname: Example Business
                    businessDetails:
                      registeredName: Connect Bookkeeping Pty Ltd
                      businessNames:
                        - Connect Bookkeeping
                      abn: '12345678901'
                      acn: '0987654321'
                      arbn: '1122334455'
                      type: PTY LTD
                      placeOfBusiness:
                        dpid: dpid
                        country: Australia
                        fullAddress: 123 Business St, Business City, BC 1234
                        postalCode: '1234'
                        state: BC
                        streetName: Business St
                        streetNumber: '123'
                        streetType: St
                        suburb: Business City
                        type: Office
                        unitNumber: 1A
                      registeredOffice:
                        country: Australia
                        dpid: dpid
                        fullAddress: 123 Office St, Office City, OC 5678
                        postalCode: '5678'
                        state: OC
                        streetName: Office St
                        streetNumber: '123'
                        streetType: St
                        suburb: Office City
                        type: Office
                        unitNumber: 2B
                      registeredDate: '2023-01-01'
                      emailAddress: contact@connectbookkeeping.com
                      phoneNumber: '+61123456789'
                    activeComplianceApplication:
                      complianceApplicationId: '98765'
                      bankingEntityId: '12345'
                      creatorId: '67890'
                      purpose: ORIGINATION
                      status: IN_PROGRESS
                      outcome: PENDING
                      kyxRequirements:
                        - type: KYC_REQUIREMENT
                          role: OWNER
                          condition: ALL
                          candidates:
                            - verified: true
                              kycApplicationId: '11111'
                              deepLinkUrl: https://example.com/kyc/11111
                              primaryApplicantCandidate: true
                            - verified: false
                              kycApplicationId: '22222'
                              deepLinkUrl: https://example.com/kyc/22222
                        - type: KYB_REQUIREMENT
                          role: UBO
                          condition: ONE_OF
                          candidates:
                            - verified: true
                              kybApplicationId: '33333'
                              deepLinkUrl: https://example.com/kyb/33333
      description: >-
        Fetch the high level details about the banking entity and its status on
        the platform
      summary: Get banking entity details
      tags:
        - Onboarding
      security:
        - B2CToken: []
      parameters:
        - in: path
          name: bankingEntityId
          required: true
          schema:
            type: string
    patch:
      operationId: UpdateBankingEntity
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankingEntityResponse'
      description: Update banking entity
      summary: Update banking entity
      tags:
        - Onboarding
      security:
        - B2CToken:
            - MANAGE_BUSINESS
      parameters:
        - in: path
          name: bankingEntityId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                fields:
                  $ref: >-
                    #/components/schemas/Partial_BusinessIdentityPublicMutableFields_
              required:
                - fields
              type: object
  /banking-entity/acknowledgementsAndConsents:
    post:
      operationId: PutAcknowledgementsConsents
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                required:
                  - status
                type: object
      description: Consents associated with providing details about the business
      summary: Provide consent for business onboarding
      tags:
        - Onboarding
      security:
        - B2CToken:
            - CONSENTS_WRITE
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                aac:
                  $ref: >-
                    #/components/schemas/Partial_Record_BusinessConsentType.boolean__
                  description: Acknowledgement and consents
                appVersion:
                  type: string
              required:
                - aac
              type: object
  /kyb/application/{kybApplicationId}:
    get:
      operationId: GetKybApplication
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KybApplicationB2CResponse'
              examples:
                Example 1:
                  value:
                    primaryApplicantUserId: 9f925ccb-67a1-4a6f-b085-b189d7684e85
                    bankingEntityId: 0b14f520-9d98-4d9c-a621-550f2ade3fce
                    applicationStatus:
                      status: KYB_APPROVED
                    state: SUCCESS
                    registeredName: ANNETTE JOY KRUGER
                    businessNames:
                      - CONNECT BOOKKEEPING
                    abn: '11061989110'
                    acn: ''
                    type: IND
                    registeredOffice:
                      country: Australia
                      dpid: '73863596'
                      fullAddress: 23 CLAYMORE CRES, BUNDALL QLD 4217
                      postalCode: '4217'
                      state: QLD
                      streetName: CLAYMORE
                      streetNumber: '23'
                      streetType: CRES
                      suburb: BUNDALL
                      type: PLACE_OF_BUSINESS
                      unitNumber: ''
                    placeOfBusiness:
                      country: Australia
                      dpid: '73863596'
                      fullAddress: 23 CLAYMORE CRES, BUNDALL QLD 4217
                      postalCode: '4217'
                      state: QLD
                      streetName: CLAYMORE
                      streetNumber: '23'
                      streetType: CRES
                      suburb: BUNDALL
                      type: PLACE_OF_BUSINESS
                      unitNumber: ''
                    emailAddress: annette@gmail.com
                    phoneNumber: '0400000000'
                    industryClass:
                      code: '4110'
                      name: Supermarket and Grocery Stores
                    industryDivision:
                      code: G
                      name: Retail Trade
                    primaryKycApplicationId: 403295c5-f167-422a-955c-6aaa04d12d4e
                    orgStructure:
                      - dob: 03/01/1980
                        entityType: INDIVIDUAL
                        f1EntityId: 57ad2caa-d249-eb26-b8b0-e42b8e5e9e0b
                        givenName: Annette
                        id: ce8b460e-52db-4434-b843-0c1c45d3b990
                        kycApplicationId: 403295c5-f167-422a-955c-6aaa04d12d4e
                        middleName: twopass
                        parentAbn: '11061989110'
                        roles:
                          - UBO
                        surname: Kruger
                        percentOwned: 30
                    australianTaxResident: true
                    kycRequirements:
                      - candidates:
                          - kycApplicationId: 403295c5-f167-422a-955c-6aaa04d12d4e
                            verified: false
                        condition: ALL
                        role: UBO
                    businessQueryCompleted: true
                    businessQueryTriggered: true
                    countryOfEstablishment: AUS
                    dateCreated: '2024-04-05T05:18:54.182Z'
                    dateUpdated: '2024-04-05T05:18:54.182Z'
      description: >-
        Gets a KYB (Know Your Business) application based on the provided
        kybApplicationId.
      summary: Get a kyb application
      tags:
        - KYB
      security:
        - B2CToken:
            - VIEW_ONBOARDING
      parameters:
        - in: path
          name: kybApplicationId
          required: true
          schema:
            type: string
  /kyc/application/{kycApplicationId}:
    get:
      operationId: GetKycApplication
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KycApplicationB2CResponse'
              examples:
                Example 1:
                  value:
                    kycApplicationId: 1a14f520-9d98-4d9c-a621-550f2ade3fdt
                    businessEntityId: 0b14f520-9d98-4d9c-a621-550f2ade3fce
                    bankingEntityId: 0b14f520-9d98-4d9c-a621-550f2ade3fce
                    userId: 9f925ccb-67a1-4a6f-b085-b189d7684e85
                    role: ''
                    givenName: Annette
                    middleName: Joy
                    surname: Kruger
                    dob: 10/01/1983
                    applicationStatus:
                      status: KYC_APPROVED
                    address:
                      - addressId: c6ec5ece-f730-89ec-041e-ad1492dd1b49
                        country: Australia
                        dpid: '58166290'
                        fullAddress: 10 BLOCK RD, BALLARAT CENTRAL VIC 3350
                        postalCode: '3350'
                        state: VIC
                        streetName: BLOCK
                        streetNumber: '1'
                        streetType: ARC
                        suburb: BALLARAT CENTRAL
                        type: RESIDENTIAL1
                        unitNumber: ''
                      - addressId: a313638a-52bb-3f10-15b3-7734a13ec0d2
                        country: AUS
                        dpid: '00000000'
                        fullAddress: 19 CLAYMORE PDE, BUNDALL Queensland 4217, Australia
                        postalCode: '4217'
                        state: QLD
                        streetName: CLAYMORE
                        streetNumber: '23'
                        streetType: CRESCENT
                        suburb: BUNDALL
                        type: POSTAL
                    identityDocs:
                      - 3d84f7e0-c463-45ac-8e78-97df189cdb5d
                    numberOfFailures: 0
                    maximumRetries: 5
                    occupation:
                      anzscoCode: '261314'
                      name: Software Tester
                    inviteId: 07a83c77-47bd-4a00-ba5d-9defa5c2e1f7
                    australianTaxResident: true
                    emailAddress: annette@gmail.com
                    mobileNumber: '0400000000'
                    dateCreated: '2024-04-05T05:18:54.182Z'
                    dateUpdated: '2024-04-05T05:18:54.182Z'
      summary: Get a kyc application
      tags:
        - KYC
      security:
        - B2CToken: []
      parameters:
        - description: The kyc application id
          in: path
          name: kycApplicationId
          required: true
          schema:
            type: string
  /mfa/start/{scope}:
    post:
      operationId: StartMfa
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    format: double
                  expiresAt:
                    type: string
                  challengeId:
                    type: string
                required:
                  - statusCode
                  - challengeId
                type: object
      description: >-
        Used for step up authentication to initiate the flow

        You get back a challengeId that is then passed alongside the received
        code to the endpoint requiring MFA

        Currently SMS is the only channel supported
      summary: Start an MFA request
      tags:
        - MFA
      security:
        - B2CToken: []
      parameters:
        - in: path
          name: scope
          required: true
          schema:
            $ref: '#/components/schemas/MFAScope'
  /mfa/mfa/verify:
    post:
      operationId: VerifyMfa
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  accessToken:
                    type: string
                required:
                  - accessToken
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: >-
        Verify the mfa challenge and allow to get an elevated access token if
        successful
      summary: Verify mfa
      tags:
        - MFA
      security: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                mfaCode:
                  type: string
                mfaId:
                  type: string
              required:
                - mfaCode
                - mfaId
              type: object
  /onboarding/address/find:
    post:
      operationId: FindAddress
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema: {}
      summary: Autocomplete address
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRestFindRequest'
  /onboarding/address/retrieve:
    post:
      operationId: RetrieveAddress
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema: {}
      summary: Retrieve an address
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRestRetrieveRequest'
  /onboarding/business/lookup:
    post:
      operationId: LookupBusiness
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  response:
                    items:
                      $ref: '#/components/schemas/F1LookUpReport'
                    type: array
                  registered:
                    type: boolean
                required:
                  - response
                  - registered
                type: object
      summary: Search abn registry
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                search:
                  type: string
              required:
                - search
              type: object
  /onboarding/business/abn/{abn}/checks:
    get:
      operationId: AbnCheck
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  checkResults:
                    properties:
                      isSupportedEntityType:
                        type: boolean
                      isAbnAlreadyOnboarded:
                        type: boolean
                    required:
                      - isSupportedEntityType
                      - isAbnAlreadyOnboarded
                    type: object
                  outcome:
                    type: string
                    enum:
                      - PASS
                      - FAIL
                required:
                  - checkResults
                  - outcome
                type: object
      description: >-
        Performs some check on the provided ABN to determine if if already
        present on the platform

        or if the platform supports the type of business for this ABN
      summary: Check ABN validity
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters:
        - in: path
          name: abn
          required: true
          schema:
            type: string
  /onboarding/ref-data/occupation:
    get:
      operationId: GetOccupations
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingRefDataOccupationB2CResponse'
      summary: Get occupation ref data
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters:
        - in: query
          name: query
          required: false
          schema:
            type: string
        - in: query
          name: cursor
          required: false
          schema:
            type: string
  /onboarding/ref-data/industry:
    get:
      operationId: GetIndustries
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingRefDataIndustryB2CResponse'
      summary: Get anzsic industry ref data
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters: []
  /onboarding/ref-data/source-of-fund:
    get:
      operationId: GetSourceOfFunds
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingRefDataSourceOfFundB2CResponse'
      summary: Get source of fund ref data
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters: []
  /onboarding/ref-data/purpose-of-account:
    get:
      operationId: GetPurposeOfAccounts
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OnboardingRefDataPurposeOfAccountB2CResponse
      summary: Get purpose of account ref data
      tags:
        - Onboarding Reference Data
      security:
        - B2CToken: []
      parameters: []
  /user/acknowledgements-and-consents:
    post:
      operationId: CreateUserConsents
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                required:
                  - success
                type: object
        '400':
          description: Invalid payload.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      description: Register consents or acknowledgement for a user.
      summary: Register consents for a user
      tags:
        - Users
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                aac:
                  $ref: >-
                    #/components/schemas/Partial_Record_UserConsentType.boolean__
                  description: The consents or acknowledgements to be registered
                appVersion:
                  $ref: '#/components/schemas/UUID'
                  description: Version of the application
                  example:
                    - d47c7579c89c66d32572e6ac3bda2f290976ef53
              required:
                - aac
              type: object
  /user/summary:
    get:
      operationId: GetSummary
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  entities:
                    $ref: '#/components/schemas/Record_string.PublicUserEntityMap_'
                  user:
                    $ref: '#/components/schemas/PublicOwnUser'
                required:
                  - entities
                  - user
                type: object
      description: Get Information related to current user
      summary: Get current user information
      tags:
        - Users
      security:
        - B2CToken: []
      parameters: []
  /user/personal:
    patch:
      operationId: UpdatePersonalInfo
      responses:
        '204':
          description: No content
      description: |-
        Update current user personal information
        Requires stepup MFA
      summary: Update current user personal information
      tags:
        - Users
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                nickname:
                  type: string
                  description: The nickname of the user
                firstname:
                  type: string
                  description: The first name of the user
                lastname:
                  type: string
                  description: The last name of the user
                mailingAddress:
                  $ref: '#/components/schemas/Address'
                  description: The mailing address of the user
                residentialAddress:
                  $ref: '#/components/schemas/Address'
                  description: The residential address of the user
                notifications:
                  $ref: '#/components/schemas/MarketingOptionRequest'
                  description: The marketing options for the user
                mfaCode:
                  type: string
                  description: The MFA code for verification
                mfaId:
                  type: string
                  description: The MFA ID for verification
                password:
                  type: string
              type: object
  /user/updateAttr:
    patch:
      operationId: UpdateAttr
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDeliveryDetailsType'
      description: |-
        Initiate the update of a user's email or mobile number. 
        Returns an mfa code that must be used to confirm the change.
      summary: Update a user's email/mobile
      tags:
        - Users
      security:
        - B2CToken: []
      parameters:
        - in: header
          name: AccessAuthorizationKey
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/CognitoAttributesType'
                  description: The name of the attribute to be updated
                value:
                  type: string
                  description: The new value for the attribute
              required:
                - name
                - value
              type: object
  /user/confirmAttr:
    patch:
      operationId: ConfirmAttr
      responses:
        '204':
          description: No content
      description: Confirm a user's email or mobile number update.
      summary: Confirm a user's email or mobile number update
      tags:
        - Users
      security:
        - B2CToken: []
      parameters:
        - in: header
          name: AccessAuthorizationKey
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  $ref: '#/components/schemas/CognitoAttributesType'
                  description: The name of the attribute to be confirmed
                code:
                  type: string
                  description: The MFA code for verification
                password:
                  type: string
                  description: The user's password for verification
              required:
                - name
                - code
              type: object
  /user/notifications:
    patch:
      operationId: UpdateNotificationSettings
      responses:
        '204':
          description: No content
      description: Update current user notifications settings
      summary: Update current user notifications settings
      tags:
        - Users
      security:
        - B2CToken: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ReturnType_typeofmarketingOptionPatchValidator.parse_
  /v2/accounts:
    get:
      operationId: GetAccountsV2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllAccountsV2'
              examples:
                Example 1:
                  value:
                    accounts:
                      - accountState: ACTIVE
                        accountId: 6de193cf-048d-41bf-bbba-d9da23736245
                        accountNumber: '342176872'
                        bsb: '834696'
                        balances:
                          booked:
                            value: 100000
                            currency: AUD
                            creditDebitIndicator: CREDIT
                          available:
                            value: 100000
                            currency: AUD
                            creditDebitIndicator: CREDIT
                        entityAccountId: 2f959315-541b-4a98-86ec-77fa0ed21cbf
                        nickname: TXN Accounts - Pilot
                        productId: b7b6753c-cf27-46da-9c3e-2397f17406ab
                        productVersion: '1'
                        productGroup: CURRENT
                      - accountState: ACTIVE
                        accountId: 7de193cf-048d-41bf-bbba-d9da23736246
                        accountNumber: '342176873'
                        bsb: '834696'
                        balances:
                          booked:
                            value: 100000
                            currency: AUD
                            creditDebitIndicator: CREDIT
                          available:
                            value: 100000
                            currency: AUD
                            creditDebitIndicator: CREDIT
                        entityAccountId: 2f959315-541b-4a98-86ec-77fa0ed21cbf
                        nickname: Hard Earned Savings
                        productId: cef1a458-471e-432e-af99-6ceb8bbb75d3
                        productVersion: '1'
                        productGroup: SAVINGS
                      - accountState: ACTIVE
                        accountId: 7de193cf-048d-41bf-bbba-d9da21234567
                        accountNumber: '12345678'
                        bsb: '834696'
                        balances:
                          booked:
                            value: 100000
                            currency: AUD
                            creditDebitIndicator: CREDIT
                          available:
                            value: 100000
                            currency: AUD
                            creditDebitIndicator: CREDIT
                        entityAccountId: 2f959315-541b-4a98-86ec-77fa0ed21cbf
                        nickname: For a Rainy Day
                        productId: cef1a458-471e-432e-af99-6ceb8bbb75d3
                        productVersion: '1'
                        productGroup: SAVINGS
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InternalServerError_'
      description: |-

        Get all accounts associated with a business
      summary: Get All Accounts
      tags:
        - Accounts
      security:
        - B2CToken:
            - ACCOUNTS_READ
      parameters: []
    post:
      operationId: CreateSubscriptionV2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  accountNumber:
                    type: string
                  bsb:
                    type: string
                  nickname:
                    type: string
                  accountId:
                    type: string
                required:
                  - accountNumber
                  - bsb
                  - nickname
                  - accountId
                type: object
              examples:
                Example 1:
                  value:
                    nickname: TXN Accounts - Pilot
                    bsb: '834696'
                    accountNumber: '842491705'
                    accountId: 91233c30-1501-40e5-ba58-b3dcc73fe940
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_Productnotfound_'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_Validationerroronbody_'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InternalServerError_'
      description: Create Account
      summary: Create Account
      tags:
        - Accounts
      security:
        - B2CToken:
            - ACCOUNTS_EDIT
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                productVersion:
                  type: number
                  format: double
                productId:
                  type: string
              required:
                - productVersion
                - productId
              type: object
  /v2/accounts/{id}:
    get:
      operationId: GetAccountV2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountV2'
              examples:
                Example 1:
                  value:
                    accountState: ACTIVE
                    accountId: 6de193cf-048d-41bf-bbba-d9da23736245
                    accountNumber: '342176872'
                    bsb: '834696'
                    balances:
                      booked:
                        value: 100000
                        currency: AUD
                        creditDebitIndicator: CREDIT
                      available:
                        value: 100000
                        currency: AUD
                        creditDebitIndicator: CREDIT
                    entityAccountId: 2f959315-541b-4a98-86ec-77fa0ed21cbf
                    nickname: TXN Accounts - Pilot
                    productId: b7b6753c-cf27-46da-9c3e-2397f17406ab
                    productVersion: '1'
                    productGroup: CURRENT
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InvalidAccount_'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BasicErrorResponse_Theserverhasnotfoundanythingmatchingtheaccountid_
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BasicErrorResponse_Validationerror-Invaliduuid_
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InternalServerError_'
      description: Get account by id
      summary: Get Account by ID
      tags:
        - Accounts
      security:
        - B2CToken:
            - ACCOUNTS_READ
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
  /v2/accounts/{id}/name:
    patch:
      operationId: UpdateNicknameV2
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InvalidAccount_'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BasicErrorResponse_Businessalreadyhasanaccountwithsamenickname_
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BasicErrorResponse_Validationerror-Invaliduuid_
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InternalServerError_'
      description: Update the nickname of a bank account
      summary: Update Account Nickname
      tags:
        - Accounts
      security:
        - B2CToken:
            - ACCOUNTS_EDIT
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                nickname:
                  type: string
              required:
                - nickname
              type: object
  /v2/products/summary/{id}/version/{version}:
    get:
      operationId: GetProductVersionSummaryV2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductV2'
              examples:
                Example 1:
                  value:
                    productId: b7b6753c-cf27-46da-9c3e-2397f17406ab
                    productGroup: CURRENT
                    productDescription: >-
                      Basic transaction account being offered to customers for
                      Pilot.
                    productName: TXN Accounts
                    version: 1
                    documents:
                      - description: >-
                          All content for user to see on product summary screen
                          goes here
                        name: Product Summary
                        version: '1'
                        files:
                          - url: >-
                              https://client.env.cxnpl.io.cdn/files/products/TRANSACTION_PRODUCT_ID/v3/app_product_summary.md
                            format: OTHER
                            label: app_product_summary
                          - url: >-
                              https:/client.env.cxnpl.io.cdn/files/products/SAVINGS_PRODUCT_ID/v3/Target%2BMarket%2BDetermination_Transaction%2BAccount_v0.1.pdf
                            format: PDF
                            label: Target Market Determination
                          - url: >-
                              https://client.env.cxnpl.io.cdn/files/products/SAVINGS_PRODUCT_ID/v3/Terms%2BAnd%2BConditions_Transaction%2BAccount_v0.1.pdf
                            format: PDF
                            label: Terms and Conditions
                        publishedDate: 2022-09-05T01:13:55.092+0000
                    currency:
                      currencyCode: AUD
                    cards:
                      - type: DEBIT
                        scheme: MASTERCARD
                        formType: PHYSICAL
                        maximumNumber: 99
                        defaultCard: true
                        frontTemplateImage:
                          url: https://iili.io/60Qmbt.png
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_TokenExpired_'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BasicErrorResponse_Theserverhasnotfoundanythingmatchingtheproductkey_
        '422':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_ValidationerroronPath_'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InternalServerError_'
      description: Retrieve the product summary by product id and version
      summary: Get Product Summary
      tags:
        - Products
      security:
        - B2CToken: []
      parameters:
        - description: The product ID (given to you by your client succcess manager)
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The product version (given to you by your client succcess manager)
          in: path
          name: version
          required: true
          schema:
            type: string
  /v2/products/available:
    get:
      operationId: GetAvailableProductsV2
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                properties:
                  products:
                    items:
                      $ref: '#/components/schemas/ProductV2'
                    type: array
                required:
                  - products
                type: object
              examples:
                Example 1:
                  value:
                    products:
                      - productId: b7b6753c-cf27-46da-9c3e-2397f17406ab
                        productGroup: CURRENT
                        productDescription: >-
                          Basic transaction account being offered to customers
                          for Pilot.
                        productName: TXN Accounts
                        version: 1
                        documents:
                          - description: >-
                              All content for user to see on product summary
                              screen goes here
                            name: Product Summary
                            version: '1'
                            files:
                              - url: >-
                                  https://client.env.cxnpl.io.cdn/files/products/TRANSACTION_PRODUCT_ID/v3/app_product_summary.md
                                format: OTHER
                                label: app_product_summary
                              - url: >-
                                  https:/client.env.cxnpl.io.cdn/files/products/SAVINGS_PRODUCT_ID/v3/Target%2BMarket%2BDetermination_Transaction%2BAccount_v0.1.pdf
                                format: PDF
                                label: Target Market Determination
                              - url: >-
                                  https://client.env.cxnpl.io.cdn/files/products/SAVINGS_PRODUCT_ID/v3/Terms%2BAnd%2BConditions_Transaction%2BAccount_v0.1.pdf
                                format: PDF
                                label: Terms and Conditions
                            publishedDate: 2022-09-05T01:13:55.092+0000
                        currency:
                          currencyCode: AUD
                        cards:
                          - type: DEBIT
                            scheme: MASTERCARD
                            formType: PHYSICAL
                            maximumNumber: 99
                            defaultCard: true
                            frontTemplateImage:
                              url: https://iili.io/60Qmbt.png
                      - productId: b7b6753c-cf27-46da-9c3e-2397f17406ab
                        productGroup: SAVINGS
                        productDescription: >-
                          Basic savings account being offered to customers for
                          Pilot.
                        productName: SAVINGS Accounts
                        version: 1
                        documents:
                          - description: >-
                              All content for user to see on product summary
                              screen goes here
                            name: Product Summary
                            version: '0.2'
                            files:
                              - format: OTHER
                                label: app_product_summary
                              - format: PDF
                                label: Target Market Determination
                              - format: PDF
                                label: Terms and Conditions
                            publishedDate: 2022-09-05T01:13:55.092+0000
                        currency:
                          currencyCode: AUD
                        cards: []
        '403':
          description: Token Expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_TokenInvalid_'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BasicErrorResponse_Theserverwasunabletoprocesstherequestbecauseitcontainsinvaliddata_
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicErrorResponse_InternalServerError_'
      description: Retrieve all available products
      summary: Get Available Products
      tags:
        - Products
      security:
        - B2CToken: []
      parameters: []
servers:
  - url: https://cxnpl-api.myob-uat.preprod.cxnpl.io/
