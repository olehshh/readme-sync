{
  "openapi": "3.0.0",
  "info": {
    "version": "2019-08-15",
    "title": "Hummingbird API"
  },
  "servers": [
    {
      "description": "Hummingbird Sandbox API (Used for Test Purposes)",
      "url": "https://api.sandbox.hummingbird.co"
    },
    {
      "description": "Hummingbird Production API",
      "url": "https://api.hummingbird.co"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "paths": {
    "/alerts": {
      "post": {
        "summary": "Create a new alert",
        "tags": [
          "Alert Management"
        ],
        "operationId": "alerts_post",
        "description": "Create a new Alert with its associated Data. Payload will return your processing token, which can be used to see your alerts processing state via \u003Ca href=\"https://docs.hummingbird.co/reference/alerts_get\"\u003EFetch an Alert\u003C/a\u003E.",
        "requestBody": {
          "$ref": "#/components/requestBodies/AlertRequest"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/AlertCreateResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "409": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/alerts/{token}": {
      "get": {
        "summary": "Fetch an alert",
        "tags": [
          "Alert Management"
        ],
        "operationId": "alerts_get",
        "description": "Retrieve the Alerts current processing State. If the Alert was successfully processed your payload will also include the Case and Review token. To get your Alerts token, please fetch the Case via \u003Ca href=\"https://docs.hummingbird.co/reference/cases_get\"\u003EFetch a Case\u003C/a\u003E.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertFetchResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AlertTokenParameter"
          }
        ]
      }
    },
    "/cases": {
      "get": {
        "summary": "List cases",
        "tags": [
          "Case Management"
        ],
        "operationId": "cases_index_get",
        "description": "List existing cases, filtered as specified by query parameters.\nThis endpoint follows Relay conventions for pagination. Cursors are only applicable to the current query and cannot be re-used with different filter parameters.\nOnly cases from the organization associated with the credentials provided in the Authorization header will be returned.\nUnless otherwise noted, results are returned in ascending order by their createdAt timestamp.\nExample request: `GET /cases?createdBetween=2020-08-01...2021-09-02`",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CaseListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/RelayConnectionAfterParameter"
          },
          {
            "$ref": "#/components/parameters/RelayConnectionBeforeParameter"
          },
          {
            "$ref": "#/components/parameters/RelayConnectionFirstParameter"
          },
          {
            "$ref": "#/components/parameters/RelayConnectionLastParameter"
          },
          {
            "name": "createdBetween",
            "in": "query",
            "description": "Filters returned cases to those created between the given iso8601 formatted timestamps. Can be open-ended.",
            "example": {
              "range": {
                "value": "2020-11-24T00:00:00Z...2020-11-25T00:00:00Z"
              },
              "greater_than_or_equal": {
                "value": "2020-11-24T00:00:00Z..."
              },
              "less_than": {
                "value": "...2020-11-25T00:00:00Z"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedBetween",
            "in": "query",
            "description": "Filters returned cases to those updated between the given iso8601 formatted timestamps. Can be open-ended. Causes results to be ordered by updatedAt.",
            "example": {
              "range": {
                "value": "2020-11-24T00:00:00Z...2020-11-25T00:00:00Z"
              },
              "greater_than_or_equal": {
                "value": "2020-11-24T00:00:00Z..."
              },
              "less_than": {
                "value": "...2020-11-25T00:00:00Z"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflow",
            "in": "query",
            "description": "Filters returned cases to those with a review that has the workflow specified.",
            "examples": {
              "triage": {
                "value": "triage"
              },
              "aml-investigation": {
                "value": "aml-investigation"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ExcludeParameter"
        }
      ],
      "post": {
        "summary": "Create case",
        "tags": [
          "Case Management"
        ],
        "operationId": "cases_index_post",
        "description": "Create a case with the given parameters and data. The case will be created for the organization associated with the credentials provided in the Authorization header. If you have a case assignment protocol enabled in Hummingbird, we will use that same protocol to assign the case. Otherwise, no account will be assigned to the case.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CaseCreateRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CaseResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "409": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/cases/{token}": {
      "get": {
        "summary": "Fetch a case",
        "tags": [
          "Case Management"
        ],
        "operationId": "cases_get",
        "description": "Retrieve a case with the given token. Returns an error if the case does not exist.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CaseGetResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ExcludeParameter"
          }
        ]
      },
      "put": {
        "summary": "Update a case",
        "tags": [
          "Case Management"
        ],
        "operationId": "cases_put",
        "description": "Update a case with the given token to have the data provided. Returns an error if the case does not exist.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CaseUpdateRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CasePutResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CaseTokenParameter"
        },
        {
          "$ref": "#/components/parameters/ExcludeParameter"
        }
      ]
    },
    "/cases/id_lookup": {
      "post": {
        "summary": "Fetch a case by ID",
        "operationId": "cases_id_lookup_post",
        "description": "Look up an existing case by ID. If the case exists, it will return the appropriate case.",
        "tags": [
          "Case Management"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CaseLookupRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CaseGetResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ExcludeParameter"
        }
      ]
    },
    "/cases/{token}/attachments": {
      "get": {
        "summary": "List case attachments",
        "tags": [
          "Case Management"
        ],
        "operationId": "cases_attachment_get",
        "description": "Fetch case attachments along with a pre-signed url enabling you to download the files.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CaseAttachmentsResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/CaseTokenParameter"
          }
        ]
      }
    },
    "/cases/{token}/validate/{jurisdiction}": {
      "get": {
        "summary": "Validate a case before filing",
        "tags": [
          "Case Filing"
        ],
        "operationId": "cases_file_get",
        "description": "This endpoint will run validations against the case with the given token, but will not file. This can be used as a pre-filing test endpoint to verify that your filing has no known validation errors for the jurisdiction specified. Returns any validation errors if there are any. Returns an error if the case does not exist. Returns a success status if all validations are run without error.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ValidationResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CaseTokenParameter"
        },
        {
          "$ref": "#/components/parameters/JurisdictionParameter"
        }
      ]
    },
    "/cases/{token}/filing-status": {
      "get": {
        "summary": "Fetch the filing status of a case",
        "tags": [
          "Case Filing"
        ],
        "operationId": "cases_filing_status_get",
        "description": "Retrieve the filing statuses of a case with the given token. Returns an error if the case does not exist.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/FilingResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CaseTokenParameter"
        }
      ]
    },
    "/cases/{token}/cancel": {
      "post": {
        "summary": "Cancel a case",
        "tags": [
          "Case Management"
        ],
        "operationId": "cases_cancel",
        "description": "Cancel an existing case with the given token and all of the reviews within it. This operation requires that the case and all its reviews be eligible for cancellation, i.e. the case is neither locked nor merging, and none of its reviews have been filed. Returns an error if the case does not exist or if it cannot be cancelled. Returns a success status if the case was successfully cancelled.",
        "requestBody": {
          "$ref": "#/components/requestBodies/CaseCancelRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CaseCancelResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CaseTokenParameter"
        }
      ]
    },
    "/cases/{token}/entities": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CaseTokenParameter"
        }
      ],
      "delete": {
        "description": "Please contact Hummingbird for more information about this endpoint.",
        "tags": [
          "Case Management"
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/imports/case": {
      "post": {
        "summary": "Import cases",
        "tags": [
          "Case Importing"
        ],
        "operationId": "imports_case_post",
        "description": "This endpoint will allow you to import multiple cases at once. The POST body should conform to the newline-delimited \u003Ca href=\"https://jsonlines.org/\"\u003EJSONLines\u003C/a\u003E format. Each case should resemble a \u003Ca href=\"https://docs.hummingbird.co/#tocS_CaseCreateRequest\"\u003ECaseCreateRequest\u003C/a\u003E object, and each case should take up exactly one line, with a newline separating out the cases. The cases are all imported as a background job. This endpoint will return to you a token that you can use to lookup the status of the cases.",
        "requestBody": {
          "content": {
            "application/x-ndjson": {
              "schema": {

              },
              "example": "{ ... first case data ... }\n{ ... second case data ... }\n{ ... third case data ... }\n"
            }
          }
        },
        "x-readme": {
          "headers": [
            {
              "key": "content-type",
              "value": "application/x-ndjson"
            }
          ]
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateImportResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/imports/{token}": {
      "get": {
        "summary": "Fetch a case import",
        "tags": [
          "Case Importing"
        ],
        "operationId": "imports_case_get",
        "description": "Retrieve the status of a case import with the given token. The status of each case will be returned, if the import was for multiple cases. Returns an error if the case does not exist. If index field inside the error indicates which case in the request had the error.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/FetchImportResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/CaseTokenParameter"
        }
      ]
    },
    "/alert_uploads": {
      "post": {
        "summary": "Alert Uploads",
        "tags": [
          "Alert Uploads"
        ],
        "operationId": "alert_uploads_post",
        "description": "This endpoint allows you to upload Alert requests with more than 2MB of data. It involves a 4-step client flow: 1. Request an upload URL by calling the POST /alert_uploads endpoint. The request body should be an empty JSON object. 2. Upload your encrypted alerts data to the provided URL. 3. Notify the server that your upload is complete by calling the PUT /alerts_uploads/{token}/complete endpoint. 4. Poll for the outcome of the upload by calling the GET /alert_uploads/{token} endpoint. To see how to encrypt your Alerts request body and upload to S3, see this [help center article] (https://help.hummingbird.co/hummingbird-api/how-do-i-upload-larger-alerts-data-via-api)",
        "responses": {
          "201": {
            "$ref": "#/components/responses/AlertUploadsResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/alert_uploads/{token}/complete": {
      "put": {
        "summary": "Complete Upload",
        "tags": [
          "Alert Uploads"
        ],
        "operationId": "alert_uploads_complete_put",
        "description": "Notify the server that the alert upload has been completed on your side. Send an empty JSON object {}. Use the token obtained from the response to the initial GET request. The server will will synchronously verify that the uploaded file exists in S3 and enqueue for further processing. No other verification or processing will occur as a result of this call.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertUploadsGetResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AlertUploadTokenParameter"
          }
        ]
      }
    },
    "/alert_uploads/{token}": {
      "get": {
        "summary": "Fetch status",
        "tags": [
          "Alert Uploads"
        ],
        "operationId": "alert_uploads_get",
        "description": "This endpoint can be polled for the results of the upload. It returns the overall status of the alert (and an error message if one occurred), as well as an array of AlertFetchResponse objects (the same response typically provided by the GET /alerts/{token} endpoint on a per-alert basis). The array of alerts will remain EMPTY until ALL alerts in the upload have been processed, and the status is either PROCESSED or ERROR.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AlertUploadsGetResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AlertUploadTokenParameter"
          }
        ]
      }
    },
    "/attachments": {
      "post": {
        "summary": "Create attachments",
        "tags": [
          "Attachments"
        ],
        "operationId": "attachments_post",
        "description": "This endpoint allows you to create an attachment token. This request is the first of a three step process to fully add an attachment to a Hummingbird case.\nFor more information, see our accompanying [help center article](https://help.hummingbird.co/hummingbird-api/can-i-upload-files-over-the-api).",
        "requestBody": {
          "$ref": "#/components/requestBodies/AttachmentRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AttachmentResponse"
          },
          "400": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/crm/businesses": {
      "put": {
        "summary": "Add or update a business",
        "operationId": "crm_business_put",
        "description": "Create a new business or multiple businesses. If a business with the same ID exists, it will update fields of the existing record instead. If any errors are encountered during creation the endpoint will return an object with one or more descriptive errors. The request to this endpoint is expected to have one or more named fields associated with the business; any field omitted from the request will be left in its current state. Declaring a field in the request body, even if the field is explicitly set to null, will result in the field being updated.\nIf create/update are successful, the response body will contain an object with all fields for the business. If any failures occur the response body will provide an error message with details.",
        "tags": [
          "CRM (Beta)"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/BusinessesRequest"
        },
        "responses": {
          "200": {
            "description": "A list of newly added or updated businesses",
            "$ref": "#/components/responses/BusinessesCreateResponse"
          },
          "404": {
            "description": "Malformed upsert request",
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "500": {
            "description": "Internal Server Error",
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponseV2"
          }
        }
      }
    },
    "/crm/businesses/{token}": {
      "get": {
        "summary": "Fetch a business",
        "operationId": "crm_business_get",
        "description": "Fetch an existing business using the unique token identifier Hummingbird generated during creation of the business. If the business exists an object containing all the data for the record will be returned. If the business cannot be found the endpoint will return an error message with an explanation.",
        "tags": [
          "CRM (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CRMTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/BusinessGetResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponseV2"
          }
        }
      }
    },
    "/crm/businesses/id_lookup": {
      "post": {
        "summary": "Look up a business by ID",
        "operationId": "crm_business_id_lookup_post",
        "description": "Look up an existing business by ID. If the business exists, it will redirect to the fetch endpoint with corresponding token of the business in the path.",
        "tags": [
          "CRM (Beta)"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/BusinessLookupRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/BusinessGetResponse"
          },
          "303": {
            "description": "Redirect to fetch endpoint with corresponding token of the business.",
            "headers": {
              "Location": {
                "description": "Redirect url",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "text/html": {

              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponseV2"
          }
        }
      }
    },
    "/crm/people": {
      "put": {
        "summary": "Add or update a person",
        "operationId": "crm_person_put",
        "description": "Create a new person or multiple people. If a person with the same ID exists, it will update fields of the existing record instead. If any errors are encountered during creation the endpoint will return an object with one or more descriptive errors. The request to this endpoint is expected to have one or more named fields associated with the person; any field omitted from the request will be left in its current state. Declaring a field in the request body, even if the field is explicitly set to null, will result in the field being updated.\nIf create/update are successful, the response body will contain an object with all fields for the person. If any failures occur the response body will provide an error message with details.",
        "tags": [
          "CRM (Beta)"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PeopleRequest"
        },
        "responses": {
          "200": {
            "description": "A list of newly added or updated people",
            "$ref": "#/components/responses/PeopleCreateResponse"
          },
          "400": {
            "description": "Malformed upsert request",
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "500": {
            "description": "Internal Server Error",
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponseV2"
          }
        }
      }
    },
    "/crm/people/{token}": {
      "get": {
        "summary": "Fetch a person",
        "operationId": "crm_person_get",
        "description": "Fetch an existing person using the unique token identifier Hummingbird generated during creation of the person. If the person exists an object containing all the data for the record will be returned. If the person cannot be found the endpoint will return an error message with an explanation.",
        "tags": [
          "CRM (Beta)"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/CRMTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PersonGetResponse"
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponseV2"
          }
        }
      }
    },
    "/crm/people/id_lookup": {
      "post": {
        "summary": "Look up a person by ID",
        "operationId": "crm_person_id_lookup_post",
        "description": "Look up an existing person by ID. If the person exists, it will redirect to the fetch endpoint with corresponding token of the person in the path.",
        "tags": [
          "CRM (Beta)"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PersonLookupRequest"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PersonGetResponse"
          },
          "303": {
            "description": "Redirect to fetch endpoint with corresponding token of the person.",
            "headers": {
              "Location": {
                "description": "Redirect url",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "text/html": {

              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "500": {
            "$ref": "#/components/responses/ErrorResponseV2"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponseV2"
          }
        }
      }
    },
    "/oauth/token": {
      "post": {
        "description": "OAuth access token endpoint. Please see Access Token documentation for more information.",
        "tags": [
          "Authentication"
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivitiesOther": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "category": {
            "description": "The category of activity to report, matches to the jurisdiction filing.",
            "$ref": "#/components/schemas/SARActivityClassificationNullable",
            "default": "OTHER_ACTIVITIES"
          },
          "value": {
            "description": "Actual text of activity to report.",
            "type": "string",
            "example": "Mining Cryptocurrency"
          }
        }
      },
      "Address": {
        "type": "object",
        "nullable": true,
        "properties": {
          "address_line_1": {
            "type": "string",
            "example": "A hole in the ground",
            "nullable": true
          },
          "address_line_2": {
            "type": "string",
            "example": "Sackville-Bagginses",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Bag End",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "ME",
            "nullable": true
          },
          "country": {
            "type": "string",
            "example": "US",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "example": "12345",
            "nullable": true
          }
        }
      },
      "AddressWithType": {
        "type": "object",
        "nullable": true,
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "object",
            "properties": {
              "address_type": {
                "description": "Labels the address with a type",
                "$ref": "#/components/schemas/AddressTypeNullable"
              },
              "address_type_other": {
                "description": "Describes an address type of \"Other\"",
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Alert": {
        "type": "object",
        "required": [
          "rule"
        ],
        "example": {
          "id": "ALERT-123ABC",
          "rule": "Weekly Average Transaction Size",
          "triggered_at": "2020-10-01T12:30:00Z"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string",
            "example": null
          },
          "id": {
            "description": "Your id for this alert.",
            "type": "string",
            "nullable": true,
            "example": "ALERT-123ABC"
          },
          "triggered_at": {
            "description": "When was this alert triggered?",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "rule": {
            "description": "What rule was used to trigger this alert?",
            "type": "string",
            "example": "Weekly Average Transaction Size"
          },
          "review_tags": {
            "description": "What tags should be applied to the review associated with this alert?",
            "type": "array",
            "items": {
              "type": "string",
              "example": "PEP"
            },
            "uniqueItems": true
          },
          "references": {
            "description": "What data is associated with this alert? E.g. Which subjects and transactions are associated with this alert? Within the UI, alert references are used to tie alerts to the associated data. Transaction references will be displayed within the Alerts Triggered card. Entity references will have the alert added to their full profile in the Related Alerts section.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reference"
            }
          },
          "comments": {
            "description": "Any additional comments associated with this alert.",
            "type": "string",
            "nullable": true,
            "example": "Three transactions over $800 were seen within a single week."
          },
          "links": {
            "description": "List of links to other pages that might be valuable for this alert.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalPageLink"
            }
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          },
          "grouping_keys": {
            "description": "[Only used if you do your own alerts to case grouping] What keys should be used to group these alerts into cases? If not provided, alerts will be grouped by subject identifiers. Grouping keys are not persisted onto the case alert.",
            "type": "array",
            "items": {
              "type": "string",
              "example": "GROUP-abc123",
              "uniqueItems": true
            }
          }
        }
      },
      "AlertCreateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "alerts": {
            "type": "array",
            "description": "Set of alerts which were created",
            "items": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The processing token for the Alert, generated by Hummingbird and used to fetch the current processing state.",
                  "readOnly": true
                },
                "id": {
                  "description": "Your id for this alert.",
                  "type": "string",
                  "readOnly": true,
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "AlertFetchResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false,
            "description": "Whether this GET request succeeded. This does NOT reflect the status of the actual alert - for that see `state` instead."
          },
          "alert": {
            "type": "object",
            "description": "The current data and status of the alert.",
            "properties": {
              "token": {
                "type": "string",
                "description": "The unique token for the Alert, generated by Hummingbird.",
                "readOnly": true
              },
              "id": {
                "type": "string",
                "description": "Your unique ID for the Alert, which you sent us when the alert was created."
              },
              "processed_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "The timestamp (iso8601) when the alert was processed successfully. This will be null until the alert is processed."
              },
              "case_token": {
                "type": "string",
                "nullable": true,
                "description": "The token of the case the alert is associated with. This will be null until the alert is processed."
              },
              "review_token": {
                "type": "string",
                "nullable": true,
                "description": "The token of the review the alert is associated with. This will be null until the alert is processed."
              },
              "state": {
                "type": "string",
                "enum": [
                  "pending",
                  "processed",
                  "error",
                  "stuck",
                  "dismissed",
                  "suppressed"
                ],
                "description": "The state of the Alert\n * `pending`: Alert has been received but has not been processed.\n * `processed`: Alert has been processed successfully.\n * `error`: Alert failed to process. See the `error` field for the message.\n"
              },
              "error": {
                "type": "string",
                "nullable": true,
                "description": "The error message that prevented processing. This will be null unless an error occurred during processing."
              }
            }
          }
        }
      },
      "AlertRequest": {
        "type": "object",
        "required": [
          "alerts"
        ],
        "properties": {
          "alerts": {
            "description": "A list of alert details. Send multiple alerts if alerts can be grouped, e.g. if a set of transactions triggered multiple rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            }
          },
          "workflow": {
            "type": "string",
            "description": "A string descriptor to indicate which workflow to initiate. If empty, will default to whichever workflow is configured as an initial workflow for the organization.",
            "example": "triage"
          },
          "data": {
            "type": "object",
            "description": "Additional information to add into the case including subject PII, accounts, transaction histories, etc.",
            "allOf": [
              {
                "$ref": "#/components/schemas/CaseDataRequest"
              },
              {
                "type": "object",
                "properties": {
                  "attachments": {
                    "description": "Attachment attributes",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CaseAttachmentRequest"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "AlertUploadsGetResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "alert_upload": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "Unique identifier created by Hummingbird for the Alert Upload.",
                "readOnly": true,
                "example": "ZxiJDeAVWmDUaa7iDJLGArCJ"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2021-11-12T19:11:37.889Z"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2021-11-12T19:11:36.948Z"
              },
              "alert_processing_started_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "example": "2021-11-12T19:21:10.439Z"
              },
              "failed_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true,
                "example": null
              },
              "error_message": {
                "type": "string",
                "nullable": true,
                "readOnly": true,
                "example": null
              },
              "status": {
                "type": "string",
                "readOnly": true,
                "description": "The processing status of the alert. PENDING|PROCESSING|PROCESSED|PROCESSING_ERROR|UPLOAD_ERROR",
                "example": "PENDING"
              },
              "alerts": {
                "type": "array",
                "readOnly": true,
                "description": "Details for each alert.",
                "items": {
                  "$ref": "#/components/schemas/AlertFetchResponse"
                }
              }
            }
          }
        }
      },
      "AlertUploadsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "alert_upload": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "Unique identifier created by Hummingbird for the Alert Upload.",
                "readOnly": true,
                "example": "ZxiJDeAVWmDUaa7iDJLGArCJ"
              },
              "upload": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string",
                    "description": "Method of the Upload.",
                    "readOnly": true,
                    "example": "post"
                  },
                  "url": {
                    "type": "string",
                    "description": "Upload URL",
                    "readOnly": true,
                    "example": "https://s3.us-west-2.amazonaws.com/hummingbird...."
                  },
                  "fields": {
                    "type": "object",
                    "additionalProperties": true,
                    "description": "An arbitrary set of fields which must be included with the HTTP POST form data used for upload."
                  }
                }
              },
              "encryption": {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "integer",
                    "readOnly": true,
                    "example": 1
                  },
                  "public_key": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Encryption ID",
                        "example": "FVczGR6DDoKYHSY2LpiG6XGQ"
                      },
                      "key": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Encryption key",
                        "example": "-----BEGIN PUBLIC KEY-----..."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AttachmentRequest": {
        "type": "object",
        "required": [
          "filename",
          "mime_type"
        ],
        "properties": {
          "filename": {
            "description": "The name of the attachment file you plan to upload.",
            "type": "string"
          },
          "mime_type": {
            "description": "The mime type of the file you plan to upload. Hummingbird restricts the types of files that are available to be uploaded via this API. For infrormation about these restrictions and the file attachment process see our [help center article ](https://help.hummingbird.co/hummingbird-api/can-i-upload-files-over-the-api).\n",
            "example": "text/csv",
            "type": "string"
          }
        }
      },
      "AttachmentResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "The unique token for the Attachment, generated by Hummingbird and used in subsequent requests to save the attachment to a case.",
            "readOnly": true
          },
          "upload": {
            "$ref": "#/components/schemas/AttachmentUpload"
          }
        }
      },
      "Balance": {
        "type": "object",
        "nullable": true,
        "required": [
          "balance",
          "recorded_at"
        ],
        "example": {
          "balance": {
            "amount": 12345,
            "currency_code": "USD"
          },
          "recorded_at": "2020-11-04T21:25:38Z"
        },
        "properties": {
          "balance": {
            "description": "Actual amount of balance and currency.",
            "$ref": "#/components/schemas/CurrencyMinorUnits"
          },
          "recorded_at": {
            "description": "When was this balance taken?",
            "example": "2020-11-04T21:25:38Z",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          },
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          }
        }
      },
      "BankAccount": {
        "description": "A Bank Account can be added for investigating links between accounts.",
        "type": "object",
        "example": {
          "id": "BA-123ABC",
          "routing_number": "021001021",
          "account_number": "002575960020289900212369",
          "account_type": "DEPOSITORY"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this bank account. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "BA-123ABC"
          },
          "account_holder_id": {
            "description": "The account holder for this account. The ID is the one provided by you. To associate this bank account with an individual (or business), ensure that this ID matches the individual's ID. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "ID-123ABC"
          },
          "institution_id": {
            "description": "The institution holding the account. The ID is the one provided by you.",
            "type": "string",
            "nullable": true,
            "example": "IN-123ABC"
          },
          "routing_number": {
            "description": "Routing number of bank account.",
            "type": "string",
            "nullable": true,
            "example": "021001021"
          },
          "account_number": {
            "description": "Account number of bank account.",
            "type": "string",
            "nullable": true,
            "example": 2.5759600202899e+21
          },
          "account_type": {
            "description": "Type of account.",
            "$ref": "#/components/schemas/InvestigationAccountTypeNullable"
          },
          "account_type_other": {
            "description": "Value for account_type when account_type is 'OTHER'",
            "type": "string",
            "nullable": true
          },
          "account_subtype": {
            "description": "Subtype of account.",
            "$ref": "#/components/schemas/InvestigationAccountSubtypeNullable"
          },
          "account_subtype_other": {
            "description": "Value for account_subtype when account_subtype is 'OTHER'",
            "type": "string",
            "nullable": true
          },
          "country": {
            "description": "Country where account is located.",
            "type": "string",
            "nullable": true,
            "example": "US"
          },
          "state": {
            "description": "State where account is located.",
            "type": "string",
            "nullable": true,
            "example": "CA"
          },
          "opened_at": {
            "description": "Date the account was opened.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          },
          "closed": {
            "description": "If the account was closed.",
            "type": "boolean",
            "nullable": true
          },
          "closed_at": {
            "description": "Date the account was closed.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          },
          "signatories": {
            "description": "A person who is authorized under authority from the account holder to transact on an account holder's account.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Signatory"
            }
          },
          "balances": {
            "description": "A record of the amount of money in an account and when the amount was recorded.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Balance"
            }
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "Branch": {
        "description": "A branch represents a branch of a financial institution involved in a case.",
        "type": "object",
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this branch.",
            "type": "string",
            "nullable": true,
            "example": "BR-123ABC"
          },
          "address": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ]
          },
          "rssd_number": {
            "type": "string",
            "nullable": true,
            "example": "952847"
          },
          "role_in_transaction": {
            "$ref": "#/components/schemas/RoleInTransactionNullable"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "Business": {
        "description": "A business represents a Subject to a Case that is a business entity.",
        "type": "object",
        "example": {
          "id": "BA-123ABC",
          "legal_names": [
            "Mordor Bank"
          ],
          "tins": [
            {
              "number": "444556666",
              "type": "EIN"
            }
          ],
          "phone_numbers": [
            {
              "phone_number": "4151231234",
              "extension": "123",
              "phone_type": "WORK"
            }
          ],
          "other_info": [
            {
              "label": "House",
              "value": "Elrond"
            }
          ]
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this business. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "BZ-123-ABC"
          },
          "crm_token": {
            "description": "Token of the library business object that is tied to the business.",
            "type": "string",
            "nullable": true
          },
          "legal_names": {
            "description": "Legal names for the business.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Inn of the Prancing Pony",
              "Favorite Bree Inn of Aragorn"
            ]
          },
          "dba_names": {
            "description": "\"Doing Business As\" (DBA) names for the business.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Green Dragon Inn",
              "Golden Perch Inn"
            ]
          },
          "tins": {
            "description": "The TINs associated with the business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TIN"
            }
          },
          "role_in_activity": {
            "description": "Specify role in activity.",
            "$ref": "#/components/schemas/RoleInActivityNullable"
          },
          "role_in_activity_other": {
            "description": "Value for role_in_activity when role_in_activity is 'OTHER'",
            "type": "string",
            "nullable": true
          },
          "corroborative_statement": {
            "description": "Has this subject provided a corroborative statement to the activity?",
            "type": "boolean",
            "nullable": true
          },
          "naics_code": {
            "description": "The NAICS code for the business.",
            "type": "string",
            "nullable": true,
            "example": "722"
          },
          "type_of_business": {
            "description": "The type of business.",
            "type": "string",
            "nullable": true,
            "example": "Food Services and Drinking Places"
          },
          "phone_numbers": {
            "description": "The phone numbers associated with the business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "email_addresses": {
            "description": "The email addresses associated with the business.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "prancing-pony-inn@shiremail.com",
              "owner@innoftheprancingpony.com"
            ]
          },
          "websites": {
            "description": "The websites associated with the business.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "innoftheprancingpony.com",
              "po.ny",
              "prancingpony.geocities.com'"
            ]
          },
          "addresses": {
            "description": "The addresses associated with the business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressWithType"
            }
          },
          "identity_documents": {
            "description": "The identity documents associated with the business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDocument"
            }
          },
          "institution_relationships": {
            "description": "The relationships this business has with an institution.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionRelationship"
            }
          },
          "links": {
            "description": "List of links to other pages that might be valuable.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalPageLink"
            }
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "BusinessLookupRequest": {
        "type": "object",
        "required": [
          "business"
        ],
        "properties": {
          "business": {
            "description": "The business that is being requested",
            "type": "object",
            "example": {
              "id": "BUSINESS-1"
            },
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "Unique identifier associated with the business.",
                "type": "string",
                "example": "BUSINESS-1",
                "maxLength": 4096
              }
            }
          }
        }
      },
      "BusinessType": {
        "description": "Type of the business.",
        "type": "object",
        "example": {
          "label": "lifesciences - health_care",
          "naics_code": "1234"
        },
        "properties": {
          "label": {
            "description": "The type of business.",
            "nullable": true,
            "type": "string",
            "example": "lifesciences - health_care",
            "maxLength": 4096
          },
          "naics_code": {
            "description": "The NAICS code for the business.",
            "type": "string",
            "example": 12345,
            "maxLength": 256,
            "nullable": true
          }
        }
      },
      "BusinessesCreateResponse": {
        "type": "object",
        "properties": {
          "businesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryBusiness"
            }
          }
        }
      },
      "BusinessesRequest": {
        "type": "object",
        "required": [
          "businesses"
        ],
        "properties": {
          "businesses": {
            "description": "A list of businesses for creation or update within the Hummingbird app. At least one business is required in the submission, with a maximum limit of 100.",
            "type": "array",
            "minimum": 1,
            "maximum": 100,
            "items": {
              "$ref": "#/components/schemas/LibraryBusiness"
            }
          }
        }
      },
      "CaseAttachment": {
        "type": "object",
        "description": "Attachment on a case.",
        "properties": {
          "token": {
            "type": "string",
            "description": "The unique token for the attached file to the case, generated by Hummingbird.",
            "readOnly": true
          },
          "filename": {
            "type": "string",
            "description": "The name of the attached file.",
            "example": "john_doe_drivers_license.jpg"
          },
          "content_type": {
            "type": "string",
            "description": "The content type for the attached file.",
            "example": "image/jpeg"
          },
          "url": {
            "type": "string",
            "description": "A presigned url enabling you to download attachments from Hummingbird. The presigned url has a 10 minute expiration.",
            "readOnly": true
          },
          "created_at": {
            "description": "When this attachment was created.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "example": "2022-09-04T21:25:38Z"
          },
          "updated_at": {
            "description": "When this attachment was last updated.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "example": "2022-09-04T21:25:38Z"
          }
        }
      },
      "CaseAttachmentRequest": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "description": "The attachment identifier provided by Hummingbird during attachment creation.",
            "type": "string"
          }
        }
      },
      "CaseAttachmentsResponse": {
        "type": "object",
        "properties": {
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CaseAttachment"
            }
          }
        }
      },
      "CaseCancelRequest": {
        "type": "object",
        "required": [
          "reason"
        ],
        "properties": {
          "reason": {
            "description": "Why the case is being cancelled.",
            "type": "string"
          }
        }
      },
      "CaseCancelResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "case": {
            "type": "object",
            "nullable": true,
            "properties": {
              "cancelled_at": {
                "type": "string",
                "format": "date-time"
              },
              "token": {
                "description": "Unique identifier created by Hummingbird for the case.",
                "type": "string"
              }
            }
          },
          "error": {
            "type": "object",
            "nullable": true,
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ErrorType"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "CaseCreateRequest": {
        "type": "object",
        "required": [
          "case"
        ],
        "properties": {
          "case": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/CaseRequest"
              },
              {
                "type": "object",
                "properties": {
                  "queue": {
                    "description": "Assigns the case to a specific queue, identified by badge canonical ID that can be found in Badge Settings \u003E View.",
                    "nullable": true,
                    "writeOnly": true,
                    "type": "string",
                    "maxLength": 256,
                    "example": "AML_INVESTIGATOR"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "surveys": {
                    "description": "Survey responses",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Survey"
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "attachments": {
                    "description": "Attachment attributes",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CaseAttachmentRequest"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CaseFilingResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Filing"
          },
          {
            "type": "object",
            "properties": {
              "filing_data": {
                "description": "A data hash that encompasses jurisdiction-specific filing data.",
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/FilingDataResponseFincen"
                  },
                  {
                    "$ref": "#/components/schemas/FilingDataResponseFINTRAC"
                  },
                  {
                    "$ref": "#/components/schemas/FilingDataResponseGoAML"
                  }
                ]
              }
            }
          }
        ]
      },
      "CaseListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false,
            "readOnly": true,
            "description": "Whether this GET request was processed successfully."
          },
          "page_info": {
            "$ref": "#/components/schemas/RelayPageInfo"
          },
          "cases": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/RelayEdge"
                },
                {
                  "type": "object",
                  "properties": {
                    "case": {
                      "type": "object",
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "When this case was created."
                        },
                        "token": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier created by Hummingbird for the resource."
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "When this case was last updated."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "CaseLookupRequest": {
        "type": "object",
        "required": [
          "case"
        ],
        "properties": {
          "case": {
            "description": "The case that is being requested",
            "type": "object",
            "example": {
              "id": "CASE-1"
            },
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "Unique identifier associated with the business.",
                "type": "string",
                "example": "CASE-1",
                "maxLength": 4096
              }
            }
          }
        }
      },
      "CaseResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "notice": {
            "type": "string",
            "nullable": true
          },
          "error": {
            "type": "object",
            "nullable": true,
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ErrorType"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "case": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Case"
              },
              {
                "type": "object",
                "properties": {
                  "attachments": {
                    "description": "List of attachments on a case",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CaseAttachmentsResponse"
                    }
                  },
                  "filings": {
                    "description": "Filing responses for a jurisdiction.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CaseFilingResponse"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CaseUpdateRequest": {
        "type": "object",
        "required": [
          "case"
        ],
        "properties": {
          "case": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/CaseRequest"
              },
              {
                "type": "object",
                "properties": {
                  "queue": {
                    "description": "Assigns the case to a specific queue, identified by badge canonical ID that can be found in Badge Settings.",
                    "nullable": true,
                    "type": "string",
                    "maxLength": 256,
                    "example": "AML_INVESTIGATOR"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "attachments": {
                    "description": "Attachment attributes",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CaseAttachmentRequest"
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "CryptoAddress": {
        "description": "A Crypto Address represents information about an address used to send value over a blockchain. Each Crypto Address is owned by a single individual or institution.",
        "type": "object",
        "example": {
          "id": "BTC-123ABC",
          "blockchain": "BITCOIN",
          "address": "c176e6cca1f74cb19d458074716cac4e"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this crypto address. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "CR-123-ABC"
          },
          "account_holder_id": {
            "description": "The account holder for this account. The ID is the one provided by you. To associate this cryptoaddress with an individual (or business), ensure that this ID matches the individual's ID. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "ID-123ABC"
          },
          "institution_id": {
            "description": "The institution holding the account. The ID is the one provided by you.",
            "type": "string",
            "nullable": true,
            "example": "IN-123ABC"
          },
          "blockchain": {
            "description": "Specify blockchain where address lives.",
            "$ref": "#/components/schemas/InvestigationBlockchainTypeNullable"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "example": "c176e6cca1f74cb19d458074716cac4e"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "CurrencyMajorUnits": {
        "type": "object",
        "nullable": true,
        "required": [
          "amount_major",
          "currency_code"
        ],
        "properties": {
          "amount_major": {
            "description": "Amount in major units of the currency, with arbitrary precision.\nFor example:\n  - Ten dollars and thiry three cents is \"10.33\"\n  - Zero bitcoin and ten satoshi is \"0.0000001\"\n",
            "type": "string",
            "example": "10.50"
          },
          "currency_code": {
            "type": "string",
            "description": "The ISO 4217 three-letter currency code OR a currency identifier of your choosing.\nNon-ISO values will be normalized to all upper-case with whitespace removed.\n",
            "example": "USD"
          },
          "assume_iso_currency": {
            "type": "boolean",
            "default": true,
            "description": "This field can usually be omitted.\n\nIn general if a currency matches an ISO 4217 code it is assumed that the ISO currency\nwas intended. In the rare circumstance that a custom currency identifier conflicts\nwith an ISO code you may explicitly state so by setting this field to false.\n"
          }
        }
      },
      "CurrencyMinorUnits": {
        "type": "object",
        "nullable": true,
        "deprecated": false,
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "description": "Amount in the lowest denomination of the currency. For example, for USD, this would be the amount in cents.",
            "type": "integer",
            "example": 12345
          },
          "currency_code": {
            "$ref": "#/components/schemas/CurrencyCode",
            "default": "USD",
            "example": "USD"
          }
        }
      },
      "Device": {
        "description": "A Device represents information about a user session in your app or website from a device such as a laptop or mobile phone. Each Device can be linked to a single related Individual or Business object, though they may share characteristics like IP Address and fingerprint.",
        "type": "object",
        "example": {
          "id": "DEVICE-123ABC",
          "ip_address": "206.189.73.52",
          "name": "iphone"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this device. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "DV-123-ABC"
          },
          "owner_id": {
            "description": "The owner of this device. The ID is the one provided by you. To associate this device with an individual (or business), ensure that this ID matches the individual's ID. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "PE-123-ABC"
          },
          "ip_address": {
            "description": "Specify IP address of device.",
            "type": "string",
            "nullable": true,
            "example": "206.189.73.52"
          },
          "fingerprint": {
            "description": "Any unique device identifier.",
            "type": "string",
            "nullable": true,
            "example": "4c2773c6b3adeb55f38ab28579eaaa94"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Legolas' iPhone"
          },
          "operating_system": {
            "example": "IOS",
            "$ref": "#/components/schemas/InvestigationOperatingSystemNullable"
          },
          "browser": {
            "example": "FIREFOX",
            "$ref": "#/components/schemas/InvestigationBrowserTypeNullable"
          },
          "user_agent": {
            "description": "Arbitrary string describing the device",
            "type": "string",
            "nullable": true,
            "example": "Mozilla/5.0 (iPhone; ElvishMods)"
          },
          "first_seen_at": {
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "last_seen_at": {
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "ErrorMessagesResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            },
            "example": [
              {
                "message": "Failed to create a new person: the server crashed."
              }
            ]
          }
        }
      },
      "ExternalPageLink": {
        "type": "object",
        "required": [
          "label",
          "url"
        ],
        "properties": {
          "label": {
            "description": "Label to show to the investigator.",
            "type": "string",
            "example": "Homepage"
          },
          "url": {
            "description": "URL to link to.",
            "type": "string",
            "example": "https://www.example.com/"
          }
        }
      },
      "Filing": {
        "description": "A Filing is the resource that describes the details of the filing in a particular jurisdiction. The details of the case referenced are brought into the filing automatically as appropriate.",
        "type": "object",
        "required": [
          "jurisdiction",
          "workflow",
          "filing_data"
        ],
        "properties": {
          "jurisdiction": {
            "$ref": "#/components/schemas/FilingJurisdictionEnum"
          },
          "workflow": {
            "description": "The workflow for this filing.",
            "type": "string",
            "example": "aml-investigation"
          },
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this filing.",
            "type": "string",
            "nullable": true,
            "example": "FI-123ABC"
          },
          "filing_institution_id": {
            "description": "Your unique ID for the filing institution. This should reference a pre-created filing institution.",
            "type": "string",
            "nullable": true,
            "example": "INST-PPP"
          },
          "filing_data": {
            "description": "A data hash that encompasses jurisdiction-specific filing data.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/FilingDataFincen"
              },
              {
                "$ref": "#/components/schemas/FilingDataFINTRAC"
              },
              {
                "$ref": "#/components/schemas/FilingDataGoAML"
              }
            ]
          }
        }
      },
      "FilingDataFINTRAC": {
        "description": "Describes the details of the filing for FINTRAC.",
        "type": "object",
        "example": {
          "amount_involved": {
            "amount": 21000,
            "currency_code": "CAD"
          },
          "amount_blank_reason": "SUM_TRANSACTIONS",
          "activity_started_on": "2022-07-02T12:00:00Z",
          "activity_ended_on": "2022-07-02T12:00:00Z",
          "reason": "Questionable behavior"
        },
        "properties": {
          "filing_name": {
            "description": "Name of the filing.",
            "type": "string"
          },
          "narrative": {
            "description": "Detailed description of investigation and the findings.",
            "type": "string",
            "nullable": true,
            "example": "When Mr. Bilbo Baggins of Bag End announced that he would shortly..."
          },
          "alerts": {
            "description": "List of alerts that triggered this filing.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "example": []
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          },
          "selected_subjects": {
            "description": "The Subjects that were selected for this Filing",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilingDataSelectedSubjects"
            }
          }
        }
      },
      "FilingDataFincen": {
        "description": "Describes the details of the filing for FinCEN.",
        "type": "object",
        "required": [
          "filing_type",
          "internal_control_number"
        ],
        "example": {
          "filing_name": "Case 12345",
          "internal_control_number": "HBAML201912",
          "filing_type": "INITIAL",
          "activities": [
            "CREDIT_OR_DEBIT_CARD",
            "HIGH_RISK_JURISDICTION"
          ],
          "narrative": "Questionable behavior"
        },
        "properties": {
          "filing_name": {
            "description": "A name for your filing.",
            "type": "string",
            "nullable": true,
            "example": "Case 12345"
          },
          "report_type": {
            "description": "The type of FINCEN report you're filing. Options are 'CTR' or 'SAR'. Defaults to 'SAR' if not specified.",
            "default": "SAR",
            "$ref": "#/components/schemas/FilingReportTypeNullable"
          },
          "internal_control_number": {
            "description": "This is unique internal value for each report, which law enforcement or regulatory agencies can reference without disclosing the existence or content of a particular SAR.",
            "type": "string",
            "nullable": false,
            "example": "HBAML201912"
          },
          "prior_report_number": {
            "description": "Required if the filing type is CONTINUING or CORRECT_OR_AMEND. Invalid and disallowed for initial filings.",
            "type": "string",
            "nullable": true,
            "example": null
          },
          "filing_type": {
            "default": "INITIAL",
            "$ref": "#/components/schemas/FilingType"
          },
          "joint_report": {
            "description": "Defaults to false if not present.",
            "type": "boolean",
            "default": false
          },
          "amount_involved": {
            "description": "Amount involved in the suspicious activity. Defaults to 0.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyMinorUnits"
              }
            ]
          },
          "amount_blank_reason": {
            "description": "Required if the amount involved is missing or zero. Invalid if amount involved is set appropriately.",
            "$ref": "#/components/schemas/FilingAmountAlgorithmNullable",
            "example": null
          },
          "activity_started_on": {
            "description": "Date that the suspicious activity started at.",
            "example": "2020-11-01",
            "nullable": true,
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "activity_ended_on": {
            "description": "Date that the suspicious activity ended at.",
            "example": "2020-11-04",
            "nullable": true,
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "activity_started_at": {
            "readOnly": true,
            "description": "Deprecated, please use activity_started_on.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "activity_ended_at": {
            "readOnly": true,
            "description": "Deprecated, please use activity_ended_on.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "timeline_started_at": {
            "description": "The date in which your investigation began.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-05T21:25:38Z"
          },
          "cumulative_amount": {
            "description": "Required if filing type is CORRECT_OR_AMEND. Invalid and disallowed for other filing types.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyMinorUnits"
              }
            ]
          },
          "activities": {
            "description": "List of Activities to add. See the \u003Ca href=\"https://docs.hummingbird.co/docs/activities\"\u003Eappendix\u003C/a\u003E for a list of activities.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "CREDIT_OR_DEBIT_CARD",
              "HIGH_RISK_JURISDICTION"
            ]
          },
          "activities_other": {
            "description": "Other, text-entry activities.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivitiesOther"
            },
            "example": [
              {
                "category": "OTHER_ACTIVITIES",
                "value": "Magical creatures"
              },
              {
                "category": "OTHER_ACTIVITIES",
                "value": "Darkweb ring"
              }
            ]
          },
          "product_types": {
            "description": "List of Product Types to add. See the \u003Ca href=\"https://docs.hummingbird.co/docs/product-types\"\u003Eappendix\u003C/a\u003E for a list of product types.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "BONDS_NOTES",
              "CREDIT_CARD"
            ]
          },
          "product_types_other": {
            "description": "Other product types.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Cryptocurrency"
            ]
          },
          "instruments": {
            "description": "List of Instruments to add, See the \u003Ca href=\"https://docs.hummingbird.co/docs/instruments\"\u003Eappendix\u003C/a\u003E for a list of instrument types.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "US_CURRENCY",
              "FOREIGN_CURRENCY"
            ]
          },
          "instruments_other": {
            "description": "Other instruments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Bitcoin"
            ]
          },
          "law_enforcement_contact": {
            "description": "Law Enforcement Contact to add.",
            "type": "object",
            "nullable": true,
            "properties": {
              "agency": {
                "description": "Name of agency you’re working with.",
                "type": "string",
                "example": "FBI'"
              },
              "name": {
                "description": "Name of contact.",
                "type": "string",
                "example": "Aragorn Elessar"
              },
              "email": {
                "description": "Email address of contact.",
                "type": "string",
                "example": "aragorn@fbi.gov"
              },
              "telephone": {
                "type": "string",
                "example": "4151231234"
              },
              "extension": {
                "type": "string",
                "example": "123"
              },
              "date": {
                "description": "Most recent date of contact.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "string"
                  }
                ]
              }
            }
          },
          "alerts": {
            "description": "List of alerts that triggered this filing.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "example": []
          },
          "narrative": {
            "description": "Detailed description of investigation and the findings.",
            "type": "string",
            "nullable": true,
            "example": "When Mr. Bilbo Baggins of Bag End announced that he would shortly..."
          },
          "note_to_fincen": {
            "description": "Short note to FinCEN. Max 50 characters in length.",
            "type": "string",
            "nullable": true,
            "example": "FIN-2019-MIDDLEEARTH"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          },
          "selected_subjects": {
            "description": "The Subjects that were selected for this Filing",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilingDataSelectedSubjects"
            }
          },
          "filed_at": {
            "description": "The date the report was filed.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "example": "2020-11-04T21:25:38Z",
            "nullable": true
          }
        }
      },
      "FilingDataGoAML": {
        "description": "Describes the details of the filing for GNECB (Ireland).",
        "type": "object",
        "example": {
          "report_code": "STR",
          "internal_reference_number": "HBAML201912",
          "currency_code_local": "USD",
          "report_indicators": [
            "Bribery"
          ],
          "reason": "Questionable behavior"
        },
        "properties": {
          "internal_reference_number": {
            "description": "An internal value to help you reference the filing.",
            "type": "string",
            "example": "CASE-12345"
          },
          "report_code": {
            "description": "Code that describes the report type. STR is the only valid value at the moment.",
            "$ref": "#/components/schemas/GNECBReportCodeNullable",
            "example": "STR",
            "default": "STR"
          },
          "reason": {
            "description": "Your reason for filing.",
            "type": "string",
            "example": "Suspicous activity found with account."
          },
          "action": {
            "description": "Action related to the report.",
            "type": "string"
          },
          "currency_code_local": {
            "description": "The local currency code for the reporting entity. Defaults to USD.",
            "type": "string",
            "example": "USD",
            "default": "USD"
          },
          "report_indicators": {
            "description": "List of values that indicate the types of crime(s) in the report.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BermudaReportIndicator"
                },
                {
                  "$ref": "#/components/schemas/GermanyReportIndicator"
                },
                {
                  "$ref": "#/components/schemas/GNECBReportIndicator"
                },
                {
                  "$ref": "#/components/schemas/NetherlandsReportIndicator"
                },
                {
                  "$ref": "#/components/schemas/SwedenReportIndicator"
                }
              ]
            }
          },
          "alerts": {
            "description": "List of alerts that triggered this filing.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "example": []
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          },
          "selected_subjects": {
            "description": "The Subjects that were selected for this Filing",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilingDataSelectedSubjects"
            }
          }
        }
      },
      "FilingDataResponseFINTRAC": {
        "description": "Describes the filing data for a FINTRAC filing.",
        "type": "object",
        "example": {
          "amount_involved": {
            "amount": 21000,
            "currency_code": "CAD"
          },
          "amount_blank_reason": "SUM_TRANSACTIONS",
          "activity_started_on": "2022-07-02T12:00:00Z",
          "activity_ended_on": "2022-07-02T12:00:00Z",
          "reason": "Questionable behavior"
        },
        "properties": {
          "amount_involved": {
            "description": "Amount involved in the suspicious activity. Defaults to 0.",
            "$ref": "#/components/schemas/CurrencyMinorUnits",
            "nullable": true
          },
          "amount_blank_reason": {
            "description": "Required if the amount involved is missing or zero. Invalid if amount involved is set appropriately.",
            "type": "string",
            "nullable": true,
            "enum": [
              "AMOUNT_UNKNOWN",
              "NO_AMOUNT_INVOLVED"
            ],
            "example": null
          },
          "reason": {
            "description": "Your reason for filing.",
            "type": "string",
            "example": "Suspicous activity found with account."
          },
          "activity_started_on": {
            "description": "Date that the suspicious activity started at.",
            "nullable": true,
            "example": "2020-11-01",
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "activity_ended_on": {
            "description": "Date that the suspicious activity ended at.",
            "nullable": true,
            "example": "2020-11-04",
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          },
          "response": {
            "description": "A data hash that holds the filing status and all report numbers related to this filing.",
            "type": "object",
            "properties": {
              "filing_status": {
                "description": "Most recent filing status of the FINTRAC filing.",
                "readOnly": true,
                "type": "string",
                "example": "pending",
                "nullable": true
              },
              "report_numbers": {
                "description": "An array of all Report Numbers relating to the FINTRAC filing.",
                "readOnly": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "1234567",
                  "1234568"
                ]
              }
            }
          }
        }
      },
      "FilingDataResponseFincen": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/FilingDataFincen"
          },
          {
            "type": "object",
            "properties": {
              "response": {
                "description": "A data hash that holds the filing status and all report numbers related to this filing.",
                "type": "object",
                "properties": {
                  "filing_status": {
                    "description": "Most recent filing status of the FinCEN filing.",
                    "readOnly": true,
                    "type": "string",
                    "example": "accepted",
                    "nullable": true
                  },
                  "sdtm_file_id": {
                    "description": "The filename of the XML document transmitted to FinCEN. The filename allows you to identify the filing when viewing your filing in the BSA web portal.",
                    "readOnly": true,
                    "example": "PH4DNC08912R56CCA0",
                    "nullable": true
                  },
                  "bsa_id": {
                    "description": "The BSA E-Filing System tracking Identification Number.",
                    "readOnly": true,
                    "type": "string",
                    "example": "31000055053785",
                    "nullable": true
                  }
                }
              }
            }
          }
        ]
      },
      "FilingDataResponseGoAML": {
        "description": "Describes the details of the filing response for GNECB (Ireland).",
        "type": "object",
        "example": {
          "internal_reference_number": "HBAML201912",
          "indicators": [
            "Bribery"
          ],
          "reason": "Questionable behavior"
        },
        "properties": {
          "filing_type": {
            "description": "The filing type for this filing",
            "readOnly": true,
            "$ref": "#/components/schemas/FilingTypeNullable",
            "default": "INITIAL"
          },
          "timeline_started_at": {
            "description": "The date in which your investigation began.",
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "format": "date-time",
            "example": "2020-11-05T21:25:38Z"
          },
          "alerts": {
            "description": "List of alerts that triggered this filing.",
            "type": "array",
            "nullable": true,
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "example": []
          },
          "amount_blank_reason": {
            "description": "Required if the amount involved is missing or zero. Invalid if amount involved is set appropriately.",
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "enum": [
              "AMOUNT_UNKNOWN",
              "NO_AMOUNT_INVOLVED",
              "SUM_TRANSACTIONS"
            ],
            "example": null
          },
          "activity_started_on": {
            "description": "Date that the suspicious activity started at.",
            "readOnly": true,
            "nullable": true,
            "example": "2020-11-01",
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "activity_ended_on": {
            "description": "Date that the suspicious activity ended at.",
            "readOnly": true,
            "nullable": true,
            "example": "2020-11-04",
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "amount_involved": {
            "description": "Amount involved in the suspicious activity. Defaults to 0.",
            "$ref": "#/components/schemas/CurrencyMinorUnits",
            "nullable": true,
            "readOnly": true
          },
          "response": {
            "description": "A data hash that holds the filing status and all report numbers related to this filing.",
            "type": "object",
            "nullable": true,
            "readOnly": true,
            "properties": {
              "filing_status": {
                "description": "Most recent filing status of the FinCEN filing.",
                "readOnly": true,
                "type": "string",
                "nullable": true,
                "example": "accepted"
              },
              "report_number": {
                "description": "The report number recorded for this submission.",
                "readOnly": true,
                "nullable": true,
                "example": "PH4DNC08912R56CCA0"
              }
            }
          },
          "internal_control_number": {
            "description": "An internal value to help you reference the filing.",
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "CASE-12345"
          },
          "reason": {
            "description": "Your reason for filing.",
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Suspicous activity found with account."
          },
          "action_taken": {
            "description": "Action related to the report.",
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "indicators": {
            "description": "List of values that indicate the types of crime(s) in the report. See the \u003Ca href=\"https://docs.hummingbird.co/docs/report-indicators\"\u003Eappendix\u003C/a\u003E for a list of report indicators.",
            "type": "array",
            "nullable": true,
            "readOnly": true,
            "items": {
              "type": "string"
            },
            "example": [
              "Bribery",
              "Tax Evasion"
            ]
          },
          "other_info": {
            "description": "List of key/value pairs of related data.",
            "type": "array",
            "nullable": true,
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/OtherInfoItem"
            }
          }
        }
      },
      "FilingDataSelectedSubjects": {
        "description": "Provides the subjects referenced in the filing.",
        "type": "object",
        "example": {
          "id": "7ef5b129c549b9740a9d568c3f18372f",
          "token": "5Za33dLVdsNNHfLzuBHAKuCP",
          "type": "individual"
        },
        "properties": {
          "id": {
            "description": "The id assigned to the subject.",
            "type": "string",
            "example": "7ef5b129c549b9740a9d568c3f18372f"
          },
          "token": {
            "description": "The Hummingbird assigned token for the subject.",
            "type": "string",
            "example": "5Za33dLVdsNNHfLzuBHAKuCP"
          },
          "type": {
            "description": "The type of subject (individual,business).",
            "type": "string",
            "example": "individual"
          }
        }
      },
      "FilingRequest": {
        "description": "A Filing is the resource that describes the details of the filing in a particular jurisdiction. The details of the case referenced are brought into the filing automatically as appropriate.",
        "type": "object",
        "required": [
          "jurisdiction",
          "workflow",
          "filing_data"
        ],
        "properties": {
          "jurisdiction": {
            "$ref": "#/components/schemas/FilingJurisdictionEnumRequest"
          },
          "workflow": {
            "description": "The workflow for this filing.",
            "type": "string",
            "example": "aml-investigation"
          },
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this filing.",
            "type": "string",
            "nullable": true,
            "example": "FI-123ABC"
          },
          "filing_institution_id": {
            "description": "Your unique ID for the filing institution. This should reference a pre-created filing institution.",
            "type": "string",
            "nullable": true,
            "example": "INST-PPP"
          },
          "filing_data": {
            "description": "A data hash that encompasses jurisdiction-specific filing data.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/FilingDataFincen"
              },
              {
                "$ref": "#/components/schemas/FilingDataFINTRAC"
              },
              {
                "$ref": "#/components/schemas/FilingDataGoAML"
              }
            ]
          }
        }
      },
      "FilingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "filing": {
            "type": "object",
            "properties": {
              "token": {
                "readOnly": true,
                "type": "string",
                "description": "Unique identifier created by Hummingbird for the filing."
              },
              "id": {
                "type": "string",
                "nullable": true,
                "description": "Your id for the filing.",
                "example": "FI-123ABC"
              },
              "bsa_id": {
                "type": "string",
                "nullable": true,
                "description": "15 digit, unique number created by FinCEN for the case.",
                "example": "123456789012345"
              },
              "status": {
                "type": "string",
                "nullable": true,
                "description": "The status of the filing.",
                "enum": [
                  "pending",
                  "filed",
                  "accepted",
                  "warning",
                  "primary_warning",
                  "fatal",
                  "manually_rejected",
                  "cancelled"
                ]
              },
              "errors": {
                "type": "array",
                "description": "Set of errors or warnings to be corrected.",
                "items": {
                  "type": "string"
                },
                "example": [
                  "The element is not recorded."
                ]
              }
            }
          }
        }
      },
      "HummingbirdAccount": {
        "description": "Information about a user account in Hummingbird.",
        "type": "object",
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the account.",
            "type": "string",
            "example": "oVQMkeZXBUjG9XMgZMTZSNPb"
          },
          "email": {
            "readOnly": true,
            "description": "The email on file for the account.",
            "type": "string",
            "example": "frodo@hobbits.com"
          },
          "name": {
            "readOnly": true,
            "description": "The name on file for the account.",
            "type": "string",
            "example": "Frodo Baggins"
          }
        }
      },
      "IdentityDocument": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Type of document.",
            "$ref": "#/components/schemas/IdentificationTypeNullable"
          },
          "type_other": {
            "description": "Value for Identity Document type of \"Other\". Only specify a value when identity document type is OTHER.",
            "type": "string",
            "nullable": true
          },
          "number": {
            "description": "Number associated with the document.",
            "type": "string",
            "nullable": true,
            "example": 1234567890
          },
          "issuing_state": {
            "description": "State that the document was issued in.",
            "type": "string",
            "nullable": true,
            "example": "ME"
          },
          "issuing_country": {
            "description": "Country that the document was issued in.",
            "type": "string",
            "nullable": true,
            "example": "US"
          },
          "expires_on": {
            "description": "Expiration date of identity document.",
            "nullable": true,
            "example": "2020-10-01",
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ImportResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "import": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "Unique identifier created by Hummingbird for the import.",
                "example": "\u003Cimport-token\u003E"
              },
              "status": {
                "description": "The status of the import.",
                "$ref": "#/components/schemas/CaseResponseStatus"
              },
              "objects": {
                "type": "array",
                "description": "The set of cases successfully created.",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier provided to us in the request for the case."
                    },
                    "token": {
                      "type": "string",
                      "description": "Unique identifier created by Hummingbird for the case."
                    }
                  }
                },
                "example": [
                  {
                    "id": 10,
                    "token": "12345"
                  }
                ]
              },
              "errors": {
                "type": "array",
                "description": "Set of errors or warnings to be corrected.",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "integer",
                      "description": "The index of the case in the original request that had an error."
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": [
                  {
                    "index": 0,
                    "error": "There is no workflow that matches the request."
                  }
                ]
              }
            }
          }
        }
      },
      "Individual": {
        "description": "An Individual represents a Subject to a Case that is a person and not a business entity.",
        "type": "object",
        "example": {
          "id": "PERSON-123ABC",
          "names": [
            {
              "first_name": "Falco",
              "middle_name": "Chubb",
              "last_name": "Baggins"
            }
          ],
          "tins": [
            {
              "number": "444332222",
              "type": "SSN"
            }
          ],
          "birthdates": [
            "2020-11-04"
          ],
          "phone_numbers": [
            {
              "phone_number": "4151231234",
              "phone_type": "HOME"
            }
          ],
          "addresses": [
            {
              "address_line_1": "A hole in the ground",
              "city": "Bag End",
              "state": "ME",
              "country": "US",
              "postal_code": "12345",
              "address_type": "HOME"
            }
          ]
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this individual. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "ID-123ABC"
          },
          "crm_token": {
            "description": "Token of the library person object that is tied to the individual.",
            "type": "string",
            "nullable": true
          },
          "names": {
            "description": "The names associated with the individual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          },
          "aka_names": {
            "description": "The AKA names associated with the individual.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tins": {
            "description": "The TINs associated with the individual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TIN"
            }
          },
          "role_in_activity": {
            "description": "Specify role in activity.",
            "$ref": "#/components/schemas/RoleInActivityNullable"
          },
          "role_in_activity_other": {
            "description": "Value for role_in_activity when role_in_activity is 'OTHER'",
            "type": "string",
            "nullable": true
          },
          "corroborative_statement": {
            "description": "Has this subject provided a corroborative statement to the activity?",
            "type": "boolean",
            "nullable": true
          },
          "gender": {
            "description": "MALE, FEMALE, OTHER or UNKNOWN. Default UNKNOWN.",
            "$ref": "#/components/schemas/GenderNullable",
            "default": "UNKNOWN"
          },
          "birthdates": {
            "description": "Can list multiple if person has used multiple dates.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "phone_numbers": {
            "description": "The phone numbers associated with the individual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            }
          },
          "email_addresses": {
            "description": "The email addresses associated with the individual.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "bilbo@bagend-bagginses.com",
              "bilbobaggins@hotmail.com"
            ]
          },
          "websites": {
            "description": "The websites associated with the individual.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "bagend-bagginses.com",
              "bbaggins.livejournal.com",
              "facebook.com/bbaggins"
            ]
          },
          "addresses": {
            "description": "The addresses associated with the individual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressWithType"
            }
          },
          "identity_documents": {
            "description": "The identity documents associated with the individual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDocument"
            }
          },
          "institution_relationships": {
            "description": "The relationships this individual has with an institution.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstitutionRelationship"
            }
          },
          "occupations": {
            "description": "The occupations associated with the individual.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Occupation"
            }
          },
          "usernames": {
            "description": "The usernames associated with the individual.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "bbaggins",
              "thiefbilbo"
            ]
          },
          "links": {
            "description": "List of links to other pages that might be valuable (deprecated - use quick_links instead).",
            "deprecated": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalPageLink"
            }
          },
          "quick_links": {
            "description": "List of quick links to other pages that might be valuable.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickLink"
            }
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "Institution": {
        "type": "object",
        "required": [
          "institution_type"
        ],
        "example": {
          "id": "FI-123ABC",
          "institution_type": "DEPOSITORY_INSTITUTION",
          "tin": "444332222",
          "tin_type": "EIN",
          "name": "Bank of Mordor",
          "address": {
            "address_line_1": "A hole in the ground",
            "city": "Bag End",
            "state": "ME",
            "country": "US",
            "postal_code": "12345"
          }
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this institution. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "IN-123ABC"
          },
          "institution_type": {
            "description": "Type of institution. Set to OTHER if specifying institution_type_other.",
            "$ref": "#/components/schemas/FinancialInstitutionTypeNullable"
          },
          "institution_type_other": {
            "description": "Other type of institution. Specify either this or institution type.",
            "type": "string",
            "nullable": true,
            "example": "Quest Party"
          },
          "institution_subtype": {
            "description": "Subtype of institution. This should only be set when institution_type is CASINO_OR_CARD_CLUB or SECURITIES_OR_FUTURES. Set to OTHER if specifying institution_subtype_other.",
            "$ref": "#/components/schemas/InstitutionSubtypeNullable"
          },
          "institution_subtype_other": {
            "description": "Value for Other subtype of institution. Specify a value when institution subtype is OTHER.",
            "type": "string",
            "nullable": true,
            "example": "Hobbit Party"
          },
          "name": {
            "description": "Legal name of the institution.",
            "type": "string",
            "nullable": true,
            "example": "Bank of the Shire"
          },
          "alternate_names": {
            "description": "List of DBA and AKA names.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "example": "Brandywine Bank, Shire Bank"
          },
          "tin": {
            "description": "Tax ID for the institution.",
            "type": "string",
            "nullable": true,
            "example": "123121234"
          },
          "tin_type": {
            "description": "Tax ID type. Defaults to EIN.",
            "default": "EIN",
            "$ref": "#/components/schemas/TINTypeNullable"
          },
          "swift_code": {
            "description": "Swift code for the institution.",
            "type": "string",
            "nullable": true,
            "example": "123121234"
          },
          "identification": {
            "description": "The unique identification for this institution.",
            "type": "object",
            "nullable": true,
            "properties": {
              "type": {
                "$ref": "#/components/schemas/InstitutionIdTypeNullable"
              },
              "number": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "primary_federal_regulator": {
            "$ref": "#/components/schemas/FederalRegulatorTypeNullable"
          },
          "contact_office": {
            "type": "string",
            "nullable": true,
            "example": "Compliance"
          },
          "contact_phone": {
            "type": "string",
            "nullable": true,
            "example": "4151231234"
          },
          "internal_control_number": {
            "type": "string",
            "nullable": true,
            "example": "HBAML201912"
          },
          "address": {
            "description": "The address associated with the institution.",
            "$ref": "#/components/schemas/Address"
          },
          "role_in_transaction": {
            "$ref": "#/components/schemas/RoleInTransactionNullable"
          },
          "loss_to_institution": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyMinorUnits"
              }
            ]
          },
          "branches": {
            "description": "List of Branches related to the case.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Branch"
            }
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "InstitutionRelationship": {
        "type": "object",
        "required": [
          "institution_tin"
        ],
        "properties": {
          "id": {
            "description": "An ID which identifies this institution relationship.",
            "type": "string",
            "example": "1234-5678",
            "nullable": true
          },
          "institution_tin": {
            "description": "The tax ID of the institution being referenced.",
            "type": "string",
            "example": "123121234",
            "nullable": true
          },
          "relationships": {
            "description": "The relationship between the subject and the institution.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvestigationInstitutionRelationship"
            },
            "example": [
              "DIRECTOR"
            ]
          },
          "status": {
            "description": "The status of the subject's relationship with the institution.",
            "$ref": "#/components/schemas/RelationshipStatusNullable",
            "example": "TERMINATED"
          },
          "action_date": {
            "description": "The date that action was taken at the institution.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "LibraryAddress": {
        "type": "object",
        "nullable": true,
        "additionalProperties": false,
        "properties": {
          "address_line_1": {
            "type": "string",
            "maxLength": 4096,
            "example": "3000 White Bay Drive",
            "nullable": true
          },
          "address_line_2": {
            "type": "string",
            "maxLength": 4096,
            "example": "Apartment #1",
            "nullable": true
          },
          "locality": {
            "type": "string",
            "maxLength": 256,
            "example": "Highlands Ranch",
            "nullable": true
          },
          "sublocality": {
            "type": "string",
            "maxLength": 256,
            "example": "Hillcrest",
            "nullable": true
          },
          "administrative_district_level_1": {
            "description": "The largest administrative unit for a country. If the \"State\" field doesn't adequately reflect an address location, this field can be used for localities like province, prefectures or counties.",
            "maxLength": 4096,
            "type": "string",
            "example": "Douglas County",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "CO",
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 4096,
            "example": "US",
            "nullable": true
          },
          "postal_code": {
            "type": "string",
            "maxLength": 4096,
            "example": "80126",
            "nullable": true
          },
          "address_type": {
            "description": "The type of address, such as \"Home\" or \"Office\".",
            "$ref": "#/components/schemas/AddressTypeNullable"
          },
          "address_type_other": {
            "description": "Description field for additional details for an address with type \"Other\"",
            "type": "string",
            "nullable": true
          }
        }
      },
      "LibraryBusiness": {
        "type": "object",
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "example": {
          "addresses": null,
          "business_type": {
            "label": "lifesciences - health_care",
            "naics_code": "1234"
          },
          "dba_names": [],
          "email_addresses": null,
          "id": "BUSINESS-1",
          "identity_documents": null,
          "legal_names": [],
          "notes": null,
          "other_info": [
            {
              "label": "Custom Key",
              "value": "Value"
            }
          ],
          "phone_numbers": null,
          "quick_links": null,
          "tins": null,
          "usernames": null,
          "websites": null
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string",
            "nullable": true,
            "example": null
          },
          "addresses": {
            "description": "Addresses associated with this business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryAddress"
            },
            "nullable": true
          },
          "business_type": {
            "description": "Type of the business.",
            "nullable": true,
            "type": "object",
            "$ref": "#/components/schemas/BusinessType"
          },
          "dba_names": {
            "description": "Doing Business As (DBA) names for the business.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "Ryan Does Gerard"
            ],
            "nullable": true
          },
          "email_addresses": {
            "description": "The email addresses associated with this business.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "gulliver@travel-well.com",
              "gdog@hotmail.com"
            ],
            "nullable": true
          },
          "id": {
            "description": "Unique identifier created by the user. The value is stored but a new unique token value will be returned upon success and required for future fetching or updating.",
            "type": "string",
            "example": "BUSINESS-1",
            "maxLength": 4096
          },
          "identity_documents": {
            "description": "The identity documents associated with this business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryIdentityDocument"
            },
            "nullable": true
          },
          "legal_names": {
            "description": "Legal names for the business.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "Bank Abc"
            ],
            "nullable": true
          },
          "notes": {
            "description": "Notes about this business.",
            "maxLength": 4096,
            "type": "string",
            "nullable": true
          },
          "other_info": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/OtherInfo"
              }
            ]
          },
          "phone_numbers": {
            "description": "The phone numbers associated with this business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryPhoneNumber"
            },
            "example": [
              {
                "type": "HOME",
                "number": "5554443333",
                "extension": "123"
              }
            ],
            "nullable": true
          },
          "quick_links": {
            "description": "List of links to other pages that might be valuable.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickLink"
            },
            "nullable": true
          },
          "tins": {
            "description": "The Tax Identification Numbers (TINs) associated with this business.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TIN"
            },
            "nullable": true
          },
          "usernames": {
            "description": "The usernames associated with this business.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "gully",
              "gdawg"
            ],
            "nullable": true
          },
          "websites": {
            "description": "The websites associated with this business.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "gull-travels.com",
              "favegulls.livejournal.com",
              "facebook.com/gullygully"
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LibraryIdentityDocument": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Type of document.",
            "$ref": "#/components/schemas/CRMIdentityDocumentTypeNullable"
          },
          "type_other": {
            "description": "Value for Identity Document type of \"Other\". Only specify a value when identity document type is OTHER.",
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "number": {
            "description": "Number associated with the document.",
            "maxLength": 256,
            "type": "string",
            "nullable": true,
            "example": 1234567890
          },
          "issuing_state_code": {
            "description": "State that the document was issued in.",
            "maxLength": 256,
            "type": "string",
            "nullable": true,
            "example": "ME"
          },
          "issuing_country_code": {
            "description": "Country that the document was issued in.",
            "maxLength": 256,
            "type": "string",
            "nullable": true,
            "example": "US"
          },
          "expires_on": {
            "description": "Expiration date of identity document.",
            "maxLength": 256,
            "nullable": true,
            "example": "2020-10-01",
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateParts"
              }
            ]
          }
        }
      },
      "LibraryOccupation": {
        "type": "object",
        "additionalProperties": false,
        "example": {
          "company": "Jewelry Store",
          "occupation": "Jewelry Thief"
        },
        "properties": {
          "company": {
            "type": "string",
            "maxLength": 4096,
            "nullable": true,
            "example": "Jewelry Store"
          },
          "industry": {
            "type": "string",
            "maxLength": 4096,
            "nullable": true,
            "example": "Jewelry, Luggage, and Leather Goods"
          },
          "occupation": {
            "type": "string",
            "maxLength": 4096,
            "nullable": true,
            "example": "Jewelry Thief"
          },
          "company_website": {
            "type": "string",
            "maxLength": 4096,
            "nullable": true,
            "example": "ringstorulethem.com"
          },
          "naics_code": {
            "type": "string",
            "maxLength": 256,
            "nullable": true,
            "example": "4483"
          }
        }
      },
      "LibraryPerson": {
        "type": "object",
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "example": {
          "addresses": null,
          "alternate_names": [],
          "birthdate": "2001-10-19",
          "email_addresses": null,
          "id": "PERSON-1",
          "identity_documents": null,
          "name": {
            "first_name": "Smith",
            "last_name": "Joan"
          },
          "notes": null,
          "occupations": null,
          "other_info": [
            {
              "label": "Custom Key",
              "value": "Value"
            }
          ],
          "phone_numbers": null,
          "usernames": null
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string",
            "nullable": true,
            "example": null
          },
          "addresses": {
            "description": "Addresses associated with this person.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryAddress"
            },
            "nullable": true
          },
          "alternate_names": {
            "description": "List of alternate names associated with this person.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "Gulliver"
            ],
            "nullable": true
          },
          "birthdate": {
            "description": "Birthdate of this person",
            "example": "2001-10-19",
            "nullable": true,
            "oneOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateParts"
              }
            ]
          },
          "email_addresses": {
            "description": "The email addresses associated with this person.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "gulliver@travel-well.com",
              "gdog@hotmail.com"
            ],
            "nullable": true
          },
          "id": {
            "description": "Unique identifier created by the user. The value is stored but a new unique token value will be returned upon success and required for future fetching or updating.",
            "type": "string",
            "example": "PERSON-1",
            "maxLength": 4096
          },
          "gender": {
            "description": "MALE, FEMALE, OTHER or UNKNOWN. Default UNKNOWN.",
            "$ref": "#/components/schemas/GenderNullable",
            "default": "UNKNOWN"
          },
          "identity_documents": {
            "description": "The identity documents associated with this person.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryIdentityDocument"
            },
            "nullable": true
          },
          "name": {
            "description": "Name associated with this person.",
            "type": "object",
            "$ref": "#/components/schemas/Name",
            "nullable": true
          },
          "notes": {
            "description": "Notes about this person.",
            "maxLength": 4096,
            "type": "string",
            "nullable": true
          },
          "occupations": {
            "description": "The occupations associated with this person.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryOccupation"
            },
            "nullable": true
          },
          "other_info": {
            "description": "List of key/value pairs of related data for this person.",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/OtherInfo"
              }
            ]
          },
          "phone_numbers": {
            "description": "The phone numbers associated with this person.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryPhoneNumber"
            },
            "example": [
              {
                "type": "HOME",
                "number": "5554443333",
                "extension": "123"
              }
            ],
            "nullable": true
          },
          "quick_links": {
            "description": "List of links to other pages that might be valuable.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickLink"
            },
            "nullable": true
          },
          "tins": {
            "description": "The Tax Identification Numbers (TINs) associated with this person.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TIN"
            },
            "nullable": true
          },
          "usernames": {
            "description": "The usernames associated with this person.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "gully",
              "gdawg"
            ],
            "nullable": true
          },
          "websites": {
            "description": "The websites associated with this person.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 4096
            },
            "example": [
              "gull-travels.com",
              "favegulls.livejournal.com",
              "facebook.com/gullygully"
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LibraryPhoneNumber": {
        "type": "object",
        "nullable": true,
        "example": {
          "number": "4151231234",
          "type": "HOME"
        },
        "properties": {
          "number": {
            "description": "Phone number",
            "maxLength": 4096,
            "type": "string",
            "example": "5551231234",
            "nullable": true
          },
          "extension": {
            "description": "Phone extension",
            "maxLength": 256,
            "type": "string",
            "nullable": true,
            "example": "123"
          },
          "type": {
            "description": "Phone type",
            "$ref": "#/components/schemas/CRMPhoneNumberTypeNullable"
          }
        }
      },
      "Name": {
        "description": "The value recorded for name will use the 'name' value first, but if only first/middle/last are provided, the name is constructed from the parts provided.",
        "type": "object",
        "example": {
          "first_name": "Falco",
          "middle_name": "Chubb",
          "last_name": "Baggins"
        },
        "properties": {
          "name": {
            "description": "Name of resource",
            "type": "string",
            "nullable": true,
            "example": "Falco Chubb Baggins III"
          },
          "first_name": {
            "description": "First name of resource",
            "type": "string",
            "nullable": true,
            "example": "Falco"
          },
          "middle_name": {
            "description": "Middle name of resource",
            "type": "string",
            "nullable": true,
            "example": "Chubb"
          },
          "last_name": {
            "description": "Last name of resource",
            "type": "string",
            "nullable": true,
            "example": "Baggins"
          },
          "suffix": {
            "description": "Suffix of resource",
            "type": "string",
            "nullable": true,
            "example": "III"
          }
        }
      },
      "Occupation": {
        "type": "object",
        "example": {
          "company": "Jewelry Store",
          "occupation": "Jewelry Thief"
        },
        "properties": {
          "company": {
            "type": "string",
            "nullable": true,
            "example": "Jewelry Store"
          },
          "industry": {
            "type": "string",
            "nullable": true,
            "example": "Jewelry, Luggage, and Leather Goods"
          },
          "occupation": {
            "type": "string",
            "nullable": true,
            "example": "Jewelry Thief"
          },
          "website": {
            "type": "string",
            "nullable": true,
            "example": "ringstorulethem.com"
          },
          "naics_code": {
            "type": "string",
            "nullable": true,
            "example": "4483"
          }
        }
      },
      "OtherInfo": {
        "description": "List of key/value pairs of related data.",
        "type": "array",
        "example": [
          {
            "label": "Favorite hummingbird",
            "value": "Buff-bellied"
          }
        ],
        "items": {
          "$ref": "#/components/schemas/OtherInfoItem"
        }
      },
      "OtherInfoItem": {
        "type": "object",
        "description": "Key/value pair of related data.",
        "example": {
          "label": "Favorite hummingbird",
          "value": "Buff-bellied"
        },
        "properties": {
          "label": {
            "type": "string",
            "description": "250 character limit",
            "example": "Favorite hummingbird"
          },
          "value": {
            "type": "string",
            "nullable": true,
            "description": "3,000 character limit",
            "example": "Buff-bellied"
          }
        }
      },
      "PaymentCard": {
        "description": "A Payment Card can be added for investigating links between cards.",
        "type": "object",
        "example": {
          "id": "CARD-1234",
          "network": "VISA",
          "last_4": "8867",
          "card_type": "CREDIT"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Optional. Your id for this payment card. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "PC-123ABC"
          },
          "account_holder_id": {
            "description": "The account holder for this card. The ID is the one provided by you. To associate this payment card with an individual (or business), ensure that this ID matches the individual's ID. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "ID-123ABC"
          },
          "institution_id": {
            "description": "The institution backing this card. The ID is the one provided by you.",
            "type": "string",
            "nullable": true,
            "example": "IN-123ABC"
          },
          "network": {
            "description": "The card network assocaited with this payment card.",
            "type": "string",
            "nullable": true,
            "example": "VISA"
          },
          "bin": {
            "type": "string",
            "nullable": true,
            "example": "41111111"
          },
          "last_4": {
            "type": "string",
            "nullable": true,
            "example": "1234"
          },
          "card_type": {
            "$ref": "#/components/schemas/InvestigationCardTypeNullable"
          },
          "expiration": {
            "type": "object",
            "required": [
              "month",
              "year"
            ],
            "nullable": true,
            "properties": {
              "month": {
                "type": "string",
                "example": "05"
              },
              "year": {
                "type": "string",
                "example": "24"
              }
            }
          },
          "issued_at": {
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "closed": {
            "description": "If the card account was closed.",
            "type": "boolean",
            "nullable": true
          },
          "closed_at": {
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "PeopleCreateResponse": {
        "type": "object",
        "properties": {
          "people": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryPerson"
            }
          }
        }
      },
      "PeopleRequest": {
        "type": "object",
        "required": [
          "people"
        ],
        "properties": {
          "people": {
            "description": "A list of people for creation or update within the Hummingbird app. At least one person is required in the submission, with a maximum limit of 100.",
            "type": "array",
            "minimum": 1,
            "maximum": 100,
            "items": {
              "$ref": "#/components/schemas/LibraryPerson"
            }
          }
        }
      },
      "PersonLookupRequest": {
        "type": "object",
        "required": [
          "person"
        ],
        "properties": {
          "person": {
            "description": "The person that is being requested",
            "type": "object",
            "example": {
              "id": "PERSON-1"
            },
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "Unique identifier associated with the person.",
                "type": "string",
                "example": "PERSON-1",
                "maxLength": 4096
              }
            }
          }
        }
      },
      "PhoneNumber": {
        "type": "object",
        "required": [
          "phone_number"
        ],
        "nullable": true,
        "example": {
          "phone_number": "4151231234",
          "phone_type": "HOME"
        },
        "properties": {
          "phone_number": {
            "description": "Phone number",
            "type": "string",
            "example": "5551231234"
          },
          "extension": {
            "description": "Phone extension",
            "type": "string",
            "nullable": true,
            "example": "123"
          },
          "phone_type": {
            "description": "Phone type",
            "$ref": "#/components/schemas/PhoneTypeNullable"
          }
        }
      },
      "Product": {
        "description": "A Product represents information about an object being bought or sold.",
        "type": "object",
        "example": {
          "id": "PRODUCT-233",
          "name": "One Ring"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "Your id for this product. Required for CRM enabled environments.",
            "type": "string",
            "nullable": true,
            "example": "PR-123ABC"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "One Ring"
          },
          "cusip": {
            "type": "string",
            "nullable": true,
            "example": "123456789"
          },
          "sku": {
            "type": "string",
            "nullable": true,
            "example": "SAURON-657890685764-RING"
          },
          "market": {
            "type": "string",
            "nullable": true,
            "example": "NYSE"
          },
          "commodity_type": {
            "type": "string",
            "nullable": true,
            "example": "Magical Artefact"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "Queue": {
        "type": "object",
        "additionalProperties": false,
        "example": {
          "canonical_id": "AML_INVESTIGATOR"
        },
        "properties": {
          "canonical_id": {
            "readOnly": true,
            "type": "string",
            "example": "AML_INVESTIGATOR",
            "description": "Unique identifier of the badge that is being used as a queue."
          }
        }
      },
      "QuickLink": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "href": {
            "description": "A URL to link to.",
            "maxLength": 4096,
            "type": "string",
            "example": "https://www.example.com/"
          },
          "text": {
            "type": "string",
            "maxLength": 256,
            "description": "Text label to show the investigator.",
            "example": "Homepage"
          }
        }
      },
      "Reference": {
        "type": "object",
        "nullable": true,
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "What type of object are you referencing?",
            "$ref": "#/components/schemas/InvestigationDataType",
            "example": "bank_account"
          },
          "id": {
            "description": "ID of the referenced object",
            "type": "string",
            "example": "FI-123ABC"
          },
          "token": {
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string",
            "example": null
          }
        }
      },
      "RelayPageInfo": {
        "type": "object",
        "description": "Information to aid in pagination.",
        "properties": {
          "end_cursor": {
            "type": "string",
            "readOnly": true,
            "description": "When paginating forwards, the cursor to continue.",
            "nullable": true
          },
          "has_next_page": {
            "type": "boolean",
            "readOnly": true,
            "description": "When paginating forwards, are there more items?"
          },
          "has_previous_page": {
            "type": "boolean",
            "readOnly": true,
            "description": "When paginating backwards, are there more items?"
          },
          "start_cursor": {
            "type": "string",
            "readOnly": true,
            "description": "When paginating backwards, the cursor to continue.",
            "nullable": true
          }
        }
      },
      "Review": {
        "description": "A review is the primary holder for workflow data within a case.",
        "type": "object",
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the review.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier that your organization uses for the review.",
            "type": "string",
            "nullable": true,
            "example": "R123ABC"
          },
          "internal_control_number": {
            "description": "Internal/Document control number for this review.",
            "type": "string",
            "nullable": true,
            "example": "ICN-2021-1234"
          },
          "workflow": {
            "description": "String identifier for the specific workflow associated with this review.",
            "readOnly": true,
            "type": "string",
            "example": "triage"
          },
          "stage": {
            "description": "The current \"Stage\" of the review, i.e. the next action to be taken.",
            "readOnly": true,
            "type": "string",
            "example": "Escalation",
            "nullable": true
          },
          "created_at": {
            "description": "When this review was created.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "example": "2020-11-04T21:25:38Z"
          },
          "completed_at": {
            "description": "If complete, timestamp (iso8601) when this review was completed.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2020-11-04T21:25:38Z"
          },
          "review_due_at": {
            "description": "The date that this review is due.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "example": "2020-11-04T21:25:38Z"
          },
          "first_activity_at": {
            "description": "When this review was first acted on by a user.",
            "readOnly": true,
            "type": "string",
            "format": "date-time",
            "example": "2020-11-04T21:25:38Z",
            "nullable": true
          },
          "status": {
            "description": "The current status of this review.",
            "readOnly": true,
            "type": "string",
            "nullable": true,
            "example": "opened"
          },
          "tags": {
            "description": "List of name for the case.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Suspicious Ring",
              "Sauron",
              "Magic"
            ]
          },
          "alerts": {
            "description": "List of triggered alerts associated with this review.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewAlert"
            }
          },
          "assignee": {
            "description": "Detail about the account assigned to the review.",
            "readOnly": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/HummingbirdAccount"
              }
            ]
          },
          "queue": {
            "description": "Detail about the queue assigned to the review.",
            "readOnly": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Queue"
              }
            ]
          },
          "checklists": {
            "description": "List of checklists completed with this review.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewChecklist"
            }
          },
          "decisions": {
            "description": "List of decisions made, associated with this review.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewDecision"
            }
          },
          "indicators": {
            "description": "List of report indicators associated with this review.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewIndicator"
            }
          },
          "surveys": {
            "description": "List of survey responses associated with this review.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponse"
            }
          },
          "text_entries": {
            "description": "List of text entries provided with this review.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewTextEntry"
            }
          },
          "other_info": {
            "description": "List of generic key/value pairs.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtherInfoItem"
            }
          }
        }
      },
      "ReviewAlert": {
        "description": "An alert that triggered associated with this review.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier that your organization uses for the alert.",
            "type": "string",
            "nullable": true,
            "example": "ALERT-123ABC"
          },
          "token": {
            "description": "Unique identifier created by Hummingbird for the alert.",
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "rule": {
            "description": "The rule that triggered.",
            "type": "string",
            "example": "High Risk Jurisdiction"
          },
          "triggered_at": {
            "description": "The timestamp (iso8601) when the alert triggered.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "amount": {
            "description": "The total amount associated with the alert.",
            "$ref": "#/components/schemas/CurrencyMinorUnits"
          },
          "other_info": {
            "description": "List of generic key/value pairs to add to the alert.",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OtherInfoItem"
            }
          }
        }
      },
      "ReviewChecklist": {
        "description": "A checklist completed as part of this review.",
        "type": "object",
        "properties": {
          "id": {
            "description": "A unique identifier for this checklist.",
            "type": "string",
            "example": "research"
          },
          "name": {
            "description": "The name of the checklist.",
            "type": "string",
            "example": "Research"
          },
          "completed": {
            "description": "The items of the checklist that were completed.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Google Search",
              "Admin"
            ]
          }
        }
      },
      "ReviewDecision": {
        "description": "A decision made as part of a review.",
        "type": "object",
        "properties": {
          "action_name": {
            "description": "The name of the action associated with this decision.",
            "type": "string",
            "example": "Escalation"
          },
          "action_id": {
            "description": "The identifier for the action assocated with this decision.",
            "type": "string",
            "example": "escalation"
          },
          "choice_name": {
            "description": "The identifier for the choice taken for this decision.",
            "type": "string",
            "example": "Escalate"
          },
          "choice_id": {
            "description": "The identifier for the choice taken for this decision.",
            "type": "string",
            "example": "ESCALATE"
          },
          "decision_made_at": {
            "description": "The timestamp (iso8601) when this decision was made.",
            "type": "string",
            "format": "date-time",
            "example": "2020-11-04T21:25:38Z"
          },
          "arbiter": {
            "description": "Detail about the account used to make the decision.",
            "readOnly": true,
            "$ref": "#/components/schemas/HummingbirdAccount"
          }
        }
      },
      "ReviewIndicator": {
        "description": "A report indicator associated with a review. For example, products, activites, or instruments that may be included in reports.",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for the indicator.",
            "type": "string",
            "nullable": true,
            "example": "ACH_FRAUD"
          },
          "name": {
            "description": "The name of the indicator.",
            "type": "string",
            "example": "ACH fraud"
          },
          "category": {
            "description": "The category for the indicator.",
            "$ref": "#/components/schemas/ActivityTagCategory"
          }
        }
      },
      "ReviewTextEntry": {
        "description": "An open text entry associated with this review.",
        "type": "object",
        "properties": {
          "id": {
            "description": "An identifier for this text entry.",
            "type": "string",
            "example": "narrative"
          },
          "name": {
            "description": "The name of the text entry.",
            "type": "string",
            "example": "Narrative"
          },
          "text": {
            "description": "The text entered.",
            "type": "string",
            "example": "A thief stole a magical ring."
          }
        }
      },
      "Signatory": {
        "type": "object",
        "nullable": true,
        "required": [
          "role",
          "entity_id"
        ],
        "properties": {
          "role": {
            "description": "What is the role of the entity as signatory?",
            "$ref": "#/components/schemas/CRMBankAccountSignatoryRole",
            "example": "PRIMARY"
          },
          "entity_id": {
            "description": "Unique identifier that your organization uses for the entity.",
            "type": "string",
            "example": "PERSON-123",
            "nullable": true
          },
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          }
        }
      },
      "Survey": {
        "description": "When creating a case, you can include survey responses to pre-fill in the review workflow.",
        "type": "object",
        "required": [
          "id",
          "responses"
        ],
        "properties": {
          "id": {
            "description": "Identifies the survey within your review workflow to pre-fill. Get in touch with Hummingbird Support to obtain a list of survey IDs which correspond to steps in your workflow.",
            "type": "string",
            "example": "case-details/product-survey"
          },
          "responses": {
            "description": "The responses to individual questions in the survey.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "question_tag",
                "value"
              ],
              "properties": {
                "question_tag": {
                  "description": "A machine friendly string for identifying the question. Configured on survey setup.",
                  "type": "string",
                  "example": "favorite_fruit"
                },
                "value": {
                  "description": "The value of the response. Will be either a string, date, datetime, boolean, or list of those, depending on the question type.",
                  "example": "Oranges",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "SurveyResponse": {
        "description": "A survey response provides information about the responses to a survey provided as part of a case review.",
        "type": "object",
        "properties": {
          "id": {
            "readOnly": true,
            "description": "Identifies the survey within your review workflow.",
            "type": "string",
            "example": "case-details/product-survey"
          },
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the response.",
            "type": "string"
          },
          "created_at": {
            "readOnly": true,
            "description": "Timestamp (iso8601) when the survey response was created.",
            "type": "string",
            "format": "date-time",
            "example": "2020-11-04T21:25:38Z"
          },
          "entries": {
            "description": "The actual response entries with question details and response.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "token": {
                  "readOnly": true,
                  "description": "Unique identifier created by Hummingbird for this response entry.",
                  "type": "string"
                },
                "question_tag": {
                  "description": "A machine friendly string for identifying the question. Configured on survey setup.",
                  "type": "string",
                  "nullable": true,
                  "example": "bilbo-third-riddle"
                },
                "question_type": {
                  "description": "The type of question. Indicates what to expect in the value.",
                  "type": "string",
                  "enum": [
                    "text",
                    "number",
                    "boolean",
                    "select",
                    "checkbox",
                    "date",
                    "datetime"
                  ],
                  "example": "string"
                },
                "question_text": {
                  "description": "The text of the question.",
                  "type": "string",
                  "example": "A box without hinges, key, or lid, Yet golden treasure inside is hid."
                },
                "question_multivalued": {
                  "description": "Is the question multivalued? If so, value will be an array.",
                  "type": "boolean",
                  "example": false
                },
                "value": {
                  "description": "The value of the response. Will be either a string, date, datetime, boolean, or list of those, depending on the question type.",
                  "example": "An egg."
                }
              }
            }
          }
        }
      },
      "TIN": {
        "type": "object",
        "properties": {
          "number": {
            "description": "TIN of a person or business",
            "type": "string",
            "nullable": true
          },
          "type": {
            "description": "Type of TIN",
            "example": "SSN",
            "$ref": "#/components/schemas/TINTypeNullable"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "description": "A transaction represents a financial transaction. At a minimum, a transaction should have an amount, an amount_local\nrepresenting the amount in the local jurisdiction where the transaction was processed, and a timestamp. Either\ninitiated_at or completed_at must be provided to set a timestamp. Both can be set to indicate a lag in\nprocessing (e.g. for an authorization/capture on a credit card).\n\nAdditional information can be provided as needed for investigation and reporting purposes.",
        "required": [
          "amount",
          "amount_local"
        ],
        "example": {
          "id": "TR-123",
          "instrument_type": "CREDIT_CARD",
          "amount": {
            "amount": 12345,
            "currency_code": "USD"
          },
          "amount_local": {
            "amount": 12345,
            "currency_code": "USD"
          },
          "description": "Local Purchase",
          "completed_at": "2020-11-04T21:25:38Z"
        },
        "properties": {
          "token": {
            "readOnly": true,
            "description": "Unique identifier created by Hummingbird for the resource. Required when fetching, but not when creating.",
            "type": "string"
          },
          "id": {
            "description": "A unique reference id for this transaction.",
            "type": "string",
            "nullable": true,
            "example": "TXN-123ABC"
          },
          "instrument_type": {
            "description": "What instrument was used to perform this transaction",
            "$ref": "#/components/schemas/TransactionInstrumentTypeNullable",
            "example": "ELECTRONIC_TRANSFER"
          },
          "instrument_type_detail": {
            "description": "More details on the instrument type used to perform this transaction",
            "type": "string",
            "nullable": true,
            "example": "Gift Card"
          },
          "tags": {
            "description": "List of tags to apply to this transaction. Used within Hummingbird for aggregating and filtering transactions as part of an investigation.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Purchase",
              "Debit"
            ]
          },
          "description": {
            "description": "A simple description of the transaction.",
            "type": "string",
            "nullable": true,
            "example": "$300 ACH transfer from ***1123 tto ***1212"
          },
          "amount": {
            "description": "Transaction amount. Actual amount of transaction and currency in which transaction took place.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyMinorUnits"
              },
              {
                "$ref": "#/components/schemas/CurrencyMajorUnits"
              }
            ]
          },
          "amount_local": {
            "description": "Amount of transaction in currency local to organization and jurisdiction. All transactions in a case must have the same currency for amount_local. For example, for a U.S. based institution, amount_local is the transaction amount in USD.",
            "$ref": "#/components/schemas/CurrencyMinorUnits"
          },
          "response_code": {
            "description": "A string indicating the response from the processor.",
            "type": "string",
            "nullable": true,
            "example": "0400"
          },
          "initiated_at": {
            "description": "When was this transaction initiated? Note that either initiated_at or completed_at must be set.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:22:38Z"
          },
          "completed_at": {
            "description": "When did this transaction complete? A.K.A. Post time. Note that either initiated_at or completed_at must be set.",
            "nullable": true,
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "status": {
            "description": "What is the end status of this transaction?",
            "type": "string",
            "nullable": true,
            "example": "Completed"
          },
          "iso_8583_message_type": {
            "description": "the ISO 8583 message type for this transaction.",
            "type": "string",
            "nullable": true,
            "example": "0100"
          },
          "iso_18245_merchant_category_code": {
            "description": "The ISO 18245 merchant category code associated with this transaction.",
            "type": "string",
            "nullable": true,
            "example": "3452"
          },
          "direction": {
            "description": "How should we interpret this transaction? Only necessary if endpoint data is not available. When endpoint data is provided, direction is determined by which endpoint the case subjects are associated with.",
            "type": "string",
            "nullable": true,
            "enum": [
              "CREDIT",
              "DEBIT"
            ]
          },
          "location": {
            "description": "Is there an address where this transaction occurred? Transaction address should be the physical location of the transaction itself, if applicable.",
            "$ref": "#/components/schemas/Address"
          },
          "source": {
            "description": "Describe the source of funds. For goAML filings, this is required.",
            "$ref": "#/components/schemas/TransactionEndpoint"
          },
          "destination": {
            "description": "Describe the destiation where funds were sent. For goAML filings, this is required.",
            "$ref": "#/components/schemas/TransactionEndpoint"
          },
          "events": {
            "description": "Break down the lifecycle of the transaction.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionEvent"
            }
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "TransactionEndpoint": {
        "type": "object",
        "nullable": true,
        "description": "Transactions are modeled as a flow of funds from a source endpoint to a destination\nendpoint. Given that for many transactions, the facilitating instititution only has\nvisibility into one side of the transaction, endpoints can be either \"generic\", or tied to\nan entity/account in the case. Generic endpoints are defined by a string description, an\noptional location and optional phone number.\n\nFor example:\n\n* For a check deposit, the institution knows about the destination of the transaction,\n  but knows very little about the source - they may only have an account number and a name.\n* For a credit card purchase, the issuer knows a ton about the card holder, but nearly\n  nothing about the merchant.\n* For a cash deposit, the institution knows a lot about the destination account and the\n  account holder, but almost nothing about the source, unless it's also the account holder.\n  The institution may need to take steps to determine where the payor obtained the cash\n  (e.g. conduct a source of funds information request).\n* For wire transfers, the sending or receiving bank may have limited information about the\n  counterparty endpoint (the payee or payor respectively). As an example, in commercial\n  banking, understanding where and to whom the customer is wiring money is an important\n  investigation practice.\n\nEndpoints also have a required amount to handle the case where different currencies or\namounts are present on the two sides of the transaction.",
        "properties": {
          "description": {
            "description": "String description of the endpoint. Used for endpoints where minimal information is known. Either provide a description or an entity/account.",
            "type": "string",
            "nullable": true,
            "example": "CREDIT CARD STATEMENT DESCRIPTOR"
          },
          "location": {
            "description": "Where is this endpoint? Used for endpoints where minimal information is known.",
            "$ref": "#/components/schemas/Address"
          },
          "phone_number": {
            "description": "A phone number associated with this endpoint? Used for endpoints where minimal information is known.",
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "amount": {
            "description": "What amount was sent/received at this endpoint?",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyMinorUnits"
              },
              {
                "$ref": "#/components/schemas/CurrencyMajorUnits"
              }
            ]
          },
          "entity_ref": {
            "description": "A reference to an entity (person/business) associated with the case.",
            "$ref": "#/components/schemas/Reference"
          },
          "account_ref": {
            "description": "A reference to an account (bank account/payment card/crypto address) associated with the case.",
            "$ref": "#/components/schemas/Reference"
          }
        }
      },
      "TransactionEvent": {
        "type": "object",
        "required": [
          "description",
          "occurred_at"
        ],
        "properties": {
          "id": {
            "description": "A unique reference id for this transaction event.",
            "type": "string",
            "nullable": true,
            "example": "TXN-EVT-123ABC"
          },
          "description": {
            "description": "Describe the event that occurred.",
            "type": "string",
            "example": "Card Authorized for $123.12"
          },
          "occurred_at": {
            "description": "When did this event occur?",
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ],
            "example": "2020-11-04T21:25:38Z"
          },
          "other_info": {
            "$ref": "#/components/schemas/OtherInfo"
          }
        }
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Describes whether the case passed all validations."
          },
          "errors": {
            "type": "object",
            "description": "Set of errors or warnings to be corrected.",
            "example": {
              "information": [
                "Add at least one financial institution"
              ],
              "businesses[0][tins][0][tin]": [
                "Tax ID number cannot be an incremental sequence of numbers."
              ]
            }
          }
        }
      },
      "InvestigationDataType": {
        "type": "string",
        "enum": [
          "attachment",
          "bank_account",
          "business",
          "crypto_address",
          "device",
          "entity",
          "individual",
          "institution",
          "payment_card",
          "product",
          "transaction"
        ]
      },
      "InvestigationAccountTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "DEPOSITORY",
          "LOAN",
          "MORTGAGE",
          "BROKERAGE",
          "OTHER",
          "UNKNOWN",
          null]
      },
      "InvestigationAccountSubtypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CHECKING",
          "SAVINGS",
          "MARKET",
          "AUTO_LOAN",
          "HOME_LOAN",
          "HOME_EQUITY_LOAN",
          "INSTALLMENT_LOAN",
          "MORTGAGE_LOAN",
          "HOME_MORTGAGE",
          "BROKERAGE",
          "CASH_MANAGEMENT",
          "IRA",
          "CD",
          "CERTIFICATE_OF_DEPOSIT",
          "MUTUAL_FUND",
          "OTHER",
          "UNKNOWN",
          null]
      },
      "CRMBankAccountSignatoryRole": {
        "type": "string",
        "enum": [
          "JOINT",
          "NON_ACCOUNT_HOLDER",
          "PRIMARY",
          "UNKNOWN"
        ]
      },
      "CurrencyCode": {
        "type": "string",
        "enum": [
          "ADA",
          "AED",
          "AFN",
          "ALL",
          "AMD",
          "ANG",
          "AOA",
          "ARS",
          "AUD",
          "AWG",
          "AZN",
          "BAM",
          "BBD",
          "BCH",
          "BDT",
          "BGN",
          "BHD",
          "BIF",
          "BMD",
          "BND",
          "BOB",
          "BRL",
          "BSD",
          "BTC",
          "BTN",
          "BWP",
          "BYN",
          "BYR",
          "BZD",
          "CAD",
          "CDF",
          "CHF",
          "CLF",
          "CLP",
          "CNH",
          "CNY",
          "COP",
          "CRC",
          "CUC",
          "CUP",
          "CVE",
          "CZK",
          "DJF",
          "DKK",
          "DOP",
          "DZD",
          "EEK",
          "EGP",
          "EOS",
          "ERN",
          "ETB",
          "ETH",
          "EUR",
          "FJD",
          "FKP",
          "GBP",
          "GBX",
          "GEL",
          "GGP",
          "GHS",
          "GIP",
          "GMD",
          "GNF",
          "GTQ",
          "GYD",
          "HKD",
          "HNL",
          "HRK",
          "HTG",
          "HUF",
          "IDR",
          "ILS",
          "IMP",
          "INR",
          "IQD",
          "IRR",
          "ISK",
          "JEP",
          "JMD",
          "JOD",
          "JPY",
          "KES",
          "KGS",
          "KHR",
          "KMF",
          "KPW",
          "KRW",
          "KWD",
          "KYD",
          "KZT",
          "LAK",
          "LBP",
          "LKR",
          "LRD",
          "LSL",
          "LTC",
          "LTL",
          "LVL",
          "LYD",
          "MAD",
          "MDL",
          "MGA",
          "MKD",
          "MMK",
          "MNT",
          "MOP",
          "MRO",
          "MRU",
          "MTL",
          "MUR",
          "MVR",
          "MWK",
          "MXN",
          "MYR",
          "MZN",
          "NAD",
          "NGN",
          "NIO",
          "NOK",
          "NPR",
          "NZD",
          "OMR",
          "PAB",
          "PEN",
          "PGK",
          "PHP",
          "PKR",
          "PLN",
          "PYG",
          "QAR",
          "RON",
          "RSD",
          "RUB",
          "RWF",
          "SAR",
          "SBD",
          "SCR",
          "SDG",
          "SEK",
          "SGD",
          "SHP",
          "SKK",
          "SLL",
          "SOS",
          "SRD",
          "SSP",
          "STD",
          "SVC",
          "SYP",
          "SZL",
          "THB",
          "TJS",
          "TMM",
          "TMT",
          "TND",
          "TOP",
          "TRY",
          "TTD",
          "TWD",
          "TZS",
          "UAH",
          "UGX",
          "USD",
          "UYU",
          "UZS",
          "VEF",
          "VES",
          "VND",
          "VUV",
          "WST",
          "XAF",
          "XAG",
          "XAU",
          "XBA",
          "XBB",
          "XBC",
          "XBD",
          "XCD",
          "XDR",
          "XFU",
          "XLM",
          "XMR",
          "XOF",
          "XPD",
          "XPF",
          "XPT",
          "XRP",
          "XTS",
          "YER",
          "ZAR",
          "ZMK",
          "ZMW",
          "ZWD",
          "ZWL",
          "ZWN",
          "ZWR"
        ]
      },
      "TINTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "SSN",
          "EIN",
          "FOREIGN",
          null]
      },
      "RoleInActivityNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "PURCHASER_OR_SENDER",
          "PAYEE_OR_RECEIVER",
          "BOTH",
          "VICTIM",
          "SUSPECT",
          "OTHER",
          null]
      },
      "PhoneTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "HOME",
          "WORK",
          "MOBILE",
          "FAX",
          null]
      },
      "AddressTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "BIRTHPLACE",
          "HOME",
          "WORK",
          "OFFICE",
          "BRANCH",
          "SHIPPING_ADDRESS",
          "BILLING_ADDRESS",
          "MAILING_ADDRESS",
          "ACCOMMODATION",
          "FOREIGN",
          "REGISTERED",
          "TRADING",
          "UK",
          "UNKNOWN",
          "OTHER",
          null]
      },
      "IdentificationTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "DRIVERS_LICENSE",
          "PASSPORT",
          "ALIEN_REGISTRATION",
          "CAR_REGISTRATION",
          "NHS_NUMBER",
          "NI_NUMBER",
          "PASS_ID_NUMBER",
          "OTHER",
          "UNKNOWN",
          null]
      },
      "InvestigationInstitutionRelationship": {
        "type": "string",
        "enum": [
          "ACCOUNTANT",
          "AGENT",
          "APPRAISER",
          "ATTORNEY",
          "BORROWER",
          "CUSTOMER",
          "DIRECTOR",
          "EMPLOYEE",
          "NONE",
          "OFFICER",
          "OWNER",
          "OTHER"
        ]
      },
      "RelationshipStatusNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "RELATIONSHIP_CONTINUES",
          "SUSPENDED",
          "RESIGNED",
          "TERMINATED",
          null]
      },
      "InvestigationBlockchainTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "BITCOIN",
          "BITCOIN_CASH",
          "CARDANO",
          "EOS",
          "ETHEREUM",
          "LITECOIN",
          "MONERO",
          "RIPPLE",
          "OTHER",
          "UNKNOWN",
          null]
      },
      "InvestigationOperatingSystemNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "WINDOWS",
          "ANDROID",
          "IOS",
          "MAC_OS",
          "LINUX",
          "OTHER",
          null]
      },
      "InvestigationBrowserTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "FIREFOX",
          "INTERNET_EXPLORER",
          "SAFARI",
          "CHROME",
          "TOR",
          "OTHER",
          null]
      },
      "GenderNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "MALE",
          "FEMALE",
          "OTHER",
          "UNKNOWN",
          null]
      },
      "FinancialInstitutionTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CASINO_OR_CARD_CLUB",
          "DEPOSITORY_INSTITUTION",
          "HOUSING_GSE",
          "INSURANCE_COMPANY",
          "LOAN_OR_FINANCE_COMPANY",
          "MSB",
          "OTHER",
          "SECURITIES_OR_FUTURES",
          null]
      },
      "InstitutionSubtypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "STATE_LICENSED_CASINO",
          "TRIBAL_AUTHORIZED_CASINO",
          "CARD_CLUB",
          "CLEARING_BROKER_SECURITIES",
          "EXECUTION_ONLY_BROKER_SECURITIES",
          "FUTURES_COMMISSION_MERCHANT",
          "HOLDING_COMPANY",
          "INTRODUCING_BROKER_COMMODITIES",
          "INTRODUCING_BROKER_SECURITIES",
          "INVESTMENT_ADVISER",
          "INVESTMENT_COMPANY",
          "RETAIL_FOREIGN_EXCHANGE_DEALER",
          "SELF_CLEARING_BROKER_SECURITIES",
          "SUBSIDIARY_OF_BANK",
          "OTHER",
          null]
      },
      "InstitutionIdTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CRD",
          "FINTRAC",
          "GCR",
          "IARD",
          "NAIC",
          "NMLS",
          "RSSD",
          "SEC",
          null]
      },
      "FederalRegulatorTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "BAFIN",
          "CFTC",
          "FDIC",
          "FHFA",
          "FRB",
          "FSPK",
          "IRS",
          "NCUA",
          "NOT_APPLICABLE",
          "OCC",
          "SEC",
          null]
      },
      "RoleInTransactionNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "SELLING_LOCATION",
          "PAYING_LOCATION",
          "BOTH",
          null]
      },
      "InvestigationCardTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CREDIT",
          "DEBIT",
          "PREPAID",
          "GIFT",
          "OTHER",
          null]
      },
      "TransactionInstrumentTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CREDIT_CARD",
          "DEBIT_CARD",
          "CHECK",
          "MONEY_ORDER",
          "ACH",
          "WIRE",
          "CASH",
          "ATM",
          "CRYPTO",
          "CURRENCY",
          "DIVIDEND",
          "ELECTRONIC_TRANSFER",
          "LOAN",
          "MIXED",
          "MORTGAGE",
          "ONLINE",
          "POLICY",
          "PURCHASE",
          "SHARE_TRANSFER",
          "SMART_CARD",
          "OTHER",
          "UNKNOWN",
          null]
      },
      "CaseDataRequest": {
        "type": "object",
        "description": "Information to associate with a case including subject PII, addresses, businesses, accounts, device information, IP addresses, transactions, financial institutions, products, credit/debit cards, etc. Within a list, each entry must have a unique ID. Duplicate IDs will result in the request being rejected as invalid.",
        "properties": {
          "bank_accounts": {
            "description": "List of Bank Accounts to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "businesses": {
            "description": "List of Businesses to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          },
          "crypto_addresses": {
            "description": "List of Crypto Addresses to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptoAddress"
            }
          },
          "devices": {
            "description": "List of Devices to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          },
          "individuals": {
            "description": "List of Individuals to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Individual"
            }
          },
          "institutions": {
            "description": "List of Institutions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Institution"
            }
          },
          "payment_cards": {
            "description": "List of Payment Cards to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentCard"
            }
          },
          "products": {
            "description": "List of Products to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "transactions": {
            "description": "List of Transactions to add to this case.",
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "ErrorType": {
        "type": "string",
        "enum": [
          "INVALID",
          "BAD_REQUEST",
          "NOT_FOUND",
          "INVALID_REQUEST",
          "UNAUTHORIZED_ACCESS",
          "UNKNOWN_TEXT_FORMAT",
          "GENERIC",
          "AUTH_ERROR",
          "TIMEOUT",
          "CONFLICT"
        ]
      },
      "RelayEdge": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "readOnly": true,
            "description": "A cursor for use in pagination."
          }
        }
      },
      "FilingJurisdictionEnumRequest": {
        "description": "The filing jurisdiction. This enum is used for API requests only and represents the subset of jurisdictions\nsupported for API filing on the Hummingbird platform.\n",
        "type": "string",
        "enum": [
          "FINCEN",
          "GNECB",
          "NFIU",
          "FIC_GHANA",
          "FINTRAC",
          "GERMANY",
          "SWEDEN",
          "BERMUDA",
          "NETHERLANDS"
        ]
      },
      "FilingReportTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CTR",
          "SAR",
          null]
      },
      "FilingType": {
        "type": "string",
        "enum": [
          "INITIAL",
          "CONTINUING",
          "CORRECT_OR_AMEND",
          "CORRECT_OR_AMEND_CONTINUING",
          "POCA",
          "TERRORISM",
          "FINCEN_DIRECTED_BACKFILING"
        ]
      },
      "FilingAmountAlgorithmNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "NO_AMOUNT",
          "AMOUNT_UNKNOWN",
          "SUM_TRANSACTIONS",
          "SUM_FLAGGED",
          "CUSTOM",
          null]
      },
      "SARActivityClassificationNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "STRUCTURING",
          "TERRORIST_FINANCING",
          "FRAUD",
          "GAMING_ACTIVITIES",
          "MONEY_LAUNDERING",
          "IDENTIFICATION_AND_DOCUMENTATION",
          "OTHER_ACTIVITIES",
          "INSURANCE",
          "SECURITIES_FUTURES",
          "MORTGAGE_FRAUD",
          "CYBER_EVENTS",
          null]
      },
      "GNECBReportCodeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "CAR",
          "CDR",
          "CSR",
          "EPA",
          "IRD",
          "IRI",
          "M",
          "ORD",
          "ORI",
          "STR",
          "STReu",
          null]
      },
      "BermudaReportIndicator": {
        "type": "string",
        "enum": [
          "-",
          "108",
          "4",
          "6",
          "62",
          "97",
          "148",
          "30",
          "119",
          "118",
          "121",
          "101",
          "10",
          "73",
          "9",
          "2",
          "74",
          "146",
          "7",
          "8",
          "158",
          "50",
          "20",
          "106",
          "147",
          "140",
          "141",
          "79",
          "83",
          "48",
          "31",
          "21",
          "151",
          "12",
          "65",
          "143",
          "161",
          "145",
          "104",
          "128",
          "13",
          "14",
          "18",
          "54",
          "34",
          "15",
          "91",
          "149",
          "71",
          "132",
          "22",
          "102",
          "129",
          "130",
          "89",
          "117",
          "90",
          "23",
          "88",
          "28",
          "29",
          "66",
          "51",
          "142",
          "64",
          "72",
          "35",
          "155",
          "33",
          "86",
          "87",
          "36",
          "37",
          "114",
          "24",
          "38",
          "25",
          "80",
          "75",
          "16",
          "55",
          "157",
          "109",
          "120",
          "78",
          "67",
          "32",
          "39",
          "135",
          "69",
          "144",
          "134",
          "110",
          "105",
          "17",
          "92",
          "160",
          "103",
          "111",
          "61",
          "60",
          "26",
          "98",
          "82",
          "112",
          "150",
          "133",
          "70",
          "5",
          "116",
          "99",
          "52",
          "115",
          "136",
          "159",
          "81",
          "1",
          "19",
          "122",
          "153",
          "124",
          "125",
          "126",
          "127",
          "152",
          "123",
          "85",
          "27",
          "95",
          "156",
          "96",
          "94",
          "154",
          "76",
          "93",
          "68",
          "138",
          "43",
          "44",
          "139",
          "45",
          "77",
          "46",
          "100",
          "53",
          "47",
          "63",
          "131",
          "58",
          "113",
          "59",
          "57",
          "49",
          "84",
          "56"
        ]
      },
      "GermanyReportIndicator": {
        "type": "string",
        "enum": [
          "A1000",
          "A1001",
          "A1002",
          "A1003",
          "A1004",
          "A1005",
          "A2000",
          "A2001",
          "A2002",
          "A2003",
          "A2004",
          "A2005",
          "A3000",
          "A3001",
          "A3002",
          "A3003",
          "A4000",
          "B1000",
          "B1101",
          "B1102",
          "B1103",
          "B1104",
          "B1105",
          "B1201",
          "B1202",
          "B1203",
          "B1204",
          "B1205",
          "B1206",
          "B1207",
          "B1208",
          "B1301",
          "B1302",
          "B1303",
          "B1304",
          "B1305",
          "B1306",
          "B1307",
          "B1308",
          "B2000",
          "B2101",
          "B2102",
          "B2103",
          "B2104",
          "B2105",
          "B2106",
          "B2107",
          "B2108",
          "B2109",
          "B2110",
          "B2111",
          "B2112",
          "B2113",
          "B2114",
          "B2115",
          "B2201",
          "B2202",
          "B2203",
          "B2204",
          "B2205",
          "B2206",
          "B2301",
          "B2302",
          "B2303",
          "B2304",
          "B2305",
          "B2306",
          "B2401",
          "C1001",
          "C1002",
          "C1003",
          "C1004",
          "C1005",
          "C1006",
          "C1007",
          "C1008",
          "C1009",
          "C1010",
          "C1011",
          "C1012",
          "C1013",
          "C1014",
          "C1015",
          "C1016",
          "C1017",
          "C1018",
          "C1019",
          "C1020",
          "C1021",
          "C1022",
          "C1023",
          "C1024",
          "D1001",
          "D1002",
          "D1004",
          "D100401",
          "D1006",
          "D1019",
          "D1020"
        ]
      },
      "GNECBReportIndicator": {
        "type": "string",
        "enum": [
          "BC",
          "CBI",
          "HT",
          "LWE",
          "ML",
          "MS",
          "PEP",
          "RWE",
          "SE",
          "SLM",
          "SW",
          "TBML",
          "TE",
          "TF",
          "-"
        ]
      },
      "NetherlandsReportIndicator": {
        "type": "string",
        "enum": [
          "Subjectief01",
          "Objectief01",
          "Objectief13",
          "Objectief14"
        ]
      },
      "SwedenReportIndicator": {
        "type": "string",
        "enum": [
          "AMTPT",
          "BMTTF",
          "GEO01",
          "GEO02",
          "GEO03",
          "GEO04",
          "INF01",
          "INF02",
          "INF03",
          "INF04",
          "INF05",
          "INF06",
          "KAN01",
          "KAN02",
          "KAN03",
          "KDK01",
          "KDK02",
          "KDK03",
          "KDK04",
          "KDK05",
          "KDK06",
          "KDK07",
          "PTT01",
          "PTT02",
          "PTT03",
          "PTT04",
          "PTT05",
          "PTT06"
        ]
      },
      "ActivityTagCategory": {
        "type": "string",
        "enum": [
          "PRODUCTS",
          "ACTIVITIES",
          "INSTRUMENTS",
          "INDICATORS",
          "CTR_TRANSACTION_TYPES"
        ]
      },
      "CaseRequest": {
        "type": "object",
        "description": "A case is the core resource behind the Hummingbird AML workflow tools. Create a Case to begin using Humminbird to investigate a potentially suspicious activity. All data can be added to a Case on creation, or after creation by creating the associated data objects.",
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "token": {
                "readOnly": true,
                "description": "Unique identifier created by Hummingbird for the case. Required when fetching or updating a case, but not when creating a case.",
                "type": "string"
              },
              "id": {
                "description": "Unique identifier that your organization uses for the case.",
                "type": "string",
                "nullable": true,
                "example": "CS-123ABC"
              },
              "created_at": {
                "description": "When this case was created.",
                "readOnly": true,
                "example": "2020-11-04T21:25:38Z",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "updated_at": {
                "description": "When this case was last updated.",
                "readOnly": true,
                "example": "2020-11-04T21:25:38Z",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "name": {
                "description": "Descriptive name for the case.",
                "type": "string",
                "nullable": true,
                "example": "Suspicious Ring"
              },
              "type": {
                "description": "Identifies the case type. Use 'filing' for filing use cases or the workflow ID for other use cass.",
                "type": "string",
                "example": "filing"
              },
              "assignee": {
                "description": "Assigns the case to a specific person, identified by token. Cannot be an empty string.",
                "nullable": true,
                "type": "string",
                "example": "\u003Chummingbird-account-token\u003E"
              },
              "assignee_email": {
                "description": "Assigns the case to a specific person, identified by email.",
                "nullable": true,
                "type": "string",
                "example": "bilbo@hummingbird.co"
              },
              "filings": {
                "description": "List of Filings for jurisdictions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilingRequest"
                }
              },
              "reviews": {
                "description": "List of Reviews associated with this case.",
                "type": "array",
                "readOnly": true,
                "items": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "alerts": {
                "description": "List of alerts that triggered this case.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Alert"
                },
                "example": []
              },
              "other_info": {
                "$ref": "#/components/schemas/OtherInfo"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CaseDataRequest"
          }
        ]
      },
      "FilingJurisdictionEnum": {
        "description": "The filing jurisdiction. This enum is used for API responses only.",
        "type": "string",
        "enum": [
          "FINCEN",
          "GNECB",
          "NFIU",
          "FIC_GHANA",
          "FINTRAC",
          "GERMANY",
          "SWEDEN",
          "BERMUDA",
          "NETHERLANDS",
          "NONE"
        ]
      },
      "CaseData": {
        "type": "object",
        "description": "Information to associate with a case including subject PII, addresses, businesses, accounts, device information, IP addresses, transactions, financial institutions, products, credit/debit cards, etc. Within a list, each entry must have a unique ID. Duplicate IDs will result in the request being rejected as invalid.",
        "properties": {
          "bank_accounts": {
            "description": "List of Bank Accounts to add.",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          },
          "businesses": {
            "description": "List of Businesses to add.",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Business"
            }
          },
          "crypto_addresses": {
            "description": "List of Crypto Addresses to add.",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CryptoAddress"
            }
          },
          "devices": {
            "description": "List of Devices to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          },
          "individuals": {
            "description": "List of Individuals to add.",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Individual"
            }
          },
          "institutions": {
            "description": "List of Institutions to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Institution"
            }
          },
          "payment_cards": {
            "description": "List of Payment Cards to add.",
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PaymentCard"
            }
          },
          "products": {
            "description": "List of Products to add.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "transactions": {
            "description": "List of Transactions to add to this case.",
            "type": "array",
            "writeOnly": true,
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "Case": {
        "type": "object",
        "description": "A case is the core resource behind the Hummingbird AML workflow tools. Create a Case to begin using Humminbird to investigate a potentially suspicious activity. All data can be added to a Case on creation, or after creation by creating the associated data objects.",
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "token": {
                "readOnly": true,
                "description": "Unique identifier created by Hummingbird for the case. Required when fetching or updating a case, but not when creating a case.",
                "type": "string"
              },
              "id": {
                "description": "Unique identifier that your organization uses for the case.",
                "type": "string",
                "nullable": true,
                "example": "CS-123ABC"
              },
              "created_at": {
                "description": "When this case was created.",
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "example": "2020-11-04T21:25:38Z"
              },
              "updated_at": {
                "description": "When this case was last updated.",
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "example": "2020-11-04T21:25:38Z"
              },
              "name": {
                "description": "Descriptive name for the case.",
                "type": "string",
                "nullable": true,
                "example": "Suspicious Ring"
              },
              "type": {
                "description": "Identifies the case type. Use 'filing' for filing use cases or the workflow ID for other use cass.",
                "type": "string",
                "example": "filing"
              },
              "assignee": {
                "description": "Assigns the case to a specific person, identified by token. Cannot be an empty string.",
                "nullable": true,
                "type": "string",
                "example": "\u003Chummingbird-account-token\u003E"
              },
              "assignee_email": {
                "description": "Assigns the case to a specific person, identified by email.",
                "nullable": true,
                "type": "string",
                "example": "bilbo@hummingbird.co"
              },
              "filings": {
                "description": "List of Filings for jurisdictions.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Filing"
                }
              },
              "reviews": {
                "description": "List of Reviews associated with this case.",
                "type": "array",
                "readOnly": true,
                "items": {
                  "$ref": "#/components/schemas/Review"
                }
              },
              "alerts": {
                "description": "List of alerts that triggered this case.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Alert"
                },
                "example": []
              },
              "other_info": {
                "$ref": "#/components/schemas/OtherInfo"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CaseData"
          }
        ]
      },
      "FilingTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "INITIAL",
          "CONTINUING",
          "CORRECT_OR_AMEND",
          "CORRECT_OR_AMEND_CONTINUING",
          "POCA",
          "TERRORISM",
          "FINCEN_DIRECTED_BACKFILING",
          null]
      },
      "CaseResponseStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "PROCESSING",
          "COMPLETED"
        ]
      },
      "AttachmentUpload": {
        "type": "object",
        "description": "The generated presigned url data for uploading your attachment file.",
        "properties": {
          "method": {
            "type": "string",
            "description": "The http method to be used when uploading your file.",
            "readOnly": true,
            "example": "post"
          },
          "url": {
            "type": "string",
            "description": "The URL directing you where to send your upload request.",
            "readOnly": true,
            "example": "https://s3.us-west-2.amazonaws.com/hummingbird.transient-attachments.production"
          },
          "fields": {
            "type": "object",
            "description": "Form field attributes that must be included in the file upload request.",
            "readOnly": true
          }
        }
      },
      "CRMIdentityDocumentTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "DRIVERS_LICENSE",
          "OTHER",
          "PASSPORT",
          "UK_CAR_REGISTRATION",
          "UK_NATIONAL_HEALTH_SERVICE_NUMBER",
          "UK_NATIONAL_INSURANCE_NUMBER",
          "UK_PROOF_OF_AGE_STANDARD_SCHEME_NUMBER",
          "UNKNOWN",
          "US_ALIEN_REGISTRATION",
          null]
      },
      "DateParts": {
        "type": "object",
        "description": "A possibly partial date. A year is always required but the month and day are optional.",
        "properties": {
          "year": {
            "type": "integer",
            "minimum": 0,
            "nullable": false
          },
          "month": {
            "type": "integer",
            "minimum": 1,
            "maximum": 12,
            "nullable": true
          },
          "day": {
            "type": "integer",
            "minimum": 1,
            "maximum": 31,
            "nullable": true
          }
        }
      },
      "CRMPhoneNumberTypeNullable": {
        "type": "string",
        "nullable": true,
        "enum": [
          "FAX",
          "HOME",
          "MOBILE",
          "WORK",
          null]
      }
    },
    "parameters": {
      "AlertTokenParameter": {
        "name": "token",
        "in": "path",
        "description": "Token of the alert",
        "required": true,
        "schema": {
          "type": "string",
          "example": "\u003Cany-token\u003E"
        }
      },
      "AlertUploadTokenParameter": {
        "name": "token",
        "in": "path",
        "description": "Token of the alert upload",
        "required": true,
        "schema": {
          "type": "string",
          "example": "\u003Cany-token\u003E"
        }
      },
      "CaseTokenParameter": {
        "name": "token",
        "in": "path",
        "description": "Token of the case",
        "required": true,
        "schema": {
          "type": "string",
          "example": "\u003Cany-token\u003E"
        }
      },
      "CRMTokenParameter": {
        "name": "token",
        "in": "path",
        "description": "Token of the existing CRM entity",
        "required": true,
        "schema": {
          "type": "string",
          "example": "\u003Cany-token\u003E"
        }
      },
      "JurisdictionParameter": {
        "name": "jurisdiction",
        "in": "path",
        "description": "Jurisdiction to reference",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "fincen",
            "gnecb"
          ],
          "example": "fincen"
        }
      },
      "RelayConnectionAfterParameter": {
        "name": "after",
        "in": "query",
        "description": "Returns the elements in the list that come after the specified cursor.",
        "schema": {
          "type": "string"
        }
      },
      "RelayConnectionBeforeParameter": {
        "name": "before",
        "in": "query",
        "description": "Returns the elements in the list that come before the specified cursor.",
        "schema": {
          "type": "string"
        }
      },
      "RelayConnectionFirstParameter": {
        "name": "first",
        "in": "query",
        "description": "Returns the first n elements from the list. May be reduced to arbitrary maximum page size.",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "RelayConnectionLastParameter": {
        "name": "last",
        "in": "query",
        "description": "Returns the last n elements from the list. May be reduced to arbitrary maximum page size.",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "ExcludeParameter": {
        "name": "exclude",
        "in": "query",
        "description": "Excludes `case.crypto_addresses` and/or `case.bank_accounts` and/or `case.payment_cards` and/or `case.individuals` and/or `case.businesses` (comma separated)",
        "required": false,
        "schema": {
          "type": "string",
          "example": "case.crypto_addresses,case.bank_accounts,case.payment_cards"
        }
      }
    },
    "requestBodies": {
      "AlertRequest": {
        "description": "Create a new Alert",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AlertRequest"
            }
          }
        }
      },
      "AttachmentRequest": {
        "description": "Data for creating an attachment.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AttachmentRequest"
            }
          }
        }
      },
      "BusinessesRequest": {
        "description": "Create or update businesses",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BusinessesRequest"
            }
          }
        }
      },
      "BusinessLookupRequest": {
        "description": "Lookup a business by ID",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BusinessLookupRequest"
            }
          }
        }
      },
      "CaseCreateRequest": {
        "description": "New Case Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseCreateRequest"
            }
          }
        }
      },
      "CaseLookupRequest": {
        "description": "Lookup a case by ID",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseLookupRequest"
            }
          }
        }
      },
      "CaseUpdateRequest": {
        "description": "Case data to update.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseUpdateRequest"
            }
          }
        }
      },
      "CaseCancelRequest": {
        "description": "Data for case cancellation.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseCancelRequest"
            }
          }
        }
      },
      "PersonLookupRequest": {
        "description": "Lookup a person by ID",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PersonLookupRequest"
            }
          }
        }
      },
      "PeopleRequest": {
        "description": "Create or update people",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PeopleRequest"
            }
          }
        }
      }
    },
    "responses": {
      "AlertCreateResponse": {
        "description": "Returns Your Alert Processing Token. This does not mean your Alert was created successfully.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AlertCreateResponse"
            }
          }
        }
      },
      "AlertFetchResponse": {
        "description": "Fetch an alert's current processing status.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AlertFetchResponse"
            }
          }
        }
      },
      "AlertUploadsGetResponse": {
        "description": "Alert Uploads Status",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AlertUploadsGetResponse"
            }
          }
        }
      },
      "AlertUploadsResponse": {
        "description": "Alert Uploads Upload URL",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AlertUploadsResponse"
            }
          }
        }
      },
      "AttachmentResponse": {
        "description": "New Attachment Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AttachmentResponse"
            }
          }
        }
      },
      "BusinessesCreateResponse": {
        "description": "A list of new business objects",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BusinessesCreateResponse"
            }
          }
        }
      },
      "BusinessGetResponse": {
        "description": "A business",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "business"
              ],
              "properties": {
                "business": {
                  "$ref": "#/components/schemas/LibraryBusiness"
                }
              }
            }
          }
        }
      },
      "CaseAttachmentsResponse": {
        "description": "Case attachments",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseAttachmentsResponse"
            }
          }
        }
      },
      "CaseCancelResponse": {
        "description": "Cancel case response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseCancelResponse"
            },
            "examples": {
              "noIssues": {
                "description": "The cancel succeeds.",
                "value": {
                  "success": true,
                  "case": {
                    "cancelled_at": "2022-02-17T21:25:38Z",
                    "token": "o8re7fhe"
                  }
                }
              }
            }
          }
        }
      },
      "CaseResponse": {
        "description": "New Case Created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseResponse"
            }
          }
        }
      },
      "CaseGetResponse": {
        "description": "Case Data Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseResponse"
            }
          }
        }
      },
      "CasePutResponse": {
        "description": "Case Updated Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseResponse"
            }
          }
        }
      },
      "CaseListResponse": {
        "description": "List of cases with pagination information",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CaseListResponse"
            }
          }
        }
      },
      "CreateImportResponse": {
        "description": "Case import response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ImportResponse"
            },
            "examples": {
              "success": {
                "description": "The case import was successfully created.",
                "value": {
                  "success": true,
                  "import": {
                    "token": "wure7fhe",
                    "status": "PENDING",
                    "errors": [],
                    "objects": []
                  }
                }
              },
              "reject": {
                "description": "The case import was not successfully created.",
                "value": {
                  "success": false,
                  "error": {
                    "type": "INVALID",
                    "message": "The data sent was invalid."
                  }
                }
              }
            }
          }
        }
      },
      "ErrorMessagesResponse": {
        "description": "List of error messages",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorMessagesResponse"
            }
          }
        }
      },
      "FetchImportResponse": {
        "description": "Fetch case import response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ImportResponse"
            },
            "examples": {
              "pending": {
                "description": "The case import was created, but has not processed any cases.",
                "value": {
                  "success": true,
                  "import": {
                    "token": "wure7fhe",
                    "status": "PENDING",
                    "errors": [],
                    "objects": []
                  }
                }
              },
              "processing": {
                "description": "The case import has start processing the cases, but has not finished.",
                "value": {
                  "success": true,
                  "import": {
                    "token": "wure7fhe",
                    "status": "PROCESSING",
                    "objects": [
                      {
                        "id": 10,
                        "token": "12345"
                      }
                    ],
                    "errors": []
                  }
                }
              },
              "completed": {
                "description": "The case import has finished processing all cases.",
                "value": {
                  "success": true,
                  "import": {
                    "token": "wure7fhe",
                    "status": "COMPLETED",
                    "objects": [
                      {
                        "id": 10,
                        "token": "12345"
                      },
                      {
                        "id": 11,
                        "token": "99999"
                      }
                    ],
                    "errors": []
                  }
                }
              },
              "errored": {
                "description": "The case import has finished processing all cases, and one had an error.",
                "value": {
                  "success": true,
                  "import": {
                    "token": "wure7fhe",
                    "status": "COMPLETED",
                    "objects": [
                      {
                        "id": 10,
                        "token": "12345"
                      }
                    ],
                    "errors": [
                      {
                        "index": 0,
                        "error": "There is no workflow that matches the request."
                      }
                    ]
                  }
                }
              },
              "reject": {
                "description": "The case import was not found.",
                "value": {
                  "success": false,
                  "error": {
                    "type": "NOT_FOUND",
                    "message": "The import token sent was invalid."
                  }
                }
              }
            }
          }
        }
      },
      "FilingResponse": {
        "description": "Case filing",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FilingResponse"
            },
            "examples": {
              "notReady": {
                "description": "If you attempt to file a case that has validation errors.",
                "value": {
                  "success": true,
                  "filing": {
                    "token": "wure7fhe",
                    "id": 12345,
                    "errors": [
                      "Add at least one subject."
                    ]
                  }
                }
              },
              "pending": {
                "description": "The filing was just submitted, and is awaiting response from the FIU.",
                "value": {
                  "success": true,
                  "filing": {
                    "token": "wure7fhe",
                    "id": 12345,
                    "status": "pending"
                  }
                }
              },
              "accepted": {
                "description": "The filing was accepted by the FIU.",
                "value": {
                  "success": true,
                  "filing": {
                    "token": "wure7fhe",
                    "id": 12345,
                    "status": "accepted",
                    "bsa_id": "92837465463409",
                    "report_id": "92837465463409"
                  }
                }
              }
            }
          }
        }
      },
      "PeopleCreateResponse": {
        "description": "A list of new person objects",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PeopleCreateResponse"
            }
          }
        }
      },
      "PersonGetResponse": {
        "description": "Person",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "person"
              ],
              "properties": {
                "person": {
                  "$ref": "#/components/schemas/LibraryPerson"
                }
              }
            }
          }
        }
      },
      "ValidationResponse": {
        "description": "Validations for a case.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationResponse"
            },
            "examples": {
              "noIssues": {
                "description": "There are no validation issues found.",
                "value": {
                  "success": true,
                  "empty": true
                }
              },
              "reportIssues": {
                "description": "Validation errors found with the SAR report",
                "value": {
                  "success": true,
                  "errors": {
                    "information": [
                      "Add at least one subject.",
                      "Add at least one financial institution."
                    ],
                    "activities": [
                      "Add at least one SAR activity type."
                    ],
                    "rationale": [
                      "Compose a detailed rationale for your decision."
                    ]
                  }
                }
              },
              "dataIssues": {
                "description": "Validation errors found with the SAR data",
                "value": {
                  "success": true,
                  "errors": {
                    "individuals[0][tins][0][tin_type]": "Tax ID type is required if number is set."
                  }
                }
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "default": false
                },
                "error": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ErrorType"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ErrorResponseV2": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "type": {
                      "$ref": "#/components/schemas/ErrorType"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "Authorization is achieved using OAuth 2.0. A client ID and secret can be generated and securely passed to you. Reach out to your Hummingbird account representative to get setup with a client ID and secret to start using the API.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.hummingbird.co/oauth/token",
            "scopes": {

            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}