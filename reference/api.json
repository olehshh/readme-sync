{"tags":[{"name":"p2p_api","x-displayName":"P2P API","description":"The P2P API is used for inter-node communication in order to establish block\nchain consensus. Each chainweb-node serves these endpoints via HTTPS on a\nnetwork interface and port that is available directly on the public\ninternet.\n\nAdditionally, endpoints of the P2P API can be made available for other\nclients. For this purpose it is possible to expose the endpoints via reverse\nproxies, load balancers, or authentication frameworks, and similar web\ntechnologies.\n"},{"name":"service_api","x-displayName":"Service API","description":"The Service API includes endpoints that expose functionality of\nchainweb-node to clients other than chainweb-nodes, such as mining pools,\nDAPPs, web applications, exchanges, wallets, etc.\n\nThe endpoints of the service API are optional and can be enabled via\nrespective configuration settings. They are served on a separate port via\nplain HTTP. Node operators are free to expose those endpoints only locally,\nor via reverse proxies, load balancers, authentication frameworks, and\nsimilar web technologies.\n\nSome of the endpoints of the service API can require considerable resources\non the server side and administrators should be careful when exposing those\npublicly. Generally, endpoints of the service API are more vulnerable to DOS\nattacks.\n"},{"name":"cut","x-displayName":"Cut Endpoints","description":"A cut represents a distributed state of a chainweb. It references one\nblock header for each chain, such that those blocks are pairwise\nconcurrent.\n\nTwo blocks from two different chains are said to be concurrent if either\none of them is an adjacent parent (is a direct dependency) of the other or\nif the blocks do not depend at all on each other.\n"},{"name":"peer","x-displayName":"Peer Endpoints","description":"The P2P communication between chainweb-nodes is sharded into several independent\nP2P network. The `cut` network is exchanging consensus state. There is also one\nmempool P2P network for each chain.\n"},{"name":"mempool","x-displayName":"Mempool P2P Endpoints","description":"Mempool P2P endpoints for communication between mempools. Endusers are not\nsupposed to use these endpoints directly. Instead, the respective Pact\nendpoints should be used for submitting transactions into the network.\n"},{"name":"payload","x-displayName":"Block Payload Endpoints","description":"Raw literal Block Payloads in the form in which they are stored on the chain.\nBy default only the payload data is returned which is sufficient for validating\nthe blockchain Merkle Tree. It is also sufficient as input to Pact for\nexecuting the Pact transactions of the block and recomputing the outputs.\n\nIt is also possible to query the transaction outputs along with the payload data.\n"},{"name":"blockhash","x-displayName":"Block Hashes Endpoints","description":"These endpoints return block hashes from the chain database.\n\nGenerally, block hashes are returned in ascending order and include hashes\nfrom orphaned blocks.\n\nFor only querying blocks that are included in the winning branch of the\nchain the `branch` endpoint can be used, which returns blocks in descending\norder starting from the leafs of branches of the block chain.\n"},{"name":"block","x-displayName":"Block Endpoints","description":"These endpoints return whole blocks, headers and payloads, from the chain\ndatabase.\n\nGenerally, blocks are returned in ascending order and include orphaned\nblocks.\n\nFor only querying blocks that are included in the winning branch of the\nchain the `branch` endpoints can be used, which return blocks in descending\norder starting from the leafs of branches of the block chain.\n\nBlocks are returned in only one format, with block headers and payloads in\nJSON encoding.\n"},{"name":"header","x-displayName":"Block Header Endpoints","description":"These endpoints return block headers from the chain database.\n\nSimilar to the block endpoints, block headers are generally returned in\nascending order and include headers of orphaned blocks.\n\nFor only querying block headers that are included in the winning branch of\nthe chain the `branch` endpoints can be used, which return block headers in\ndescending order starting from the leafs of branches of the block chain.\n\nBlock headers are returned in three different formats specified in the `accept` header of the request:\n*   `application/json`, returns block headers in base64Url (without padding)\n    encoded binary.\n*   `application/json;blockheader-encoding=object`, returns block headers in\n    JSON encoding.\n*   `application/octet-stream`, when supported by the endpoint, returns block\n    headers as binary.\n"},{"name":"config","x-displayName":"Config Endpoint"},{"name":"misc","x-displayName":"Miscellaneous Endpoints"},{"name":"pact","x-displayName":"Pact Endpoints","description":"The [Pact](https://pactlang.org) endpoints are documented in the [Pact API\nSpecification](./pact.html).\n\nThe Pact endpoints for chain `{chainId}` use the route prefix\n`/chain/{chainId}/pact/` in addition to the base URL.\n\nFuther details can also be found in [this section of the Pact Language\nReference](https://pact-language.readthedocs.io/en/stable/pact-reference.html#endpoints).\n"},{"name":"rosetta","x-displayName":"Rosetta Endpoints","description":"Chainweb node includes an implementation of the\n[Rosetta API](https://www.rosetta-api.org). The API is disabled by default\nand can be enabled in the configuration file of a node.\n\nThe following endpoints are supported, which are documented\nin the [Rosetta Specification](https://www.rosetta-api.org/docs/welcome.html):\n\n*   `POST rosetta/account/balance`\n*   `POST rosetta/block/transaction`\n*   `POST rosetta/block`\n*   `POST rosetta/construction/metadata`\n*   `POST rosetta/construction/submit`\n*   `POST rosetta/mempool/transaction`\n*   `POST rosetta/mempool`\n*   `POST rosetta/network/list`\n*   `POST rosetta/network/options`\n*   `POST rosetta/network/status`\n"},{"name":"mining","x-displayName":"Mining Endpoints","description":"The Mining API of Chainweb node is disabled by default. It can be enabled\nand configured in the configuration file.\n\n\nThe mining API consists of the following endpoints that\nare described in detail on the\n[Chainweb mining wiki page](https://github.com/kadena-io/chainweb-node/wiki/Mining-API)\n\n*   `GET mining/work`\n*   `POST mining/solved`\n*   `GET mining/updates`\n"},{"name":"binaryHeader","x-displayName":"Block Header Binary Encoding","description":"## Binary Format For Chain Graphs of Degree Three\n\ndefined in `Chainweb.BlockHeader`\n\n| Size | Bytes   | Value       |\n| ---- | ------- | ----------- |\n| 8    | 0-7     | flags       |\n| 8    | 8-15    | time        |\n| 32   | 16-47   | parent      |\n| 110  | 48-157  | adjacents   |\n| 32   | 158-189 | target      |\n| 32   | 190-221 | payload     |\n| 4    | 222-225 | chain       |\n| 32   | 226-257 | weight      |\n| 8    | 258-265 | height      |\n| 4    | 266-269 | version     |\n| 8    | 270-277 | epoch start |\n| 8    | 278-285 | nonce       |\n| 32   | 286-317 | hash        |\n\ntotal: 318 bytes\n\nAdjacent Parents Record (length 3):\n\n| Bytes | Value     |\n| ----- | --------- |\n| 0-1   | length    |\n| 2-109 | adjacents |\n\ntotal: 110 bytes\n\nAdjacent Parent:\n\n| Bytes | Value |\n| ----- | ----- |\n| 0-3   | chain |\n| 4-35  | hash  |\n\ntotal: 36 bytes\n\n## Fields\n\n**POW related values**:\n\nArithmetic operations and comparisons on `parent`, `target`, `weight`, and `hash`\ninterpret the value as unsigned 256 bit integral numbers in little endian encoding.\nAll operations are performed using rational arithmetic of unlimited precision and the final result is rounded.\nPlease consult the code for details of how the result is rounded.\n\n**Time Stamps**:\n\n`time` and `epoch start` are a little endian twoth complement encoded integral numbers that count SI microseconds since POSIX epoch (leap seconds are ignored). These numbers are always positive (highest bit is 0).\n\n**Numbers**:\n\n* `height` is a little endian encoded unsigned integral 64 bit number.\n* `length` is a little endian encoded unsigned integral 16 bit number.\n\n**Version**:\n\n`version` identifies the chainweb version. It is a 32 bit value in little endian encoding.\nValues up to 0x0000FFFF are reserved for production versions (which includes `development` and testnets).\n\n| value      | version     |\n| ---------- | ----------- |\n| 0x00000005 | mainnet01   |\n| 0x00000001 | development |\n| 0x00000007 | testnet04   |\n\n**Other**:\n\n* `nonce` is any sequence of 8 bytes that is only compared for equality.\n* `chain` is any sequence of 4 bytes that identifies a chain and can be compared for equality.\n* `payload` is any sequence of 32 bytes that is a cryptographic hash of the payload associated with the block and can be compared for equality.\n* `flags` are eight bytes of value 0x0 that are reserved for future use.\n"},{"name":"binaryWorkHeader","x-displayName":"Work Header Binary Encoding","description":"The work bytes received from the `/miner/work` endpoint is slightly different than the above header format. These headers do not include the block hash, instead prefixing the header above (without hash) with chain id and hash target bytes.\n\nThe first 36 bytes are informational. Only the bytes from position 36 to the end are subject of the POW hash computation.\n\nThe final 8 bytes are the nonce. The creation time is encoded in bytes 44-52 (see above for details of the encoding). Miners are allowed,  but not required, to update the time to reflect the solve time for the block more closely.\nA larger value for the creation time increases the accuracy of difficulty adjustment which is in the interest of miners -- the high difficulty guarantees that the outcome of the race of winning blocks is determined by actual hash power. However, blocks that are predated (i.e. have a creation time that is in the future) are rejected during block header validation. Leaving the time unchanged is a valid choice.\n\nMiners must not change or make any assumptions about the content of the \"reserved\" bytes.\n\nDefined in `Chainweb.Miner.Core`\n\n| Size | Bytes   | Work Bytes | Value       |\n| ---- | ------- | -----------| ----------- |\n| 4    | 0-3     | NA         | chain       |\n| 32   | 4-35    | NA         | hash-target |\n|      |         |            |             |\n| 8    | 36-43   | 0-7        | reserved    |\n| 8    | 44-51   | 8-15       | **time**    |\n| 298  | 52-313  | 16-277     | reserved    |\n| 8    | 314-321 | 278-285    | **nonce**   |\n\ntotal: 322 bytes\n\n\nFor arithmetic comparisons the `hash-target` is interpreted as unsigned 256 bit integral number in little endian encoding.\n\n`time` is a little endian twoth complement encoded integral number that counts SI microseconds since POSIX epoch (leap seconds are ignored). The value is always positive (highest bit is 0).\n"},{"name":"cut_model","x-displayName":"Cut Model","description":"The `origin` property is required for use with the `PUT /cut` endpoint.\n<SchemaDefinition schemaRef=\"#/components/schemas/cut\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"payload_model","x-displayName":"Payload Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/payload\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"payloadWithOutputs_model","x-displayName":"Payload With Outputs Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/payloadWithOutputs\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"header_model","x-displayName":"Block Header Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/blockHeader\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"peer_model","x-displayName":"Peer Info Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/peer\" showReadOnly={true} showWriteOnly={true} />\n\n## Compute PeerInfo\n\nGenerally, it is easier to query the peer info of a peer using a GET query for a peer database.\nOtherwise the peer info can be computed as follows.\n\nFor peers that use domain names with valid CA signed SSL certificates the peer id is `null`.\n\nFor peers with self-signed certificates the peer id is the base64Url (without padding) encoded\nSHA256 fingerprint of the certificate. For a chainweb-node `NODE` it can be computed as follows:\n\n```sh\necho |\nopenssl s_client -showcerts -servername ${NODE} -connect ${NODE}:443 2>/dev/null |\nopenssl x509 -fingerprint -noout -sha256 |\nsed 's/://g' |\ntail -c 65 |\nxxd -r -p |\nbase64 |\ntr -d '=' |\ntr '/+' '_-'\n```\n"},{"name":"nodeInfo_model","x-displayName":"Chainweb Node Info Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/nodeInfo\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"page_model","x-displayName":"Collection Page Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/page\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"minerInfo_model","x-displayName":"Miner Info Model","description":"<SchemaDefinition schemaRef=\"#/components/schemas/minerInfo\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"miningUpdateEventStream_model","x-displayName":"Mining Update Event Stream Model","description":"A server-sent event sources that notifies miners when new mining work\nbecomes available. The stream is terminated by the server in regular\nintervals and it is up to the client to request a new stream.\n\nEach event consists of a single line: `event:New Cut`.\nEvents are separated by empty lines.\n\n<SchemaDefinition schemaRef=\"#/components/schemas/miningUpdateEventStream\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"commonResponseHeaders","x-displayName":"Response Headers","description":"\n## Server Timestamp\n\n`x-server-timestamp`: The time of the clock of the remote node\n\n<SchemaDefinition schemaRef=\"#/components/schemas/posixTimestamp\" showReadOnly={true} showWriteOnly={true} />\n\n## Chainweb Node Version\n\n`x-chainweb-node-version`: The version of the remote chainweb node\n\n<SchemaDefinition schemaRef=\"#/components/schemas/chainwebVersion\" showReadOnly={true} showWriteOnly={true} />\n\n## Client Peer Address\n\n`x-peer-addr`: Host and port of the client as observed by the remote node\n\n<SchemaDefinition schemaRef=\"#/components/schemas/hostAddress\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"endpoint-local","x-displayName":"Non-transactional execution"},{"name":"endpoint-send","x-displayName":"Transactional batch execution"},{"name":"endpoint-poll","x-displayName":"Batch polling for results"},{"name":"endpoint-listen","x-displayName":"Blocking listen for single transaction result"},{"name":"endpoint-private","x-displayName":"Private transaction execution"},{"name":"endpoint-spv","x-displayName":"SPV proof creation for cross chain transaction"},{"name":"model-command","x-displayName":"Pact Commands","description":"<SchemaDefinition schemaRef=\"#/components/schemas/command\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"model-command-result","x-displayName":"Pact Command Results","description":"<SchemaDefinition schemaRef=\"#/components/schemas/command-result\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"model-payload","x-displayName":"Pact Command Payloads","description":"<SchemaDefinition schemaRef=\"#/components/schemas/pactPayload\" showReadOnly={true} showWriteOnly={true} />\n"},{"name":"model-pact-value","x-displayName":"Pact Values","description":"<SchemaDefinition schemaRef=\"#/components/schemas/pact-value\" showReadOnly={true} showWriteOnly={true} />\n"}],"paths":{"/chainweb/{apiVersion}/{chainwebVersion}/cut":{"description":"A cut represents a distributed state of a chainweb. It references one\nblock header for each chain, such that those blocks are pairwise\nconcurrent.\n\nTwo blocks from two different chains are said to be concurrent if either\none of them is an adjacent parent (is a direct dependency) of the other or\nif the blocks do not depend at all on each other.\n","get":{"tags":["Kadena - REST API"],"summary":"getCurrentCut","operationId":"rpc-kadena-getcurrentcut","parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"name":"maxheight","in":"query","description":"Maximum cut height of the returned cut","required":false,"schema":{"type":"integer","minimum":0}}],"responses":{"200":{"description":"The current cut","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/cut"},"example":{"$ref":"#/components/examples/cut"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"// yarn add @tatumio/tatum\n\nimport { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst currentCut = await tatum.rpc.getCurrentCut({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n  },\n});\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"base64HeaderPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/hash":{"get":{"summary":"getBlockHashes","operationId":"rpc-kadena-getblockhashes","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/next"},{"$ref":"#/components/parameters/minheight"},{"$ref":"#/components/parameters/maxheight"}],"responses":{"200":{"description":"A page of a collection of block hashes in **ascending** order\nthat satisfies query parameters. Any block hash from the chain\ndatabase is returned. **This includes hashes of orphaned blocks.**\n","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of block hashes","items":{"$ref":"#/components/schemas/blockHash"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/blockHashPage"}}}},"404":{"description":"A parameter indicated a nonexistent block height.\n","content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}}},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/hash/branch":{"post":{"summary":"getBlockHashBranches","operationId":"rpc-kadena-getblockhashbranches","description":"A page of block hashes from branches of the block chain in\n**descending** order.\n\nOnly blocks are returned that are ancestors of the some block in the\nset of upper bounds and are not ancestors of any block in the set of\nlower bounds.\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/next"},{"$ref":"#/components/parameters/minheight"},{"$ref":"#/components/parameters/maxheight"}],"requestBody":{"description":"Upper and lower bounds of the queried branches","content":{"application/json":{"schema":{"properties":{"lower":{"description":"No block hashes are returned that are predecessors of any\nblock with a hash from this array.\n","type":"array","items":{"$ref":"#/components/schemas/blockHash"}},"upper":{"description":"Returned block hashes are predecessors of a block with an\nhash from this array. This includes blocks with hashes from\nthis array.\n","type":"array","items":{"$ref":"#/components/schemas/blockHash"}}}},"examples":{"singletonLimited":{"value":{"lower":["RClyuyZAacwvPpmLXKbTwrIRXWeUSjiNhJVP2esH8KM"],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Ancestors of block that are not acestors of another block"},"singleton":{"value":{"lower":[],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Ancestors of one block"},"empty":{"value":{"lower":[],"upper":[]},"summary":"Empty branch"},"empty2":{"value":{"lower":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Another example that returns an empty page"}}}}},"responses":{"200":{"description":"The requested block hashes","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of block hashes","items":{"$ref":"#/components/schemas/blockHash"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/blockHashBranchPage"}}}},"404":{"description":"The requested block hashes could not be found","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst headers = await tatum.rpc.getBlockHeaders({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n});\n\nconsole.log(headers);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"base64HeaderPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/block":{"get":{"summary":"getBlock","operationId":"rpc-kadena-getblock","description":"A page of a collection of blocks in **ascending** order that satisfies\nquery parameters. Any block from the chain database is returned. **This\nincludes orphaned blocks.**\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/next"},{"$ref":"#/components/parameters/minheight"},{"$ref":"#/components/parameters/maxheight"}],"responses":{"200":{"description":"The requested blocks","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of JSON encoded blocks","items":{"$ref":"#/components/schemas/block"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/blockPage"}}}},"404":{"description":"The `next` or `maxheight` parameter indicated a nonexistent block height.\n","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = (await TatumSDK.init)<Kadena>{ network: Network.KADENA };\n\nconst blocks = await tatum.rpc.getBlock({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n});\n\nconsole.log(blocks);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"blockPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/block/branch":{"post":{"summary":"getBlockBranches","operationId":"rpc-kadena-getblockbranches","description":"A page of blocks from branches of the block chain in **descending**\norder.\n\nBlocks are returned that are ancestors of the block in the set of upper\nbounds and are not ancestors of any block in the set of lower bounds.\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/next"},{"$ref":"#/components/parameters/minheight"},{"$ref":"#/components/parameters/maxheight"}],"requestBody":{"description":"Upper and lower bounds of the queried branches","content":{"application/json":{"schema":{"properties":{"lower":{"description":"No blocks are returned that are predecessors of any block with\nan hash from this array.\n","type":"array","items":{"$ref":"#/components/schemas/blockHash"}},"upper":{"description":"Returned block headers are predecessors of a block with an\nhash from this array. This includes blocks with hashes from\nthis array.\n","type":"array","items":{"$ref":"#/components/schemas/blockHash"}}}},"examples":{"singletonLimited":{"value":{"lower":["RClyuyZAacwvPpmLXKbTwrIRXWeUSjiNhJVP2esH8KM"],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Ancestors of block that are not ancestors of another block"},"singleton":{"value":{"lower":[],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Ancestors of one block"},"empty":{"value":{"lower":[],"upper":[]},"summary":"Empty branch"},"empty2":{"value":{"lower":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Another example that returns an empty page"}}}}},"responses":{"200":{"description":"The blocks that were found","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of JSON encoded blocks","items":{"$ref":"#/components/schemas/block"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/blockPage"}}}},"400":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"The branch bounds were exceeded."},"404":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"A block indicated by a required parameter was not found.","content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}},"406":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"The value of the `Accept` header is not supported."}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst blockBranches = await tatum.rpc.getBlockBranches({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n});\n\nconsole.log(blockBranches);\n","correspondingExamples":"blockPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/header":{"get":{"summary":"getBlockHeaders","operationId":"rpc-kadena-getblockheaders","description":"A page of a collection of block headers in **ascending** order\nthat satisfies query parameters. Any block header from the chain\ndatabase is returned. **This includes headers of orphaned blocks.**\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/next"},{"$ref":"#/components/parameters/minheight"},{"$ref":"#/components/parameters/maxheight"}],"responses":{"200":{"description":"The requested block headers","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of base64 encoded block headers","type":"array","items":{"$ref":"#/components/schemas/base64Header"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/base64HeaderPage"}},"application/json;blockheader-encoding=object":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of JSON encoded block headers","items":{"$ref":"#/components/schemas/blockHeader"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/blockHeaderPage"}}}},"404":{"description":"The `next` or `maxheight` parameter indicated a nonexistent block height.\n","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst headers = await tatum.rpc.getBlockHeaders({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n});\n\nconsole.log(headers);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"base64HeaderPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/header/{blockHash}":{"get":{"summary":"getBlockHeaderByHash","operationId":"rpc-kadena-getblockheaderbyhash","description":"Query a block header by its hash","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/blockHash"}],"responses":{"200":{"description":"The block header with that hash was found","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/base64Header"},"example":{"value":{"$ref":"#/components/examples/base64HeaderPage"}}},"application/json;blockheader-encoding=object":{"schema":{"$ref":"#/components/schemas/blockHeader"},"example":{"value":{"$ref":"#/components/examples/blockHeaderPage/value/items/0"}}},"application/octet-stream":{"schema":{"$ref":"#/components/schemas/binaryHeader"}}}},"404":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"A block header with that block hash was not found.","content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}},"406":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"The value of the `Accept` header is not supported."}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst blockHeader = await tatum.rpc.getBlockHeaderByHash({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n  blockHash: \"your_block_hash_here\",\n});\n\nconsole.log(blockHeader);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"base64HeaderPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/header/branch":{"post":{"summary":"getBlockHeaderBranches","operationId":"rpc-kadena-getblockheaderbranches","description":"A page of block headers from branches of the block chain in\n**descending** order.\n\nOnly blocks are returned that are ancestors of the some block in the\nset of upper bounds and are not ancestors of any block in the set of\nlower bounds.\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/limit"},{"$ref":"#/components/parameters/next"},{"$ref":"#/components/parameters/minheight"},{"$ref":"#/components/parameters/maxheight"}],"requestBody":{"description":"Upper and lower bounds of the queried branches","content":{"application/json":{"schema":{"properties":{"lower":{"description":"No blocks are returned that are predecessors of any block with\nan hash from this array.\n","type":"array","items":{"$ref":"#/components/schemas/blockHash"}},"upper":{"description":"Returned block headers are predecessors of a block with an\nhash from this array. This includes blocks with hashes from\nthis array.\n","type":"array","items":{"$ref":"#/components/schemas/blockHash"}}}},"examples":{"singletonLimited":{"value":{"lower":["RClyuyZAacwvPpmLXKbTwrIRXWeUSjiNhJVP2esH8KM"],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Ancestors of block that are not ancestors of another block"},"singleton":{"value":{"lower":[],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Ancestors of one block"},"empty":{"value":{"lower":[],"upper":[]},"summary":"Empty branch"},"empty2":{"value":{"lower":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"],"upper":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74"]},"summary":"Another example that returns an empty page"}}}}},"responses":{"200":{"description":"The block headers were found","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of base64 encoded block headers","items":{"$ref":"#/components/schemas/base64Header"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/base64HeaderBranchPage"}},"application/json;blockheader-encoding=object":{"schema":{"allOf":[{"properties":{"items":{"description":"Array of JSON encoded block headers","items":{"$ref":"#/components/schemas/blockHeader"}}}},{"$ref":"#/components/schemas/page"}]},"example":{"$ref":"#/components/examples/blockHeaderPage"}}}},"400":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"The branch bounds were exceeded."},"404":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"A block header indicated by a required parameter was not found.","content":{"application/json":{"schema":{"properties":{"reason":{"type":"string"},"key":{"$ref":"#/components/schemas/blockHash"}}}}}},"406":{"headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"description":"The value of the `Accept` header is not supported."}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Blockchain } from \"@tatumio/tatum\";\n\nconst sdk = await TatumSDK.init<Blockchain>({ network: Network.BLOCKCHAIN_MAINNET });\n\nconst headerBranches = await sdk.rpc.getBlockHeaderBranches({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n  lower: [\"example_lower_hash\"],\n  upper: [\"example_upper_hash\"]\n});\n\nconsole.log(headerBranches);\n\nawait sdk.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"base64HeaderBranchPage","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/payload/{payloadHash}":{"get":{"summary":"getPayloadByHash","operationId":"rpc-kadena-getpayloadbyhash","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/payloadHash"},{"$ref":"#/components/parameters/blockHeight"}],"responses":{"200":{"description":"The payload data of for the given block payload hash","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/payload"},"examples":{"payload":{"summary":"Payload with one transaction","value":{"$ref":"#/components/examples/payloads/value/1"}},"emptyPayload":{"summary":"Empty block payload","value":{"$ref":"#/components/examples/payloads/value/0"}}}}}},"404":{"description":"The block payload with that hash was not found","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"properties":{"reason":{"type":"string","description":"Failure message"},"key":{"$ref":"#/components/schemas/payloadHash"}}},"example":{"reason":"key not found","key":"k1H3DsInAPvJ0W_zPxnrpkeSNdPUT0S9U8bqDLG739w"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst payload = await tatum.rpc.getPayloadByHash({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n  payloadHash: \"your_payload_hash_here\",\n});\n\nconsole.log(payload);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"payloads","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/payload/batch":{"post":{"summary":"getBatchOfBlockPayload","operationId":"rpc-kadena-getbatchofblockpayload","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"}],"requestBody":{"$ref":"#/components/requestBodies/batchPayloadBody"},"responses":{"200":{"description":"Array of the some or all of the requested block payloads. The\npayloads may be returned in any order.\n","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/payload"}},"examples":{"two":{"value":{"$ref":"#/components/examples/payloads"},"summary":"Result with two payloads"},"empty":{"value":[],"summary":"Empty result"}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst payloadBatch = await tatum.rpc.getPayloadBatch({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n  payloadHashes: [\"your_payload_hash_here1\", \"your_payload_hash_here2\"],\n});\n\nconsole.log(payloadBatch);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","correspondingExamples":"payloads","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/payload/{payloadHash}/outputs":{"get":{"summary":"getBlockPayloadWithOutputs","operationId":"rpc-kadena-getblockpayloadwithoutputs","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"$ref":"#/components/parameters/payloadHash"},{"$ref":"#/components/parameters/blockHeight"}],"responses":{"200":{"description":"The payload with outputs for the given block payload hash","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/payloadWithOutputs"},"examples":{"payload":{"summary":"Payload with outputs with one transaction","value":{"$ref":"#/components/examples/payloadWithTransactions"}},"emptyPayload":{"summary":"Empty block payload","value":{"$ref":"#/components/examples/emptyPayload"}}}}}},"404":{"description":"A block payload with that hash was not found","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"properties":{"reason":{"type":"string","description":"Failure message"},"key":{"$ref":"#/components/schemas/payloadHash"}}},"example":{"reason":"key not found","key":"k1H3DsInAPvJ0W_zPxnrpkeSNdPUT0S9U8bqDLG739w"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst payloadOutputs = await tatum.rpc.getPayloadWithOutputs({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n  payloadHash: \"your_payload_hash_here\",\n});\n\nconsole.log(payloadOutputs);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/payload/outputs/batch":{"post":{"summary":"getBatchBlockPayloadWithOutputs","operationId":"rpc-kadena-getbatchblockpayloadwithoutputs","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"}],"requestBody":{"$ref":"#/components/requestBodies/batchPayloadBody"},"responses":{"200":{"description":"Array of the some or all of the requested block payloads with\noutputs. Result items maybe returned in any order.\n","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/payloadWithOutputs"}},"examples":{"two":{"value":{"$ref":"#/components/examples/payloadsWithOutputs"},"summary":"Result with two payloads"},"empty":{"value":[],"summary":"Empty result"}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst payloadOutputsBatch = await tatum.rpc.getPayloadOutputsBatch({\n  network: {\n    apiVersion: \"0.0\",\n    nodeVersion: \"mainnet01\",\n    chain: \"0\", // Example chain ID\n  },\n  payloadHashes: [\"hash1\", \"hash2\"],\n});\n\nconsole.log(payloadOutputsBatch);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/health-check":{"get":{"tags":["Kadena - REST API"],"summary":"checkNodeHealth","operationId":"rpc-kadena-checknodehealth","description":"Checks whether the chainweb-node is up and running and responding to API\nrequests.\n","responses":{"200":{"description":"The node is healthy","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"text/plain":{"schema":{"type":"string"},"example":"Health check OK."}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst healthStatus = await tatum.rpc.checkNodeHealth();\n\nconsole.log(healthStatus); // Expected output: \"Health check OK.\"\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/info":{"get":{"tags":["Kadena - REST API"],"summary":"getNodeInfo","operationId":"rpc-kadena-getnodeinfo","description":"Provides general information about the node and the chainweb version","responses":{"200":{"description":"General information about the node and the chainweb version","headers":{"x-peer-addr":{"$ref":"#/components/headers/x-peer-addr"},"x-server-timestamp":{"$ref":"#/components/headers/x-server-timestamp"},"x-chainweb-node-version":{"$ref":"#/components/headers/x-chainweb-node-version"}},"content":{"application/json":{"schema":{"$ref":"#/components/schemas/nodeInfo"},"example":{"$ref":"#/components/examples/info"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst nodeInfo = await tatum.rpc.getNodeInfo();\n\nconsole.log(nodeInfo);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/pact/api/v1/local":{"post":{"description":"Blocking/sync call to submit a command for non-transactional execution. In a\nblockchain environment this would be a node-local “dirty read”, which can\neither serve as a node-local repl execution, or fully gassed transaction\nsimulation and transaction validation. Any database writes or changes to the\nenvironment are rolled back.\n","tags":["Kadena - REST API"],"summary":"postLocalCommand","operationId":"rpc-kadena-postlocalcommand","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/command"}}}},"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"name":"preflight","in":"query","description":"Trigger fully-gassed mainnet transaction execution simulation and\ntransaction metadata validations.\n","required":false,"schema":{"type":"boolean"}},{"name":"rewindDepth","in":"query","description":"Rewind transaction execution environment by a number of block\nheights.\n","required":false,"schema":{"type":"integer","minimum":0}},{"name":"signatureVerification","in":"query","description":"Require user signature verification when validating transaction\nmetadata.\n","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"description":"The command's result.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/command-result"},{"$ref":"#/components/schemas/preflight-result"}]}}}},"400":{"description":"The command was invalid.","content":{"text/plain":{"example":"Validation failed: Invalid command: Failed reading: empty","schema":{"$ref":"#/components/schemas/validation-failure"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst command = {\n  \"hash\": \"H6XjdPHzMai2HLa3_yVkXfkFYMgA0bGfsB0kOsHAMuI\",\n  \"sigs\": [\n    {\n      \"sig\": \"8d452109cc0439234c093b5e204a7428bc0a54f22704402492e027aaa9375a34c910d8a468a12746d0d29e9353f4a3fbebe920d63bcc7963853995db015d060f\"\n    }\n  ],\n  \"cmd\": \"{\\\"payload\\\":{\\\"exec\\\":{\\\"data\\\":null,\\\"code\\\":\\\"(+ 1 2)\\\"}},\\\"signers\\\":[{\\\"pubKey\\\":\\\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\\\"}],\\\"meta\\\":{\\\"gasLimit\\\":1000,\\\"chainId\\\":\\\"0\\\",\\\"gasPrice\\\":1.0e-2,\\\"sender\\\":\\\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\\\"},\\\"nonce\\\":\\\"nonce-value\\\"}\"\n};\n\nconst response = await tatum.rpc.postLocalCommand(command);\n\nconsole.log(response);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/pact/api/v1/send":{"post":{"description":"Asynchronous submission of one or more public (unencrypted) commands\nto the blockchain for execution.\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"}],"summary":"postSendCommand","operationId":"rpc-kadena-postsendcommand","requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["cmds"],"properties":{"cmds":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/command"}}}}}}},"responses":{"200":{"description":"The commands were successfully submitted. The response contains their request keys.","content":{"application/json":{"schema":{"required":["requestKeys"],"properties":{"requestKeys":{"description":"Request keys for use with `poll` or `listen` to retrieve results.","type":"array","minItems":1,"items":{"$ref":"#/components/schemas/request-key"}}}}}}},"400":{"description":"The command failed.","content":{"text/plain":{"example":"Validation failed for hash \"j5f3mZaF9pVA7OmV4nTuw5-paG9LzLQJWAMuGGRRLeQ\": Attempt to buy gas failed with: (read coin-table sender): Failure: Tx Failed: read: row not found: 368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca","schema":{"$ref":"#/components/schemas/validation-failure"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst command = {\n  \"hash\": \"H6XjdPHzMai2HLa3_yVkXfkFYMgA0bGfsB0kOsHAMuI\",\n  \"sigs\": [\n    {\n      \"sig\": \"8d452109cc0439234c093b5e204a7428bc0a54f22704402492e027aaa9375a34c910d8a468a12746d0d29e9353f4a3fbebe920d63bcc7963853995db015d060f\"\n    }\n  ],\n  \"cmd\": \"{\\\"payload\\\":{\\\"exec\\\":{\\\"data\\\":null,\\\"code\\\":\\\"(+ 1 2)\\\"}},\\\"signers\\\":[{\\\"pubKey\\\":\\\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\\\"}],\\\"meta\\\":{\\\"gasLimit\\\":1000,\\\"chainId\\\":\\\"0\\\",\\\"gasPrice\\\":1.0e-2,\\\"sender\\\":\\\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\\\"},\\\"nonce\\\":\\\"nonce-value\\\"}\"\n};\n\nconst commands = { cmds: [command] };\n\nconst response = await tatum.rpc.postSendCommand(commands);\n\nconsole.log(response);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/pact/api/v1/poll":{"post":{"description":"Allows polling for one or more command results by request key.\n","summary":"postPollCommand","operationId":"rpc-kadena-postpollcommand","tags":["Kadena - REST API"],"requestBody":{"content":{"application/json":{"schema":{"required":["requestKeys"],"properties":{"requestKeys":{"type":"array","minItems":1,"items":{"$ref":"#/components/schemas/request-key"}}}}}}},"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"},{"name":"confirmationDepth","in":"query","description":"Configures how many blocks should be mined until the requested transaction is ready.\n","required":false,"schema":{"type":"integer","minimum":0}}],"responses":{"200":{"description":"The command results for some of the requested request keys.","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/command-result"}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst requestKeys = [\"j5f3mZaF9pVA7OmV4nTuw5-paG9LzLQJWAMuGGRRLeQ\"];\n\nconst response = await tatum.rpc.poll({ requestKeys });\n\nconsole.log(response);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/pact/api/v1/listen":{"post":{"description":"Blocking request for single command result.\n","summary":"postListenCommand","operationId":"rpc-kadena-postlistencommand","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["listen"],"properties":{"listen":{"$ref":"#/components/schemas/request-key"}}}}}},"responses":{"200":{"description":"The request key was found.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/command-result"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst requestKey = \"j5f3mZaF9pVA7OmV4nTuw5-paG9LzLQJWAMuGGRRLeQ\";\n\nconst response = await tatum.rpc.postListenCommand({ listen: requestKey });\n\nconsole.log(response);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/pact/api/v1/private":{"post":{"description":"Asynchronous submission of a single addressed command which\nwill be transmitted with end-to-end encryption only between addressed entity nodes.\nPrivate payload metadata required.\n","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"}],"summary":"postPrivateCommand","operationId":"rpc-kadena-postprivatecommand","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/command"}}}},"responses":{"200":{"description":"The command was accepted.","content":{"application/json":{"schema":{"properties":{"requestKeys":{"description":"Request keys for use with `poll` or `listen` to retrieve results.","type":"array","minItems":1,"maxItems":1,"items":{"$ref":"#/components/schemas/request-key"}}}}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst command = {\n  \"hash\": \"H6XjdPHzMai2HLa3_yVkXfkFYMgA0bGfsB0kOsHAMuI\",\n  \"sigs\": [\n    {\n      \"sig\": \"8d452109cc0439234c093b5e204a7428bc0a54f22704402492e027aaa9375a34c910d8a468a12746d0d29e9353f4a3fbebe920d63bcc7963853995db015d060f\"\n    }\n  ],\n  \"cmd\": \"{\\\"payload\\\":{\\\"exec\\\":{\\\"data\\\":null,\\\"code\\\":\\\"(+ 1 2)\\\"}},\\\"signers\\\":[{\\\"pubKey\\\":\\\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\\\"}],\\\"meta\\\":{\\\"gasLimit\\\":1000,\\\"chainId\\\":\\\"0\\\",\\\"gasPrice\\\":1.0e-2,\\\"sender\\\":\\\"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca\\\"},\\\"nonce\\\":\\\"nonce-value\\\"}\"\n};\n\nconst response = await tatum.rpc.postPrivateCommand(command);\n\nconsole.log(response);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}},"/chainweb/{apiVersion}/{chainwebVersion}/chain/{chain}/pact/spv":{"post":{"description":"Blocking request to fetch spv proof of a cross chain transaction. Request must be sent to the chain where the transaction is initiated.\n","summary":"postSpvProof","operationId":"rpc-kadena-postspvproof","tags":["Kadena - REST API"],"parameters":[{"$ref":"#/components/parameters/apiVersion"},{"$ref":"#/components/parameters/chainwebVersion"},{"$ref":"#/components/parameters/chain"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/spv-object"}}}},"responses":{"200":{"description":"The requested spv proof.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/spv-proof"}}}},"400":{"description":"The requested spv proof was not findable.","content":{"text/plain":{"example":"SPV target not reachable: target chain not reachable. Chainweb instance is too young","schema":{"description":"Error message with the description of failed proof requests.","type":"string"}}}}},"x-readme":{"code-samples":[{"language":"javascript","code":"import { TatumSDK, Kadena, Network } from \"@tatumio/tatum\";\n\nconst tatum = await TatumSDK.init<Kadena>({ network: Network.KADENA });\n\nconst spvObject = {\n  requestKey: \"7af34f24d55d2fcf5de6fccfeeb837698ebff4598303237c64348a47806c8646\",\n  targetChainId: \"1\"\n};\n\nconst response = await tatum.rpc.postSpvProof(spvObject);\n\nconsole.log(response);\n\nawait tatum.destroy(); // Destroy Tatum SDK - needed for stopping background jobs\n","install":"yarn add @tatumio/tatum"}]},"security":[{"X-API-Key":[]}]}}},"openapi":"3.1.0","info":{"title":"Kadena Chainweb Node API","description":"Chainweb is a scalable Proof-Of-Work (PoW) consensus algorithm. It is an\nconservative extension of Bitcoin's Nakamoto consensus  that extends\nBitcoin's single chain algorithm to multiple chains. This allows for\nunlimited transaction throughput by horizontally scaling the number of chains.\n","version":"0.0","x-logo":{"url":"https://i.imgur.com/bAZFAGF.png","alttext":"Kadena Chainweb Logo"}},"servers":[{"url":"https://{chain}.gateway.tatum.io","description":"RPC Gateway - Recommended","variables":{"chain":{"default":"kadena-mainnet","enum":["kadena-mainnet","kadena-testnet"]}}},{"url":"https://api.tatum.io/v3/blockchain/node/{chain}","description":"Deprecated","variables":{"chain":{"default":"kadena-mainnet","enum":["kadena-mainnet","kadena-testnet"]}}}],"x-tagGroups":[{"name":"chainweb_p2p","x-displayName":"Chainweb P2P API","tags":["p2p_api","cut","blockhash","header","payload","mempool","peer","config"]},{"name":"chainweb_service","x-displayName":"Chainweb Service API","tags":["service_api","block","misc","mining","pact","rosetta"]},{"name":"Common HTTP Headers","tags":["commonResponseHeaders"]},{"name":"Data Models","tags":["cut_model","header_model","payload_model","payloadWithOutputs_model","peer_model","nodeInfo_model","page_model","minerInfo_model","miningUpdateEventStream_model"]},{"name":"Binary Encodings","tags":["binaryHeader","binaryWorkHeader"]},{"name":"std-pact-api","x-displayName":"Standard Pact API","tags":["endpoint-local","endpoint-send","endpoint-poll","endpoint-listen"]},{"name":"private-api","x-displayName":"Private Pact API","tags":["endpoint-private"]},{"name":"spv-api","x-displayName":"SPV API","tags":["endpoint-spv"]},{"name":"models","x-displayName":"Pact API models","tags":["model-command","model-command-result","model-payload","model-pact-value"]}],"components":{"responses":{"Error400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error400"}}}},"Error401":{"description":"Unauthorized. Not valid or inactive subscription key present in the HTTP Header.","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/Error401NotActive"},{"$ref":"#/components/schemas/Error401Invalid"}]}}}},"Error403":{"description":"Forbidden. The request is authenticated, but it is not possible to perform the operation due to logical error or invalid permissions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error403"}}}},"Error500":{"description":"Internal server error. There was an error on the server during the processing of the request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error500"}}}}},"parameters":{"ApiKey":{"description":"Tatum X-API-Key used for authorization. You can omit this path parameter and either use the X-Api-Key header, or the API key tied to your IP address without any header.","in":"path","name":"xApiKey","required":true,"schema":{"type":"string","example":"t-66a730ccccfd17001c479705-2f597d14ad7543f289a03418"}},"chainwebVersion":{"description":"The version of the Chainweb protocol.","in":"path","name":"chainwebVersion","required":true,"schema":{"type":"string","enum":["mainnet01"]}},"apiVersion":{"description":"The version of the API.","in":"path","name":"apiVersion","required":true,"schema":{"type":"number","enum":["0.0"]}},"limit":{"name":"limit","in":"query","description":"Maximum number of records that may be returned. The actual number may be\nlower.\n","required":false,"schema":{"type":"integer","minimum":0}},"next":{"name":"next","in":"query","description":"The cursor for the next page. This value can be found as value of the\n`next` property of the previous page.\n","required":false,"schema":{"type":"string"}},"chain":{"name":"chain","in":"path","description":"the id of the chain to which the request is sent","required":true,"schema":{"type":"integer","minimum":0,"example":0,"default":0}},"backupId":{"name":"backupId","in":"path","description":"The identifier of the backup being checked","required":true,"schema":{"$ref":"#/components/schemas/backupId"}},"minheight":{"name":"minheight","in":"query","description":"Minimum block height of the returned headers","required":false,"schema":{"type":"integer","minimum":0},"example":500000},"maxheight":{"name":"maxheight","in":"query","description":"Maximum block height of the returned headers","required":false,"schema":{"type":"integer","minimum":0},"example":500000},"payloadHash":{"name":"payloadHash","in":"path","required":true,"description":"Payload hash of a block","schema":{"$ref":"#/components/schemas/payloadHash"},"example":{"$ref":"#/components/examples/payloadHash"}},"blockHash":{"name":"blockHash","in":"path","description":"Block hash of a block","required":true,"schema":{"$ref":"#/components/schemas/blockHash"},"example":{"$ref":"#/components/examples/blockHashes"}},"blockHeight":{"name":"height","in":"query","description":"Height of a block","required":false,"schema":{"type":"integer","minimum":0},"example":3000000}},"securitySchemes":{"X-API-Key":{"type":"apiKey","name":"x-api-key","in":"header","description":"Your **API key** is used to identify your account & your plan, including the number of API calls per second and total monthly calls you have.\n\nEach key is for individual use only.\n\nIf you don't have a key already you can [Sign up for a Free Tatum account](https://co.tatum.io/signup) to get two keys (testnet and mainnet), allowing up to 5 API calls per second and 1,000,000 Credits.\n\nFor testing purposes, you can use the following key which only works inside docs and has limited functionality (e.g. you cannot create virtual accounts or notification subscriptions with it):\n* t-66a730ccccfd17001c479705-2f597d14ad7543f289a03418\n\nFor more details on limits and plans, [click here](https://docs.tatum.io/docs/plans-limits).\n"}},"schemas":{"Error400":{"properties":{"errorCode":{"example":"validation.failed","description":"validation.failed","type":"string"},"message":{"example":"Request validation failed. Please see data for additional information.","description":"Request validation failed. Please see data for additional information.","type":"string"},"statusCode":{"example":400,"description":"400","type":"number"},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request","example":{"property":12345}},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","example":12345},"property":{"type":"string","description":"Property name of the target object which validation is wrong","example":"property1"},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.","example":{"min":"property1 must not be less than 50000"}}}}}},"required":["errorCode","message","statusCode","data"],"type":"object"},"Error401Invalid":{"properties":{"errorCode":{"example":"subscription.invalid","description":"subscription.invalid","type":"string"},"message":{"example":"Unable to find valid subscription for '${apiKey}'","description":"Unable to find valid subscription for '${apiKey}'","type":"string"},"statusCode":{"example":401,"description":"401","type":"number"}},"required":["errorCode","message","statusCode"],"type":"object"},"Error401NotActive":{"properties":{"errorCode":{"example":"subscription.not.active","description":"subscription.not.active","type":"string"},"message":{"example":"Subscription not active anymore.","description":"Subscription not active anymore.","type":"string"},"statusCode":{"example":401,"description":"401","type":"number"}},"required":["errorCode","message","statusCode"],"type":"object"},"Error403":{"properties":{"message":{"example":"Forbidden","description":"Forbidden","type":"string"},"statusCode":{"example":403,"description":"403","type":"number"}},"required":["statusCode","message"],"type":"object"},"Error401":{"properties":{"message":{"example":"Unauthorized","description":"Unauthorized","type":"string"},"statusCode":{"example":401,"description":"401","type":"number"}},"required":["statusCode","message"],"type":"object"},"Error500":{"properties":{"message":{"example":"Internal server error","description":"Internal server error","type":"string"},"statusCode":{"example":500,"description":"500","type":"number"}},"required":["statusCode","message"],"type":"object"},"NodeRpcPutChains":{"type":"string","example":"algorand-testnet-algod","enum":["algorand-mainnet-algod","algorand-mainnet-indexer","algorand-testnet-algod","algorand-testnet-indexer","bnb-mainnet","bnb-testnet","egld-mainnet","egld-testnet","stellar-mainnet","stellar-testnet","ton-mainnet","ton-testnet"]},"NodeRpcGetChains":{"type":"string","example":"algorand-testnet-algod","enum":["algorand-mainnet-algod","algorand-mainnet-indexer","algorand-testnet-algod","algorand-testnet-indexer","bnb-mainnet","bnb-testnet","egld-mainnet","egld-testnet","flow-mainnet","flow-testnet","iota-mainnet","iota-testnet","kadena-mainnet","kadena-testnet","lisk-mainnet","lisk-testnet","stellar-mainnet","stellar-testnet","tezos-mainnet","tezos-testnet","tron-mainnet","tron-testnet","ton-mainnet","ton-testnet"]},"NodeRpcPostChains":{"type":"string","example":"ethereum-mainnet","enum":["algorand-mainnet-algod","algorand-mainnet-indexer","algorand-testnet-algod","algorand-testnet-indexer","arb-nova-mainnet","arb-one-mainnet","arb-testnet","aurora-mainnet","aurora-testnet","avax-mainnet","avax-p-mainnet","avax-p-testnet","avax-testnet","avax-x-mainnet","avax-x-testnet","base-mainnet","base-sepolia","bch-mainnet","bch-mainnet-rostrum","bch-testnet-rostrum","bch-testnet","bnb-mainnet","bnb-testnet","bsc-mainnet","bsc-testnet","bitcoin-mainnet","bitcoin-mainnet-electrs","bitcoin-testnet-electrs","bitcoin-testnet","cardano-mainnet","cardano-preprod","casper-mainnet","celo-mainnet","celo-testnet","chiliz-mainnet","chiliz-testnet","cosmos-mainnet","cosmos-testnet","cro-mainnet","cro-testnet","doge-mainnet","doge-testnet","dot-mainnet","dot-testnet","egld-mainnet","egld-testnet","eos-mainnet","eos-testnet","eon-mainnet","eon-testnet","ethereum-classic-mainnet","ethereum-classic-testnet","ethereum-holesky","ethereum-mainnet","ethereum-sepolia","fantom-mainnet","fantom-testnet","flare-coston","flare-coston2","flare-mainnet","flare-songbird","flow-mainnet","flow-testnet","gno-mainnet","gno-testnet","haqq-mainnet","haqq-testnet","iota-mainnet","iota-testnet","kadena-mainnet","kadena-testnet","klaytn-baobab","klaytn-cypress","ksm-mainnet","ksm-testnet","kcs-mainnet","kcs-testnet","lisk-mainnet","lisk-testnet","litecoin-core-mainnet","litecoin-core-testnet","near-mainnet","near-testnet","oasis-mainnet","oasis-testnet","one-mainnet-s0","one-testnet-s0","optimism-mainnet","optimism-testnet","palm-mainnet","palm-testnet","polygon-amoy","polygon-mainnet","ripple-mainnet","ripple-testnet","rsk-mainnet","rsk-testnet","solana-devnet","solana-mainnet","stellar-mainnet","stellar-testnet","tezos-mainnet","tezos-testnet","ton-mainnet","ton-testnet","tron-mainnet","tron-testnet","vechain-mainnet","vechain-testnet","xdc-mainnet","xdc-testnet","zcash-mainnet","zcash-testnet","zilliqa-mainnet","zilliqa-testnet","zksync-mainnet","zksync-testnet"]},"posixTimestamp":{"title":"POSIX Timestamp","type":"integer","description":"Seconds since POSIX epoch","example":1619108524,"minimum":0},"posixTimestampMicro":{"title":"POSIX Timestamp in Microseconds","type":"integer","description":"Microseconds since POSIX epoch","example":1602382624629329,"minimum":0},"chainwebVersion":{"title":"Chainweb Version","description":"The version of the Chainweb network","enum":["mainnet01"]},"chainId":{"title":"Chain ID","description":"A Chainweb chain ID. In Kadena Chainweb chains are named by numbers\nstarting form 0. Valid values depend on the current graph at the\nrespective block height of the chainweb version.\n","type":"integer","minimum":0,"example":0},"hostAddress":{"title":"Host Address","description":"Host address containing IPv4 and port","type":"string","pattern":"^\\d{4}.\\d{4}.\\d{4}.\\d{4}:\\d+$","example":"10.36.1.3:42988"},"signedTxText":{"title":"Signed Transaction Text","type":"string","description":"Text of a JSON encoded signed Pact transaction","example":{"$ref":"#/components/examples/signedTxText"}},"requestKey":{"title":"Request Key","type":"string","description":"Base64Url-encoded, request key of a Pact transaction","pattern":"^[a-zA-Z0-9_-]{43}$","minLength":43,"maxLength":43,"example":"y3aWL72-3wAy7vL9wcegGXnstH0lHi-q-cfxkhD5JCw"},"sha256Hash":{"title":"SHA256 Hash","type":"string","description":"Base64Url (without padding) encoded SHA256 hash","pattern":"^[a-zA-Z0-9_-]{43}$","minLength":43,"maxLength":43,"example":"y3aWL72-3wAy7vL9wcegGXnstH0lHi-q-cfxkhD5JCw"},"blockHash":{"title":"Block Hash","description":"Base64Url (without padding) encoded block hash","example":"QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH7","allOf":[{"$ref":"#/components/schemas/sha256Hash"}]},"payloadHash":{"title":"Block Payload Hash","description":"Base64Url (without padding) encoded block payload hash","example":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA","allOf":[{"$ref":"#/components/schemas/sha256Hash"}]},"blockHeight":{"title":"Block Height","description":"The height of a block is the number of its predecessors in the block chain\n","type":"integer","minimum":0,"example":1000000},"blockWeight":{"title":"Block Weight","description":"The POW weight of a block is the sum of the difficulties of the block\nand of all of its ancestors. The difficulty of a block is the maximum\ndifficulty divided by the target.\n\nIt represented as the base64Url (without padding) 256 bit little endian\nencoding of the numerical value.\n","type":"string","pattern":"^[a-zA-Z0-9_-]{43}$","minLength":43,"maxLength":43,"example":"iil_D0t2MGqjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"},"target":{"title":"PoW Target","description":"The PoW target of a block represented as the base64Url (without\npadding) 256 bit little endian encoding of the numerical value.\n","type":"string","pattern":"^[a-zA-Z0-9_-]{43}$","minLength":43,"maxLength":43,"example":"2uMCnB4lWsErj9w1C1vAp1sHYd-sABf3kgcAAAAAAAA"},"nonce":{"title":"PoW Nonce","description":"PoW nonce of the block. This is computed by the miner such that the\nblock hash is smaller than the target.\n","type":"string","pattern":"[0-9]+","minLength":1},"base64Header":{"title":"Base64Url Block Header","description":"Base64Url (without padding) encoded binary block header","type":"string","pattern":"[a-zA-Z0-9_-]+","example":{"value":{"$ref":"#/components/examples/base64HeaderPage/value/items/0"}}},"backupStatus":{"title":"Backup job status","type":"string","pattern":"backup-done|backup-in-progress|backup-failed"},"backupId":{"title":"Backup job identifier","description":"Textual backup job identifier","type":"string","pattern":"[a-zA-Z0-9_-]+","example":1648665437000},"binaryHeader":{"title":"Binary Block Header","description":"Binary representation of a block header","type":"string","minLength":318,"maxLength":318},"blockHeader":{"title":"Block Header","description":"JSON Encoded Block Header","required":["creationTime","parent","height","hash","chainId","weight","featureFlags","epochStart","adjacents","payloadHash","chainwebVersion","target","nonce"],"example":{"value":{"$ref":"#/components/examples/blockHeaderPage/value/items/0"}},"properties":{"creationTime":{"$ref":"#/components/schemas/posixTimestampMicro"},"parent":{"$ref":"#/components/schemas/blockHash"},"height":{"$ref":"#/components/schemas/blockHeight"},"hash":{"$ref":"#/components/schemas/blockHash"},"chainId":{"$ref":"#/components/schemas/chainId"},"weight":{"$ref":"#/components/schemas/blockWeight"},"featureFlags":{"type":"integer","description":"A reserved value that must be 0."},"epochStart":{"$ref":"#/components/schemas/posixTimestampMicro"},"adjacents":{"description":"The block hashes of the adjacent parents of the block. This is\nrepresented as an associative array that maps the adjancent chain\nids to the respective block hash.\n","type":"object","additionalProperties":{"$ref":"#/components/schemas/blockHash"}},"payloadHash":{"$ref":"#/components/schemas/payloadHash"},"chainwebVersion":{"$ref":"#/components/schemas/chainwebVersion"},"target":{"$ref":"#/components/schemas/target"},"nonce":{"$ref":"#/components/schemas/nonce"}}},"payload":{"title":"Block Payload","description":"Payload of a Block including the Merkle roots for transactions and\ntransaction outputs.\n","required":["transactions","minerData","transactionsHash","outputsHash","payloadHash"],"example":{"value":{"$ref":"#/components/examples/payloads/value/1"}},"properties":{"transactions":{"type":"array","description":"Array of base64Url (without padding) encoded JSON texts of signed Pact transactions","items":{"type":"string","pattern":"[a-zA-Z0-9_-]+","description":"Base64Url (without padding) encoded JSON text of a signed Pact transaction"}},"minerData":{"type":"string","pattern":"[a-zA-Z0-9_-]+","description":"Base64Url (without padding) encoded JSON text of the miner data of the payload"},"transactionsHash":{"$ref":"#/components/schemas/sha256Hash"},"outputsHash":{"$ref":"#/components/schemas/sha256Hash"},"payloadHash":{"$ref":"#/components/schemas/payloadHash"}}},"payloadWithOutputs":{"title":"Block Payload With Outputs","description":"Payload with outputs of a Block including the Merkle roots for\ntransactions and transaction outputs\n","required":["transactions","minerData","transactionsHash","outputsHash","payloadHash","coinbase"],"example":{"$ref":"#/components/examples/emptyPayload"},"properties":{"transactions":{"type":"array","description":"Array of pairs of transactions and their outputs.\nSigned Pact transactions and outputs are base64Url-encoded without padding.\n","items":{"type":"array","minItems":2,"maxItems":2,"items":{"anyOf":[{"type":"string","pattern":"[a-zA-Z0-9_-]+","description":"Base64Url (without padding) encoded JSON text of a signed Pact transaction"},{"type":"string","pattern":"[a-zA-Z0-9_-]+","description":"Base64Url (without padding) encoded JSON text of a transaction output"}]}}},"minerData":{"type":"string","pattern":"[a-zA-Z0-9_-]+","description":"Base64Url (without padding) encoded JSON text of the miner data of the payload"},"transactionsHash":{"$ref":"#/components/schemas/sha256Hash"},"outputsHash":{"$ref":"#/components/schemas/sha256Hash"},"payloadHash":{"$ref":"#/components/schemas/payloadHash"},"coinbase":{"type":"string","pattern":"[a-zA-Z0-9_-]+","description":"Base64Url (without padding) encoded JSON text of coinbase output of the block"}}},"block":{"title":"Full block","description":"A block header and payload\n","required":["header","payloadWithOutputs"],"example":{"$ref":"#/components/examples/blockPage/value/items/0"},"properties":{"header":{"$ref":"#/components/schemas/blockHeader"},"payloadWithOutputs":{"$ref":"#/components/schemas/payloadWithOutputs"}}},"peer":{"title":"Peer","description":"Peer info object","required":["id","address"],"example":{"$ref":"#/components/examples/peers/value/items/0"},"properties":{"id":{"description":"The base64Url (without padding) encoded SHA256 fingerprint of the\nSSL certificate of the node. This can be null only if the node uses\nan official CA signed certificate\n","type":"string","nullable":true,"pattern":"[a-zA-Z0-9_-]{43}"},"address":{"required":["hostname","port"],"properties":{"hostname":{"description":"A domain name or IP address. This must be a domain name only if\nthe respective node is using a valid CA signed SSL certificate.\n","type":"string","oneOf":[{"format":"hostname"},{"format":"ipv4"},{"format":"ipv6"}]},"port":{"description":"Port number","type":"integer","minimum":1,"maximum":65535}}}}},"cut":{"title":"Cut","description":"Cut datastruction of the chainweb API","required":["height","weight","hashes"],"example":{"$ref":"#/components/examples/cut"},"properties":{"origin":{"$ref":"#/components/schemas/peer"},"height":{"description":"The cut height is the sum of the height of all blocks of the cut.\nUsage of this value should be avoided, because its semantics may\nchange in the future\n","type":"integer","minimum":0},"weight":{"description":"The sum of the weights of all blocks in the cut","type":"string","pattern":"[a-zA-Z0-9_-]{43}"},"hashes":{"type":"object","required":["0","1","2","3","4","5","6","7","8","9","10"],"description":"An object that maps chain Ids to their respective block hash and\nblock height\n","additionalProperties":{"$ref":"#/components/schemas/hashWithBlockHeight"}},"instance":{"type":"string"},"id":{"type":"string"}}},"hashWithBlockHeight":{"title":"Hash with block height","description":"A block hash and the height of that block","required":["hash","height"],"example":{"height":1539924,"hash":"uP-pHW4QKrV9fN1mlDGwKuaiIDlJW7xYSj1nW53EHM4"},"type":"object","properties":{"hash":{"type":"string","pattern":"[a-zA-Z0-9_-]{43}"},"height":{"type":"integer","minimum":0}}},"nodeInfo":{"title":"Chainweb Node Info","description":"General information about a chainweb node","required":["nodeNumberOfChains","nodeApiVersion","nodeChains","nodeVersion","nodeGraphHistory"],"example":{"$ref":"#/components/examples/info"},"properties":{"nodeNumberOfChains":{"type":"integer","minimum":10,"example":20},"nodeApiVersion":{"type":"string","example":"0.0"},"nodeChains":{"type":"array","items":{"description":"Chain identifiers","type":"string"},"minItems":0,"example":["0"]},"nodeVersion":{"type":"string","enum":["mainnet01"],"example":"mainnet01"},"nodeGraphHistory":{"description":"Array of all chain graphs indexed by the height of the first block with the repective\ngraph. Graphs are encoded as adjacency lists.\n","type":"array","uniqueItems":true,"minItems":1,"items":{"description":"A pair consisting of the height of the first block of a chain graph and the adjacency list of the graph.","type":"array","minItems":2,"maxItems":2,"items":{"oneOf":[{"description":"height of the first block of the graph","type":"integer","minimum":0},{"description":"adjacency list encoding of the chain graph.","type":"array","items":{"description":"A pair of the chain identifier and the list of chains adjacent to it.","minItems":2,"maxItems":2,"type":"array","items":{"oneOf":[{"description":"a chain identifier","type":"integer","minimum":0},{"description":"an adjacency list for that chain","type":"array","minItems":0,"items":{"type":"integer","minimum":0}}]}}}]}}}}},"page":{"title":"Page","description":"Page of a collection of items","required":["next","limit","items"],"example":{"$ref":"#/components/examples/base64HeaderPage"},"properties":{"limit":{"description":"The number of items in the page. This number can be smaller but\nnever be larger than the number of requested items.\n","type":"integer","minimum":0,"items":{"description":"Items of the returned collection","type":"array"}},"next":{"description":"A cursor that can be used to query the next page. It should be used\nliterally as value for the `next` parameter in a follow-up request.\n","oneOf":[{"type":"null"},{"type":"string"}],"nullable":true,"pattern":"^(inclusive|exclusive):.*$"},"items":{"description":"The items in the page.\n"}}},"miningUpdateEventStream":{"title":"Mining Update Events","description":"A stream of server-sent events. **This is not a JSON array**.\nEvents are separated by empty lines (`\\n\\n`). Each event\nconsists of a single line:\n\n  event:New Cut\n","type":"array","items":{"title":"New Cut Event","description":"A `New Cut` event. **This is not a JSON object**.\nEach event consists of a single `event` propert.\n","properties":{"event":{"type":"string","enum":["New Cut"]}}},"example":"event:New Cut\n\nevent:New Cut\n\nevent:New Cut"},"minerInfo":{"title":"Miner Info","properties":{"account":{"title":"Account Name","description":"Miner account name. Usually this is the same as the public key.","type":"string","example":"f880a433d6e2a13a32b6169030f56245efdd8c1b8a5027e9ce98a88e886bef27"},"predicate":{"title":"Key Predicate","enum":["keys-all","keys-any"],"example":"keys-all","description":"key predicate. For a single key this is usually `keys-all`."},"public-keys":{"type":"array","items":{"title":"Miner Public Key","type":"string","example":"f880a433d6e2a13a32b6169030f56245efdd8c1b8a5027e9ce98a88e886bef27"}}},"example":{"account":"miner","predicate":"keys-all","public-keys":["f880a433d6e2a13a32b6169030f56245efdd8c1b8a5027e9ce98a88e886bef27"]}},"nodeConfig":{"title":"Node Configuration","description":"The configuration of a node. Private information regarding certificates\nand local networks are removed. The schema is subject to change and not\npart of the stable API.\n","example":{"$ref":"#/components/examples/nodeConfig"}},"payloadHashArray":{"title":"Payload hash array","type":"array","items":{"$ref":"#/components/schemas/payloadHash"},"examples":{"two":{"value":{"$ref":"#/components/examples/payloadHashes","summary":"Query two payloads"}},"empty":{"value":[],"summary":"Query nothing"}}},"payloadBatchBody":{"title":"Payload batch query","properties":{"heights":{"title":"Heights","description":"List of block heights","type":"array","items":{"type":"integer"}},"hashes":{"title":"Hashes","description":"List of payload hashes","type":"array","items":{"$ref":"#/components/schemas/payloadHash"}}}},"command":{"title":"Pact Command","tags":["model-command"],"description":"Represents a single blockchain Pact transaction.","type":"object","required":["cmd","hash","sigs"],"properties":{"cmd":{"description":"Stringified JSON `payload` object. Canonic non-malleable signed transaction data.\n","type":"string"},"hash":{"description":"Unpadded Base64URL of Blake2s-256 hash of the `cmd` field value. Serves as a command\n`requestKey` since each transaction must be unique.\n","type":"string","contentEncoding":"base64url","example":"H6XjdPHzMai2HLa3_yVkXfkFYMgA0bGfsB0kOsHAMuI"},"sigs":{"description":"List of signatures corresponding one-to-one with `signers` array in the payload.\nMust be present but can be an empty array for unsigned commands.\n","type":"array","minItems":0,"items":{"properties":{"sig":{"anyOf":[{"type":"string","contentEncoding":"base16","description":"Base16-encoded Ed25519 signature of `hash` field\nfor corresponding signer in payload.\n","example":"8d452109cc0439234c093b5e204a7428bc0a54f22704402492e027aaa9375a34c910d8a468a12746d0d29e9353f4a3fbebe920d63bcc7963853995db015d060f"},{"$ref":"#/components/schemas/webauthn-sig-string"}]}}},"example":[]}}},"webauthn-sig-string":{"type":"string","description":"Stringified JSON WebAuthn signature object.\n\nFor a WebAuthn signature string to be valid, its corresponding `Signer`\nmust have `scheme: \"WebAuthn\"`.\n\nThe schema of a Pact WebAuthn signature object resembles that of\nthe WebAuthn standard `CredentialResponse`.\nIts fields can be computed from the `response` field of a WebAuthn\n`CredentialResponse`. For example, to construct a WebAuthn signature\nstring in the browser:\n\n```\nconst resp = await navigator.credentials.get();\nconst auth = resp.response.authenticatorData();\nconst sig = resp.response.signature;\nJSON.stringify({\n  authenticatorData: base64url_to_base64(auth),\n  clientDataJSON: resp.response.clientDataJSON,\n  signature: base64url_to_base64(sig)\n})\n```\n"},"pactPayload":{"description":"Pact Command Payloads are encoded as strings in Pact commands, and contain all\nnon-malleable data for a transaction.\n","tags":["model-payload"],"type":"object","required":["payload","meta","signers","networkId","nonce"],"properties":{"payload":{"oneOf":[{"title":"Exec Message","description":"Standard pact execution.","properties":{"code":{"type":"string","description":"Executable pact code."},"data":{"description":"Arbitrary JSON to be accessed via `read-msg`, `read-integer` et al in Pact code."}}},{"title":"Continuation Message","description":"Continuation of a previous transaction defpact.","properties":{"pactId":{"type":"string","description":"ID of pact running previous step."},"step":{"type":"number","description":"Step in defpact to execute."},"rollback":{"type":"boolean","description":"Whether to execute a specified rollback on this step."},"data":{"description":"Arbitrary JSON to be accessed via `read-msg`, `read-integer` et al in Pact code."},"proof":{"type":"string","contentEncoding":"base64url","description":"Backend-specific data for continuing a cross-chain proof."}}}]},"meta":{"oneOf":[{"title":"Public metadata (Chainweb)","description":"Chainweb/public command metadata.","required":["chainId","sender","gasLimit","gasPrice","ttl","creationTime"],"properties":{"chainId":{"type":"string","description":"Platform-specific chain identifier. For chainweb this is the stringified chain number."},"sender":{"type":"string","description":"Indicates gas-paying account."},"gasLimit":{"type":"number","minimum":1,"description":"Limits total amount of gas to be consumed."},"gasPrice":{"type":"number","description":"Specifies price per gas unit to be charged."},"ttl":{"type":"number","minimum":1,"maximum":180000,"description":"Time in seconds after creation time that transaction can be executed."},"creationTime":{"type":"number","description":"POSIX epoch sending time for transaction."}}},{"title":"Private metadata (Kuro)","description":"Metadata for Kuro endpoints, including `private`.","properties":{"address":{"description":"Private message envelope address. Required only for private messages, otherwise null.","required":["from","to"],"properties":{"from":{"type":"string","description":"Sender entity name"},"to":{"description":"Recipient entity names","type":"array","minItems":1,"items":{"type":"string","description":"Recipient entity name"}}}}}}]},"signers":{"description":"List of signers, corresponding with list of signatures in outer command.","type":"array","items":{"title":"Signer","required":["pubKey"],"properties":{"pubKey":{"type":"string","description":"Public key image. Pact default is base16 ED25519 encoding."},"address":{"type":"string","description":"Address, if any. Pact default expects this to match pubKey."},"scheme":{"type":"string","description":"Signer scheme. Default is ED25519. When the Signer is\n`WebAuthn`, the corresponding `sig` must be a WebAuthn\nsignature string.\n","enum":["ED25519","WebAuthn"]},"clist":{"description":"List of capabilities associated with/installed by this signer.","properties":{"name":{"type":"string","description":"Fully-qualified capability name."},"args":{"type":"array","items":{"$ref":"#/components/schemas/pact-value"}}}}}}},"networkId":{"description":"Backend-specific identifier of target network.","type":"string","enum":["mainnet01"]},"nonce":{"description":"Arbitrary user-supplied value.","type":"string"}}},"spv-object":{"description":"Object consisting of data required to fetch proof of a cross chain transaction\n","type":"object","required":["requestKey","targetChainId"],"properties":{"requestKey":{"type":"string","description":"Request Key of an initiated cross chain transaction at the source chain.","example":"7af34f24d55d2fcf5de6fccfeeb837698ebff4598303237c64348a47806c8646"},"targetChainId":{"type":"string","description":"Target chain id of the cross chain transaction.","example":"1"}}},"preflight-result":{"title":"Preflight /local result","tags":["model-preflight-result"],"description":"The result of attempting to execute preflight simulation for a single well-formed Pact command.","type":"object","required":["preflightResult","preflightWarnings"],"properties":{"preflightResult":{"$ref":"#/components/schemas/command-result"},"preflightWarnings":{"description":"A list of warnings associated with deprecated features in upcoming pact releases.","type":"array","items":{"type":"string"}}}},"command-result":{"title":"Command Result","tags":["model-command-result"],"description":"The result of attempting to execute a single well-formed Pact command.","type":"object","required":["reqKey","result","logs","metaData","gas"],"properties":{"reqKey":{"$ref":"#/components/schemas/request-key"},"result":{"oneOf":[{"title":"Success","type":"object","properties":{"status":{"type":"string","enum":["success"]},"data":{"$ref":"#/components/schemas/pact-value"}}},{"title":"Failure","type":"object","properties":{"status":{"type":"string","enum":["failure"]},"error":{"$ref":"#/components/schemas/pact-error"}}}]},"txId":{"type":"number","description":"Database-internal transaction tracking ID."},"logs":{"type":"string","description":"Backend-specific value providing image of database logs."},"metaData":{"properties":{"blockTime":{"type":"number","description":"POSIX time of block"},"prevBlockHash":{"type":"string","description":"Parent Block hash of containing block."},"blockHash":{"type":"string","description":"Block hash of containing block."},"blockHeight":{"type":"number","description":"Block height of containing block."},"publicMeta":{"type":"object","description":"Public metadata.","properties":{"creationTime":{"type":"number","description":"POSIX time the command was created"},"ttl":{"type":"number","description":"Transaction time to live"},"gasLimit":{"type":"number","description":"The transaction's gas limit"},"chainId":{"type":"string","description":"Chain identifier"},"gasPrice":{"type":"number","description":"The price of each unit of gas in KDA"},"sender":{"type":"string"}}}}},"events":{"type":"array","items":{"$ref":"#/components/schemas/event"}},"continuation":{"description":"Describes result of a defpact execution.","properties":{"pactId":{"type":"string","description":"Identifies this defpact execution. On first step generally matches request key."},"step":{"type":"number","description":"Identifies which step executed in defpact."},"stepCount":{"type":"number","description":"Total number of steps in pact."},"executed":{"type":"boolean","description":"optional value for private pacts, indicates if step was skipped."},"stepHasRollback":{"type":"boolean","description":"indicates if pact step has rollback."},"continuation":{"description":"Closure describing executed pact.","properties":{"def":{"type":"string","description":"Fully-qualified defpact name."},"args":{"type":"array","items":{"$ref":"#/components/schemas/pact-value"}}}},"yield":{"description":"Value yielded during pact step, optionally indicating cross-chain execution.","properties":{"data":{"type":"object","description":"Pact value object containing yielded data.","additionalProperties":{"$ref":"#/components/schemas/pact-value"}},"source":{"type":"string","description":"Source chain ID."},"provenance":{"properties":{"targetChainId":{"type":"string","description":"Chain ID of target chain for next step."},"moduleHash":{"description":"Hash of module executing defpact.","type":"string"}}}}}}},"gas":{"type":"number"}}},"pact-value":{"description":"Pact value compound type.","tags":["model-pact-value"],"anyOf":[{"title":"String","description":"Pact strings encode directly to JSON strings.","type":"string"},{"title":"Decimal","description":"There are two alternative JSON representations for Decimal.","oneOf":[{"title":"Number","description":"JSON numbers can be used whenever the precision is adequate\n","type":"number"},{"title":"Object","description":"When JSON number precision is not enough, you can use an object with the number's decimal representation as a string\n","type":"object","required":["decimal"],"properties":{"decimal":{"type":"string","description":"String representation of number to avoid rounding error","example":"1.23498218000001"}}}]},{"title":"Integer","description":"There are two alternative JSON representations for Integer.","type":"object","required":["int"],"properties":{"int":{"oneOf":[{"title":"Number","description":"JSON numbers are rounded to integer values.\n","type":"number","example":12345},{"title":"String","description":"When JSON number precision is not enough, you can specify the integer as a string\n","type":"string","example":"123456789"}]}}},{"title":"Boolean","description":"JSON booleans encode to Pact booleans.","type":"boolean"},{"title":"Object","type":"object","description":"JSON objects not matching other Pact Value schemas become Pact objects.","additionalProperties":{"$ref":"#/components/schemas/pact-value"}},{"title":"Time","type":"object","required":["time"],"properties":{"time":{"type":"string","description":"Literal time value using the UTC time format.","example":"1970-01-01T00:00:00Z"}}},{"title":"List","description":"JSON lists become Pact lists.","type":"array","items":{"$ref":"#/components/schemas/pact-value"}},{"title":"Module Reference","description":"Special pact value to directly reference a module or interface.","type":"object","required":["refName","refSpec"],"properties":{"refName":{"type":"object","required":["name","namespace"],"description":"The module name","properties":{"name":{"type":"string","description":"Bare name of a module"},"namespace":{"type":"string","nullable":true,"description":"Namespace of the indicated module"}}},"refSpec":{"type":"array","description":"The module names to substitute for any references present in the module code","items":{"type":"object","required":["name","namespace"],"properties":{"name":{"type":"string","description":"Bare name of a module"},"namespace":{"type":"string","nullable":true,"description":"Namespace of the indicated module"}}}}}},{"title":"Guard","description":"Special pact value for guard types.","type":"object","oneOf":[{"title":"Keyset","description":"A keyset forms a rule made from a set of key/address values and a predicate function.\nWhen enforced, transaction signer list is evaluated against keyset.\n","required":["keys","pred"],"properties":{"keys":{"type":"array","description":"Set of public key/address values. Native pact public keys are ED25519 in base16 encoding.","items":{"type":"string"}},"pred":{"type":"string","description":"A pact function name. Built-in values are `keys-all` (match all keys in set),\n`keys-any` (match at least one), and `keys-2` (match at least 2).\nCustom functions have a fully-qualified name and\nmust accept two integer arguments `count` (number of keys in set) and `matched`\n(number of set keys found in transaction set).\n"}}},{"title":"Keyset Reference","description":"Refers to a keyset in the Pact environment/database installed with `define-keyset`.","required":["keysetref"],"properties":{"keysetref":{"type":"string","description":"Installed keyset name."}}},{"title":"User Guard","description":"Closure of call to \"guard function\" which is a boolean user function with arguments.\n","required":["fun","args"],"properties":{"fun":{"description":"Fully-qualified guard function name.","type":"string"},"args":{"description":"Argument values to the guard function.","type":"array","items":{"$ref":"#/components/schemas/pact-value"}}}},{"title":"Module Guard","type":"object","description":"Autonomous guard that only allows module code access, or requires module admin.\n","required":["moduleName","name"],"properties":{"moduleName":{"required":["name","namespace"],"properties":{"name":{"type":"string","description":"module bare name"},"namespace":{"type":"string","description":"module namespace"}}},"name":{"type":"string","description":"Distinguishing/informative name for module guard."}}},{"title":"Pact Guard","type":"object","description":"Autonomous guard that only allows a particular pact execution, referenced by ID, to pass.\nTwo executions of the same defpact code result in distinct pact IDs. A pact guard\ncreated inside of this execution will only pass when running that particular pact.\n","required":["pactId","name"],"properties":{"pactId":{"description":"Defpact execution ID.","type":"string"},"name":{"type":"string","description":"Distinguishing/informative name for pact guard."}}}]}]},"event":{"description":"Pact output event.","type":"object","properties":{"name":{"type":"string","description":"Event defcap name."},"module":{"type":"object","description":"Qualified module name of event defcap.","required":["name"],"properties":{"name":{"type":"string","description":"module bare name"},"namespace":{"type":"string","description":"module namespace"}}},"params":{"type":"array","items":{"$ref":"#/components/schemas/pact-value"}},"moduleHash":{"type":"string","description":"Hash of emitting module."}}},"pact-error":{"description":"Verbose object describing failed execution.\n","type":"object","required":["message"],"properties":{"message":{"type":"string","description":"Descriptive error text."},"callStack":{"type":"array","items":{"type":"string"}},"info":{"type":"string"},"type":{"type":"string"}}},"request-key":{"title":"Request Key","type":"string","description":"Unique ID of a pact transaction consisting of its hash.","pattern":"^[a-zA-Z0-9_-]{43}$","contentEncoding":"base64url","minLength":43,"maxLength":43,"example":"y3aWL72-3wAy7vL9wcegGXnstH0lHi-q-cfxkhD5JCw"},"validation-failure":{"title":"Validation Failure","type":"string","description":"Failure message of unexecuted command due to an invalid gas payer, meta, or other environments."},"spv-proof":{"title":"SPV Proof","type":"string","description":"Backend-specific data for continuing a cross-chain proof.","example":"\"eyJzdWJqZWN0Ijp7ImlucHV0IjoiQUJSN0ltZGhjeUk2TlRRMExDSnlaWE4xYkhRaU9uc2ljM1JoZEhWeklqb2ljM1ZqWTJWemN5SXNJbVJoZEdFaU9pSlhjbWwwWlNCemRXTmpaV1ZrWldRaWZTd2ljbVZ4UzJWNUlqb2lZa0Y0TjNOd1dqZFdUbUpZWTNocVZFUkNTamt5U21SdlUyVlFjWGx0U25KNWNXOUNhMWcyUkVoYWJ5SXNJbXh2WjNNaU9pSnBRVTF4Y0ZwaVUxSkRaR2hQUzA1YVVYZzFTMHBOTFZOUlNGRlZXRzF4UlZoUlRIRkNUVVpSVFVkSklpd2laWFpsYm5SeklqcGJleUp3WVhKaGJYTWlPbHNpZEdWemRDMXpaVzVrWlhJaUxDSXpaRGxsT1dZeFptSTBZemt6TnpneU5qWmpZV1JrTmpObE4yRTBOMkkzWVRZME5UTmlaVGsyTVdSaU1ETTNNMlkxWXpWbVlUUXdZV05sWlRaaVpHVm1JaXd4WFN3aWJtRnRaU0k2SWxSU1FVNVRSa1ZTSWl3aWJXOWtkV3hsSWpwN0ltNWhiV1Z6Y0dGalpTSTZiblZzYkN3aWJtRnRaU0k2SW1OdmFXNGlmU3dpYlc5a2RXeGxTR0Z6YUNJNkluVjBYMHBmV2s1cmIzbGhVRlZGU21ocGQxWmxWMjVyVTFGdU9VcFVPWE5SUTFkTFpHcHFWbFp5VjI4aWZWMHNJbTFsZEdGRVlYUmhJanB1ZFd4c0xDSmpiMjUwYVc1MVlYUnBiMjRpT201MWJHd3NJblI0U1dRaU9qRXhOams1TkRaOSJ9LCJhbGdvcml0aG0iOiJTSEE1MTJ0XzI1NiIsIm9iamVjdCI6IkFBQUFFQUFBQUFBQUFBQUJBUGhpTkRUdEFHT0l4dWE4OTFYUGU0NVFRS2QtTFdOekNpc0JDeHlmeDliQ0FPUkRnUUR2RFRrWmdOTzZ2M1ZpbU1wZ2ZGd2kyQm1mZ29jRVdwVmxRRW9EQWVoT1JPeFdBckJidXpldnZLTUdQZTB1RlVfUE8yejM3VC0tY0thdDZ1d3pBVm9DbFVrU1lXaXRDODF0TERVd2JYYVFWRTdnZFp1ckN6d0RiZUlBdlpBcUFKVThWZHZkMS1nYmo2UEtIVXdWQm00UWRvNl9YUkpYdHdKTGE4a0N3OWJhQWQtbXRubnlsUkczOC1WcTZzZmlZWm0xd2tKejhZcU5ZT2gwbVZCTktFR1VBTkdQWlB4NGFhMWFDdTJ1Ty1VRkJXLWxLbFdFeFU0a2JjMkszOFZCT21ZeEFDakxpdjMwazdBaGdwVXBCWUIxcEYwWFRqTmU4d3k4aHQta2FveFFKbTZpQVlXSkFYZlpXZERNdkQ3Z1UydUItWFdTVUh3bVpvM3NzV0stRzh1OTIxempBTzllbVBkOFJRVk5jOWZWZWJHN0lMb2lqVDlYMm9Db1p2Q00xQ29yR3laUUFTLVVZd3c4dkJ1bEVVYXlxaHZEQUFreUthbHk1TXk1bzJYVXZpZlZsNkg5QUM5ZXZsczVxMXh2bGhQbE9UWnJZNVB2SDNFbDd3dTBZTTJQYmZzaE1lUGFBUFpZRFJoWncyXzBVM1hIZllQbmJ6QlQ4bkc3a2gtR09kRTBTcFFCNEVOQ0FVWGEzcGVoMnhVd2dCVHd5WFVvc3RDRjNqQ21Scm9ZRGlEUTVGTGhYNkVQQUdlMUF2cFhJazZFM2tpdnUxY1N4aVFYV0hUcW1pdEUwLTVYaVpjNU4zQ3ZBS1dMNmM1RDdQSV84aW0zbG04cWhtZl84UXp3d2ZFcVpXQXZoQ0dWc1VVdCIsImNoYWluIjoxfQ\"\n"}},"requestBodies":{"requestKeyArray":{"description":"Array of request keys","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/requestKey"}},"examples":{"empty request body":{"value":[]},"singleton request body":{"value":["qx346ILpakzgbNZbE8oHqF5TZQghp-HPcV-0Ptc_n2s"]}}}}},"batchPayloadBody":{"description":"An object used to do batch payload queries, with or without heights","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/payloadHashArray"},{"$ref":"#/components/schemas/payloadBatchBody"}]}}}}},"headers":{"x-server-timestamp":{"description":"The time of the clock of the remote node","schema":{"$ref":"#/components/schemas/posixTimestamp"},"example":1618597601},"x-chainweb-node-version":{"description":"The version of the remote chainweb node","schema":{"type":"string"},"example":"2.6"},"x-peer-addr":{"description":"Host and port of the client as observed by the remote node","schema":{"$ref":"#/components/schemas/hostAddress"},"example":"10.36.1.3:42988"}},"links":{},"callbacks":{},"examples":{"blockHashes":{"value":["k0an0qEORusqQg9ZjKrxa-0Bo0-hQVYLXqWi5LHxg3k"]},"requestKeys":{"value":["qx346ILpakzgbNZbE8oHqF5TZQghp-HPcV-0Ptc_n2s"]},"signedTxText":{"value":{"hash":"y3aWL72-3wAy7vL9wcegGXnstH0lHi-q-cfxkhD5JCw","sigs":[{"sig":"8ddc06b37c496f2cadc4f7412405a80faf3ab07482ff5553b9b5fcc73d1b4121275ad5948d9b4078e553b71f8b42eaf6b24135bf2fb4d5840c16bcdde0e35e0f"}],"cmd":"{\"networkId\":\"mainnet01\",\"payload\":{\"exec\":{\"data\":{\"account-keyset\":{\"pred\":\"keys-all\",\"keys\":[\"acc28032a1bb725b7ba0a3593ab86f393894fa6659281f3dfdfee0afe48559a2\"]}},\"code\":\"(coin.transfer-create \\\"60241f51ea34e05c61fbea9d\\\" \\\"acc28032a1bb725b7ba0a3593ab86f393894fa6659281f3dfdfee0afe48559a2\\\" (read-keyset \\\"account-keyset\\\") 5007.0000)\"}},\"signers\":[{\"pubKey\":\"acc28032a1bb725b7ba0a3593ab86f393894fa6659281f3dfdfee0afe48559a2\",\"clist\":[{\"args\":[\"60241f51ea34e05c61fbea9d\",\"acc28032a1bb725b7ba0a3593ab86f393894fa6659281f3dfdfee0afe48559a2\",5007],\"name\":\"coin.TRANSFER\"},{\"args\":[],\"name\":\"coin.GAS\"}]}],\"meta\":{\"creationTime\":1618949714,\"ttl\":300,\"gasLimit\":600,\"chainId\":\"0\",\"gasPrice\":1.0e-7,\"sender\":\"acc28032a1bb725b7ba0a3593ab86f393894fa6659281f3dfdfee0afe48559a2\"},\"nonce\":\"\\\"2021-04-20T20:16:13.645Z\\\"\"}"}},"peers":{"value":{"next":"inclusive:3","items":[{"address":{"hostname":"85.238.99.91","port":30004},"id":"PRLmVUcc9AH3fyfMYiWeC4nV2i1iHwc0-aM7iAO8h18"},{"address":{"hostname":"us-w3.chainweb.com","port":443},"id":null},{"address":{"hostname":"95.111.232.151","port":30004},"id":"DguFKLFMxp12vfl1z3cQIJQlh8xOpeZuBkpJU9Y-VLo"}],"limit":3}},"blockHashPage":{"value":{"next":"inclusive:o1S4NNFhKWg8T1HEkmDvsTH9Ut9l3_qHRpp00yRKZIk","items":["k0an0qEORusqQg9ZjKrxa-0Bo0-hQVYLXqWi5LHxg3k","vhVa6Deh10RXLRf3L-MSQTYqaL-_IY_mi-v58MjP9R8"],"limit":2}},"blockHashBranchPage":{"value":{"next":"inclusive:o1S4NNFhKWg8T1HEkmDvsTH9Ut9l3_qHRpp00yRKZIk","items":["QxGCAz5AY1Y41nh1yWtgqhKhZ9pPiPRagFdIKNqBH74","RClyuyZAacwvPpmLXKbTwrIRXWeUSjiNhJVP2esH8KM"],"limit":2}},"base64HeaderBranchPage":{"value":{"next":"inclusive:u9Va7MRkDSOCm0yWpsC2w-4Z0oyEMv-BjofkHeIln6g","items":["AAAAAAAAAADX5AyHgcAFAEQpcrsmQGnMLz6Zi1ym08KyEV1nlEo4jYSVT9nrB_CjAwAFAAAA4BMlW68KbggSREOGDeH_oFFoUrpZ0zX0hM0TTdYrEAYKAAAARoxLy8ECsIIWebtW8zZsH1xfRGu4NOuSlgH4cAJLFcwPAAAAsHRn1laXo2DK2_85nOH7apQyC6Vr_gEctSElqdrCC03a4wKcHiVawSuP3DULW8CnWwdh36wAF_eSBwAAAAAAAA3PRGZVm8h4aY9cMgXAQf3QbYSNDUnFxjZnr8FwcknXAAAAAIopfw9LdjBqowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3LgXAAAAAAAFAAAAavQWLYHABQAOBvq0L1PrvEMRggM-QGNWONZ4dclrYKoSoWfaT4j0WoBXSCjagR--","AAAAAAAAAAC46tSFgcAFANxrUMH15DY-83DeKwlvDWsj4DY4Sphc5I82jCVSpSuCAwAFAAAAwdorGxUmrIkWyssvz3oHm3uqurfNd5ywiD6NHsZQEr8KAAAA750C1IKC9doZZKtqCckOF8JmIaHMhDfopNobHeJvmXMPAAAA4pgr0U_1kQxou-NIc42nICYqOgLM1Vawamal-HuhLvfa4wKcHiVawSuP3DULW8CnWwdh36wAF_eSBwAAAAAAANdqRLGXd6y6OGwShrFC7vBrIWf_TLCfaYpLnu-q7A7AAAAAAI5IadugqQ5qowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA27gXAAAAAAAFAAAAavQWLYHABQBFGVPEmhORyEQpcrsmQGnMLz6Zi1ym08KyEV1nlEo4jYSVT9nrB_Cj"],"limit":2}},"blockHeaderPage":{"value":{"next":"inclusive:o1S4NNFhKWg8T1HEkmDvsTH9Ut9l3_qHRpp00yRKZIk","items":[{"creationTime":1602382624629329,"parent":"HaXABq1PKSKlhncJk0_Mt75_lL7NS3wI627QfXZ_85k","height":1000000,"hash":"k0an0qEORusqQg9ZjKrxa-0Bo0-hQVYLXqWi5LHxg3k","chainId":0,"weight":"NQn4BGftuWAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","featureFlags":0,"epochStart":1602381443331834,"adjacents":{"5":"Mpic85rur2MYf3zli8s8bHxTFjriFoMPTr6ZPs8sjxM","10":"VBKuhU_hQmuvKlx88A5o-FH0rzNo59NsdxmOGNBQ-yc","15":"MItdqgHZxf7j6l0oE8X-G9-VyMbnQmZrtSniuRe_EJ8"},"payloadHash":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA","chainwebVersion":"mainnet01","target":"QrcsbEm-3WjyCGAGlzIEhLEN3ZMWORoyYy8AAAAAAAA","nonce":"13095611958898437"},{"creationTime":1602382678045236,"parent":"k0an0qEORusqQg9ZjKrxa-0Bo0-hQVYLXqWi5LHxg3k","height":1000001,"hash":"vhVa6Deh10RXLRf3L-MSQTYqaL-_IY_mi-v58MjP9R8","chainId":0,"weight":"bOkHN2JUv2AeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","featureFlags":0,"epochStart":1602381443331834,"adjacents":{"5":"ALcxv1ZiwwQ_QX9eOBZMbzIop6n7XtveS1FqOFwyvGM","10":"C76ElC60qXSJQCHePpzzJxsCYvvrqvmkoHPyZnex-4Q","15":"Kv0sz_rTANjoiJwMrdZFCJNFwdH0U_M5ouwMr3BXBfo"},"payloadHash":"smUiDW9jfD_0vrdt4-fXKT_lqC90RsgEGObdp3FznFY","chainwebVersion":"mainnet01","target":"QrcsbEm-3WjyCGAGlzIEhLEN3ZMWORoyYy8AAAAAAAA","nonce":"110239794631051275"}],"limit":2}},"blockPage":{"value":{"next":"inclusive:o1S4NNFhKWg8T1HEkmDvsTH9Ut9l3_qHRpp00yRKZIk","items":[{"blockHeader":{"creationTime":1602382624629329,"parent":"HaXABq1PKSKlhncJk0_Mt75_lL7NS3wI627QfXZ_85k","height":1000000,"hash":"k0an0qEORusqQg9ZjKrxa-0Bo0-hQVYLXqWi5LHxg3k","chainId":0,"weight":"NQn4BGftuWAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","featureFlags":0,"epochStart":1602381443331834,"adjacents":{"5":"Mpic85rur2MYf3zli8s8bHxTFjriFoMPTr6ZPs8sjxM","10":"VBKuhU_hQmuvKlx88A5o-FH0rzNo59NsdxmOGNBQ-yc","15":"MItdqgHZxf7j6l0oE8X-G9-VyMbnQmZrtSniuRe_EJ8"},"payloadHash":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA","chainwebVersion":"mainnet01","target":"QrcsbEm-3WjyCGAGlzIEhLEN3ZMWORoyYy8AAAAAAAA","nonce":"13095611958898437"},"payloadWithOutputs":{"transactions":[],"minerData":"eyJhY2NvdW50IjoiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCIsInByZWRpY2F0ZSI6ImtleXMtYWxsIiwicHVibGljLWtleXMiOlsiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCJdfQ","transactionsHash":"nT0j4xw2woMkdXXaopdurXIn24OG-jNMqQzUGfxV_MA","outputsHash":"4pXRrZ2K0_V0iGAxQCKrKdLjQTBZHBOQS7P-47kdnhY","payloadHash":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA","coinbase":"eyJnYXMiOjAsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6IldyaXRlIHN1Y2NlZWRlZCJ9LCJyZXFLZXkiOiJJa2hoV0VGQ2NURlFTMU5MYkdodVkwcHJNRjlOZERjMVgyeE1OMDVUTTNkSk5qSTNVV1pZV2w4NE5Xc2kiLCJsb2dzIjoiZ3Noak1kWFJrVGxKYmIxalZkQWJ6SVVDcGpQb1JBQ2pEbExzRzBXNkJEMCIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjEyNzIzNTB9"}},{"blockHeader":{"creationTime":1602382678045236,"parent":"k0an0qEORusqQg9ZjKrxa-0Bo0-hQVYLXqWi5LHxg3k","height":1000001,"hash":"vhVa6Deh10RXLRf3L-MSQTYqaL-_IY_mi-v58MjP9R8","chainId":0,"weight":"bOkHN2JUv2AeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","featureFlags":0,"epochStart":1602381443331834,"adjacents":{"5":"ALcxv1ZiwwQ_QX9eOBZMbzIop6n7XtveS1FqOFwyvGM","10":"C76ElC60qXSJQCHePpzzJxsCYvvrqvmkoHPyZnex-4Q","15":"Kv0sz_rTANjoiJwMrdZFCJNFwdH0U_M5ouwMr3BXBfo"},"payloadHash":"smUiDW9jfD_0vrdt4-fXKT_lqC90RsgEGObdp3FznFY","chainwebVersion":"mainnet01","target":"QrcsbEm-3WjyCGAGlzIEhLEN3ZMWORoyYy8AAAAAAAA","nonce":"110239794631051275"},"payloadWithOutputs":{"transactions":[["eyJoYXNoIjoibFRqWW9taEFDSEUxemphRFlvbnV6VGJmdEV1THp2SExNTUE5dzI0SFY5SSIsInNpZ3MiOlt7InNpZyI6IjE3ZDhkYmRmYjUyZWUyMmMyMTA5MGNjYzBkYzY0MzhmYjFjZjlmZWVmNmVjNGY1YWQwMTA3MzViNjllYjA4MjQ2MGU3ZTExYmI4NTBjM2FkN2M4MjAyNzFiMzViNmFiMDcyOTExNGExOGE2YWUwMmFiYWJmZGM0Yzc1ZWZiZjA0In1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcIm1haW5uZXQwMVwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e30sXCJjb2RlXCI6XCIoY29pbi50cmFuc2ZlciBcXFwiNjUyYTg4MzFhNWFkMjQzOTYxNWM4NzQ2NzliNjAwN2EwMzUzOTg1Mjk3YzhmN2MzNDhmMzhhYzYxODZiNzBmN1xcXCIgXFxcIjlhMjEyYjZiZDM5ZmZlOWMzZTIxNTk5ZDMyOWEzYTg0YzkwN2NkNGJlMWYzYjUyYWE0ZmU3NmEzNjk1Yzk1ODFcXFwiIDEwLjEzKVwifX0sXCJzaWduZXJzXCI6W3tcInB1YktleVwiOlwiNjUyYTg4MzFhNWFkMjQzOTYxNWM4NzQ2NzliNjAwN2EwMzUzOTg1Mjk3YzhmN2MzNDhmMzhhYzYxODZiNzBmN1wiLFwiY2xpc3RcIjpbe1wiYXJnc1wiOltdLFwibmFtZVwiOlwiY29pbi5HQVNcIn0se1wiYXJnc1wiOltcIjY1MmE4ODMxYTVhZDI0Mzk2MTVjODc0Njc5YjYwMDdhMDM1Mzk4NTI5N2M4ZjdjMzQ4ZjM4YWM2MTg2YjcwZjdcIixcIjlhMjEyYjZiZDM5ZmZlOWMzZTIxNTk5ZDMyOWEzYTg0YzkwN2NkNGJlMWYzYjUyYWE0ZmU3NmEzNjk1Yzk1ODFcIiwxMC4xM10sXCJuYW1lXCI6XCJjb2luLlRSQU5TRkVSXCJ9XX1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjE2MDIzODI1NTgsXCJ0dGxcIjoyODgwMCxcImdhc0xpbWl0XCI6NjAwLFwiY2hhaW5JZFwiOlwiMFwiLFwiZ2FzUHJpY2VcIjoxLjBlLTUsXCJzZW5kZXJcIjpcIjY1MmE4ODMxYTVhZDI0Mzk2MTVjODc0Njc5YjYwMDdhMDM1Mzk4NTI5N2M4ZjdjMzQ4ZjM4YWM2MTg2YjcwZjdcIn0sXCJub25jZVwiOlwiXFxcIjIwMjAtMTAtMTFUMDI6MTc6MDMuNTM3WlxcXCJcIn0ifQ","eyJnYXMiOjU3MiwicmVzdWx0Ijp7InN0YXR1cyI6InN1Y2Nlc3MiLCJkYXRhIjoiV3JpdGUgc3VjY2VlZGVkIn0sInJlcUtleSI6ImxUallvbWhBQ0hFMXpqYURZb251elRiZnRFdUx6dkhMTU1BOXcyNEhWOUkiLCJsb2dzIjoicERxbDlQazJBSHAwanEyVzRWQmZPWmpWWEhTTHRqMklBWGZ0TlRBZXBFVSIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjEyNzIzNTN9"]],"minerData":"eyJhY2NvdW50IjoiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCIsInByZWRpY2F0ZSI6ImtleXMtYWxsIiwicHVibGljLWtleXMiOlsiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCJdfQ","transactionsHash":"Fzhmc04Cub7YcLd2ybMKBok8TpBQ6-W_msAV8gFzuhM","outputsHash":"VsGmieWzCV3nwDHFtdKrGd61mycmtv_vJ9mI0VZrONI","payloadHash":"smUiDW9jfD_0vrdt4-fXKT_lqC90RsgEGObdp3FznFY","coinbase":"eyJnYXMiOjAsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6IldyaXRlIHN1Y2NlZWRlZCJ9LCJyZXFLZXkiOiJJbXN3WVc0d2NVVlBVblZ6Y1ZGbk9WcHFTM0o0WVMwd1FtOHdMV2hSVmxsTVdIRlhhVFZNU0hobk0yc2kiLCJsb2dzIjoicDkzUW00LVdGYnpFb0R6Y0FoSEFWZTd6N21kaFQ0UG9yMVJ0S2QydWR1YyIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjEyNzIzNTF9"}}],"limit":2}},"base64HeaderPage":{"value":{"next":"inclusive:o1S4NNFhKWg8T1HEkmDvsTH9Ut9l3_qHRpp00yRKZIk","items":["AAAAAAAAAABRoiLHW7EFAB2lwAatTykipYZ3CZNPzLe-f5S-zUt8COtu0H12f_OZAwAFAAAAMpic85rur2MYf3zli8s8bHxTFjriFoMPTr6ZPs8sjxMKAAAAVBKuhU_hQmuvKlx88A5o-FH0rzNo59NsdxmOGNBQ-ycPAAAAMItdqgHZxf7j6l0oE8X-G9-VyMbnQmZrtSniuRe_EJ9CtyxsSb7daPIIYAaXMgSEsQ3dkxY5GjJjLwAAAAAAABqWlmx5B6wo0YWPIShNKmdVrAQWht2P85BS1drGLpkAAAAAADUJ-ARn7blgHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEIPAAAAAAAFAAAA-na5gFuxBQAFL-3CY4YuAJNGp9KhDkbrKkIPWYyq8WvtAaNPoUFWC16louSx8YN5","AAAAAAAAAAA0slHKW7EFAJNGp9KhDkbrKkIPWYyq8WvtAaNPoUFWC16louSx8YN5AwAFAAAAALcxv1ZiwwQ_QX9eOBZMbzIop6n7XtveS1FqOFwyvGMKAAAAC76ElC60qXSJQCHePpzzJxsCYvvrqvmkoHPyZnex-4QPAAAAKv0sz_rTANjoiJwMrdZFCJNFwdH0U_M5ouwMr3BXBfpCtyxsSb7daPIIYAaXMgSEsQ3dkxY5GjJjLwAAAAAAALJlIg1vY3w_9L63bePn1yk_5agvdEbIBBjm3adxc5xWAAAAAGzpBzdiVL9gHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUIPAAAAAAAFAAAA-na5gFuxBQALiBhXgqaHAb4VWug3oddEVy0X9y_jEkE2Kmi_vyGP5ovr-fDIz_Uf"],"limit":2}},"info":{"value":{"nodeNumberOfChains":20,"nodeApiVersion":"0.0","nodeChains":["12","13","14","15","8","9","10","11","4","5","6","7","0","16","1","17","2","18","3","19"],"nodeVersion":"mainnet01","nodeGraphHistory":[[0,[[0,[5,2,3]],[1,[4,6,3]],[2,[4,7,0]],[3,[8,0,1]],[4,[9,1,2]],[5,[9,6,0]],[6,[5,7,1]],[7,[8,6,2]],[8,[9,7,3]],[9,[8,4,5]]]],[852054,[[0,[15,10,5]],[1,[11,6,16]],[2,[12,7,17]],[3,[13,8,18]],[4,[14,9,19]],[5,[8,7,0]],[6,[8,9,1]],[7,[9,5,2]],[8,[5,6,3]],[9,[4,6,7]],[10,[11,0,19]],[11,[12,10,1]],[12,[13,11,2]],[13,[12,14,3]],[14,[13,15,4]],[15,[14,0,16]],[16,[15,1,17]],[17,[16,2,18]],[18,[17,3,19]],[19,[10,4,18]]]]]}},"cut":{"value":{"origin":null,"height":30798466,"weight":"b0wYplmNiTBXCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","hashes":{"0":{"height":1539923,"hash":"qEaSmWt_tDcJC9AGbgWY9x12LW5VED7hGgfyz9x_S3w"},"1":{"height":1539923,"hash":"TJuC6nfhamfD517gspAZmqD9umR71nAgttDOi1JbBHw"},"2":{"height":1539924,"hash":"4ineCWfnO1rneWuBMLPzqTl2HF_sZpypT_3TEzf3VLc"},"3":{"height":1539924,"hash":"ZEOMXB2ByqzL2HfYVKIZKAnoe4wIeJ2SaltnXDir59k"},"4":{"height":1539923,"hash":"0g0rOoSznVW2BJDBmK0Lbxz22F-sxTZUNIrUs_Q8Ye4"},"5":{"height":1539923,"hash":"5y_TL-clnF_wELMBKyJk0Sz8RVShw_bGQETJdrMkADA"},"6":{"height":1539923,"hash":"YkQKv6P4_C4jRM3RqKK9FWPxIneeLzlkKQS9ATAQYRk"},"7":{"height":1539923,"hash":"j_hJ9iiH_ATyeQeeRN3auGXjbBWiFgnTU0dYPIz8cKM"},"8":{"height":1539924,"hash":"s7c3B55VbDsS6EJ-nc9S5k2kNbPOBGI8xxF3vUg4d4Q"},"9":{"height":1539922,"hash":"bowQf63xSY9owHKhK1yGee2Q0Fn8yL_oCLaEUn-CGoA"},"10":{"height":1539924,"hash":"uP-pHW4QKrV9fN1mlDGwKuaiIDlJW7xYSj1nW53EHM4"},"11":{"height":1539924,"hash":"TIhegjZ0GEC73T4m0BVuFtfLNGuS56IUWEuf93AJ5UU"},"12":{"height":1539923,"hash":"-j1qcAS9Fs-WQmc3WEhzZ96VojxnlIA2TFpfyIv31Zs"},"13":{"height":1539923,"hash":"S-4TqMgWGlK1k33XRlU9w0Lfwr0RvkO5Jn78Au1OglM"},"14":{"height":1539923,"hash":"xSuULf--S4TrgYNz82deaGhnPLWrg3pXkynGeUPUGwA"},"15":{"height":1539923,"hash":"jsc9rugvcHXDiBAuoO9_j8R_b_jchtJJ8b5596i8wVg"},"16":{"height":1539923,"hash":"qs1aEY8kSxfUBb_JRVswv5dYINRXBjGJteC-6RC1hjc"},"17":{"height":1539924,"hash":"xzVBXaQxzlUfUrakDgppUubQBRXGh-Uy0HBdMNwCq_Y"},"18":{"height":1539924,"hash":"4VOHPAqwioySYRycdl5MxfscQHwtlwwCAt7AySYQT98"},"19":{"height":1539923,"hash":"1PrRg20XyQ_2cfgGOgNK9K-cqIJ1vO8-A-RJlfN5m00"}},"id":"BBz7KeurYTeQ0hMGbwUbQC84cRbVcacoDQTye-3qkXI","instance":"mainnet01"}},"payloadHash":{"value":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA"},"payloadHashes":{"value":["GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA","jcQOWz7K9qKnkUv4Z883D2ZjkFFGgccoSroWGaoogLM"]},"payloads":{"value":[{"transactions":[],"minerData":"eyJhY2NvdW50IjoiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCIsInByZWRpY2F0ZSI6ImtleXMtYWxsIiwicHVibGljLWtleXMiOlsiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCJdfQ","transactionsHash":"nT0j4xw2woMkdXXaopdurXIn24OG-jNMqQzUGfxV_MA","outputsHash":"4pXRrZ2K0_V0iGAxQCKrKdLjQTBZHBOQS7P-47kdnhY","payloadHash":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA"},{"transactions":["eyJoYXNoIjoiMi16Q3dmRFZZR010WHljd2pTLXRlNzh5U3l3T3JXcjNSdUhiQlJnNDdhRSIsInNpZ3MiOlt7InNpZyI6ImZiMTVkNzkyYTNkNDM1MDI5ODJmOGQ1MGUyMzA1NTI5OWEwZjdhMWRmMWE4YjUyMmE5NTMxNWUyZDljY2MyNmE1MzI4M2I5YTNhNDM5ZWE0ZGY4MGM1ZTIwMjg4NDhjNjFhMWY0MGM5OWIyOTYzOWM0NGNkYTgwMzBmYmViYjBjIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcIm1haW5uZXQwMVwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e30sXCJjb2RlXCI6XCIoY29pbi50cmFuc2ZlciBcXFwiZTc1NzU4ZGQyYTFjNTk2NDRjMjJlMDQyYzZlYzA3NTI2ZWE0ZTU3MTU0ZjlkYmMyMDc2ZThhODRhYzE5NGYzMlxcXCIgXFxcIjQ2NzdhMDllYTE2MDJlNGUwOWZlMDFlYjExOTZjZjQ3YzBmNDRhYTQ0YWFjOTAzZDVmNjFiZTdkYTM0MjUxMjhcXFwiIDMuNzc2KVwifX0sXCJzaWduZXJzXCI6W3tcInB1YktleVwiOlwiZTc1NzU4ZGQyYTFjNTk2NDRjMjJlMDQyYzZlYzA3NTI2ZWE0ZTU3MTU0ZjlkYmMyMDc2ZThhODRhYzE5NGYzMlwiLFwiY2xpc3RcIjpbe1wiYXJnc1wiOltdLFwibmFtZVwiOlwiY29pbi5HQVNcIn0se1wiYXJnc1wiOltcImU3NTc1OGRkMmExYzU5NjQ0YzIyZTA0MmM2ZWMwNzUyNmVhNGU1NzE1NGY5ZGJjMjA3NmU4YTg0YWMxOTRmMzJcIixcIjQ2NzdhMDllYTE2MDJlNGUwOWZlMDFlYjExOTZjZjQ3YzBmNDRhYTQ0YWFjOTAzZDVmNjFiZTdkYTM0MjUxMjhcIiwzLjc3Nl0sXCJuYW1lXCI6XCJjb2luLlRSQU5TRkVSXCJ9XX1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjE2MDIzODI4MTQsXCJ0dGxcIjoyODgwMCxcImdhc0xpbWl0XCI6NjAwLFwiY2hhaW5JZFwiOlwiMFwiLFwiZ2FzUHJpY2VcIjoxLjBlLTUsXCJzZW5kZXJcIjpcImU3NTc1OGRkMmExYzU5NjQ0YzIyZTA0MmM2ZWMwNzUyNmVhNGU1NzE1NGY5ZGJjMjA3NmU4YTg0YWMxOTRmMzJcIn0sXCJub25jZVwiOlwiXFxcIjIwMjAtMTAtMTFUMDI6MjE6MTQuMTk0WlxcXCJcIn0ifQ"],"minerData":"eyJhY2NvdW50IjoiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCIsInByZWRpY2F0ZSI6ImtleXMtYWxsIiwicHVibGljLWtleXMiOlsiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCJdfQ","transactionsHash":"lWcQRlj3MV7FSem8P4G-8GMRf1-O7zQqi_AwmWnk-N0","outputsHash":"9BzXZbhjSSevp4K0bYFqi1GdLjeX_DB-4u1T5Em8abs","payloadHash":"jcQOWz7K9qKnkUv4Z883D2ZjkFFGgccoSroWGaoogLM"}]},"emptyPayload":{"value":{"transactions":[],"minerData":"eyJhY2NvdW50IjoiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCIsInByZWRpY2F0ZSI6ImtleXMtYWxsIiwicHVibGljLWtleXMiOlsiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCJdfQ","transactionsHash":"nT0j4xw2woMkdXXaopdurXIn24OG-jNMqQzUGfxV_MA","outputsHash":"4pXRrZ2K0_V0iGAxQCKrKdLjQTBZHBOQS7P-47kdnhY","payloadHash":"GpaWbHkHrCjRhY8hKE0qZ1WsBBaG3Y_zkFLV2sYumQA","coinbase":"eyJnYXMiOjAsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6IldyaXRlIHN1Y2NlZWRlZCJ9LCJyZXFLZXkiOiJJa2hoV0VGQ2NURlFTMU5MYkdodVkwcHJNRjlOZERjMVgyeE1OMDVUTTNkSk5qSTNVV1pZV2w4NE5Xc2kiLCJsb2dzIjoiZ3Noak1kWFJrVGxKYmIxalZkQWJ6SVVDcGpQb1JBQ2pEbExzRzBXNkJEMCIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjEyNzIzNTB9"}},"payloadWithTransactions":{"value":{"transactions":[["eyJoYXNoIjoiMi16Q3dmRFZZR010WHljd2pTLXRlNzh5U3l3T3JXcjNSdUhiQlJnNDdhRSIsInNpZ3MiOlt7InNpZyI6ImZiMTVkNzkyYTNkNDM1MDI5ODJmOGQ1MGUyMzA1NTI5OWEwZjdhMWRmMWE4YjUyMmE5NTMxNWUyZDljY2MyNmE1MzI4M2I5YTNhNDM5ZWE0ZGY4MGM1ZTIwMjg4NDhjNjFhMWY0MGM5OWIyOTYzOWM0NGNkYTgwMzBmYmViYjBjIn1dLCJjbWQiOiJ7XCJuZXR3b3JrSWRcIjpcIm1haW5uZXQwMVwiLFwicGF5bG9hZFwiOntcImV4ZWNcIjp7XCJkYXRhXCI6e30sXCJjb2RlXCI6XCIoY29pbi50cmFuc2ZlciBcXFwiZTc1NzU4ZGQyYTFjNTk2NDRjMjJlMDQyYzZlYzA3NTI2ZWE0ZTU3MTU0ZjlkYmMyMDc2ZThhODRhYzE5NGYzMlxcXCIgXFxcIjQ2NzdhMDllYTE2MDJlNGUwOWZlMDFlYjExOTZjZjQ3YzBmNDRhYTQ0YWFjOTAzZDVmNjFiZTdkYTM0MjUxMjhcXFwiIDMuNzc2KVwifX0sXCJzaWduZXJzXCI6W3tcInB1YktleVwiOlwiZTc1NzU4ZGQyYTFjNTk2NDRjMjJlMDQyYzZlYzA3NTI2ZWE0ZTU3MTU0ZjlkYmMyMDc2ZThhODRhYzE5NGYzMlwiLFwiY2xpc3RcIjpbe1wiYXJnc1wiOltdLFwibmFtZVwiOlwiY29pbi5HQVNcIn0se1wiYXJnc1wiOltcImU3NTc1OGRkMmExYzU5NjQ0YzIyZTA0MmM2ZWMwNzUyNmVhNGU1NzE1NGY5ZGJjMjA3NmU4YTg0YWMxOTRmMzJcIixcIjQ2NzdhMDllYTE2MDJlNGUwOWZlMDFlYjExOTZjZjQ3YzBmNDRhYTQ0YWFjOTAzZDVmNjFiZTdkYTM0MjUxMjhcIiwzLjc3Nl0sXCJuYW1lXCI6XCJjb2luLlRSQU5TRkVSXCJ9XX1dLFwibWV0YVwiOntcImNyZWF0aW9uVGltZVwiOjE2MDIzODI4MTQsXCJ0dGxcIjoyODgwMCxcImdhc0xpbWl0XCI6NjAwLFwiY2hhaW5JZFwiOlwiMFwiLFwiZ2FzUHJpY2VcIjoxLjBlLTUsXCJzZW5kZXJcIjpcImU3NTc1OGRkMmExYzU5NjQ0YzIyZTA0MmM2ZWMwNzUyNmVhNGU1NzE1NGY5ZGJjMjA3NmU4YTg0YWMxOTRmMzJcIn0sXCJub25jZVwiOlwiXFxcIjIwMjAtMTAtMTFUMDI6MjE6MTQuMTk0WlxcXCJcIn0ifQ","eyJnYXMiOjU3MiwicmVzdWx0Ijp7InN0YXR1cyI6InN1Y2Nlc3MiLCJkYXRhIjoiV3JpdGUgc3VjY2VlZGVkIn0sInJlcUtleSI6IjItekN3ZkRWWUdNdFh5Y3dqUy10ZTc4eVN5d09yV3IzUnVIYkJSZzQ3YUUiLCJsb2dzIjoiSU1ra1VFZmVGak45bFQxZ0gtX2ZNT1dDRklrU1d6aVNTZHF2eEo4dS16RSIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjEyNzIzNzJ9"]],"minerData":"eyJhY2NvdW50IjoiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCIsInByZWRpY2F0ZSI6ImtleXMtYWxsIiwicHVibGljLWtleXMiOlsiYTFiMzE0MGNiN2NjODk1YzBlMDkxNzAyZWQwNTU3OWZiZTA1YzZlNjc0NWY4MmNlNjAzNzQ2YjQwMGM4MTU0OCJdfQ","transactionsHash":"lWcQRlj3MV7FSem8P4G-8GMRf1-O7zQqi_AwmWnk-N0","outputsHash":"9BzXZbhjSSevp4K0bYFqi1GdLjeX_DB-4u1T5Em8abs","payloadHash":"jcQOWz7K9qKnkUv4Z883D2ZjkFFGgccoSroWGaoogLM","coinbase":"eyJnYXMiOjAsInJlc3VsdCI6eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6IldyaXRlIHN1Y2NlZWRlZCJ9LCJyZXFLZXkiOiJJbkV4WDFkUk16SnliRmhCWW1KcU9WTnZkMXB2YmtabmNHRXdlRnBXUWtKdmNUWTJiRk0xY0RSQ1ZVVWkiLCJsb2dzIjoiSVc0N0QxTXFMVW9mRnNKbWpoWGdDZnhnb2Fzb0xTc05YZUFiOFRPb2NCNCIsIm1ldGFEYXRhIjpudWxsLCJjb250aW51YXRpb24iOm51bGwsInR4SWQiOjEyNzIzNzB9"}},"payloadsWithOutputs":{"value":[{"$ref":"#/components/examples/emptyPayload"},{"$ref":"#/components/examples/payloadWithTransactions"}]},"nodeConfig":{"value":{"allowReadsInLocal":false,"rosetta":true,"throttling":{"local":1,"mining":2,"global":200,"putPeer":21},"serviceApi":{"interface":"invalid","port":0},"validateHashesOnReplay":false,"chainwebVersion":"mainnet01","pactQueueSize":2000,"mining":{"coordination":{"enabled":false,"updateStreamTimeout":240,"limit":1200,"updateStreamLimit":2000,"miners":[]},"nodeMining":{"miner":{"account":"","predicate":"keys-all","public-keys":[]},"enabled":false}},"p2p":{"peer":{"certificateChainFile":null,"key":null,"interface":"*","certificateChain":null,"hostaddress":{"hostname":"34.70.108.163","port":1789},"keyFile":null},"maxPeerCount":100,"private":false,"ignoreBootstrapNodes":false,"maxSessionCount":8,"bootstrapReachability":0.5,"sessionTimeout":300,"peers":[{"address":{"hostname":"us-e1.chainweb.com","port":443},"id":null},{"address":{"hostname":"us-w1.chainweb.com","port":443},"id":null}]},"transactionIndex":{"enabled":true,"configuration":{}},"gasLimitOfBlock":150000,"reorgLimit":480,"headerStream":true,"mempoolP2p":{"enabled":true,"configuration":{"pollInterval":30,"maxSessionCount":6,"sessionTimeout":240}},"reintroTxs":true,"cuts":{"pruneChainDatabase":"none","fetchTimeout":3000000,"initialCutHeightLimit":null}}}}},"x-readme":{"explorer-enabled":true,"proxy-enabled":true}}